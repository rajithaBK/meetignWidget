{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Changes server url when it fails\n */\n\n\nvar ServerErrorInterceptor = /*#__PURE__*/function (_Interceptor) {\n  (0, _inherits2.default)(ServerErrorInterceptor, _Interceptor);\n\n  var _super = _createSuper(ServerErrorInterceptor);\n\n  function ServerErrorInterceptor() {\n    (0, _classCallCheck2.default)(this, ServerErrorInterceptor);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ServerErrorInterceptor, [{\n    key: \"onResponseError\",\n    value:\n    /**\n     * @see Interceptor#onResponseError\n     * @param {Object} options\n     * @param {Object} reason\n     * @returns {Object}\n     */\n    function onResponseError(options, reason) {\n      if ((reason instanceof _webexCore.WebexHttpError.InternalServerError || reason instanceof _webexCore.WebexHttpError.BadGateway || reason instanceof _webexCore.WebexHttpError.ServiceUnavailable) && options.uri) {\n        var feature = this.webex.internal.device.features.developer.get('web-high-availability');\n\n        if (feature && feature.value) {\n          this.webex.internal.metrics.submitClientMetrics('web-ha', {\n            fields: {\n              success: false\n            },\n            tags: {\n              action: 'failed',\n              error: reason.message,\n              url: options.uri\n            }\n          });\n          return _promise.default.resolve(this.webex.internal.services.markFailedUrl(options.uri)).then(function () {\n            return _promise.default.reject(reason);\n          });\n        }\n      }\n\n      return _promise.default.reject(reason);\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\n    * @returns {HAMessagingInterceptor}\n    */\n    function create() {\n      // eslint-disable-next-line no-invalid-this\n      return new ServerErrorInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return ServerErrorInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = ServerErrorInterceptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;IACqBA,sB;;;;;;;;;;;;;AAUnB;AACF;AACA;AACA;AACA;AACA;AACE,6BAAgBC,OAAhB,EAAyBC,MAAzB,EAAiC;AAC/B,UAAI,CAACA,MAAM,YAAYC,0BAAeC,mBAAjCF,IAAwDA,MAAM,YAAYC,0BAAeE,UAAzFH,IAAuGA,MAAM,YAAYC,0BAAeG,kBAAzI,KAAgKL,OAAO,CAACM,GAA5K,EAAiL;AAC/K,YAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,QAA3B,CAAoCC,SAApC,CAA8CC,GAA9C,CAAkD,uBAAlD,CAAhB;;AAEA,YAAIN,OAAO,IAAIA,OAAO,CAACO,KAAvB,EAA8B;AAC5B,eAAKN,KAAL,CAAWC,QAAX,CAAoBM,OAApB,CAA4BC,mBAA5B,CAAgD,QAAhD,EAA0D;AACxDC,kBAAM,EAAE;AAACC,qBAAO,EAAE;AAAV,aADgD;AAExDC,gBAAI,EAAE;AAACC,oBAAM,EAAE,QAAT;AAAmBC,mBAAK,EAAEpB,MAAM,CAACqB,OAAjC;AAA0CC,iBAAG,EAAEvB,OAAO,CAACM;AAAvD;AAFkD,WAA1D;AAKA,iBAAOkB,iBAAQC,OAAR,CAAgB,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,QAApB,CAA6BC,aAA7B,CAA2C3B,OAAO,CAACM,GAAnD,CAAhB,EACJsB,IADI,CACC;AAAA,mBAAMJ,iBAAQK,MAAR,CAAe5B,MAAf,CAAN;AADD,YAAP;AAED;AACF;;AAED,aAAOuB,iBAAQK,MAAR,CAAe5B,MAAf,CAAP;AACD;;;;AA/BD;AACF;AACA;AACE,sBAAgB;AACd;AACA,aAAO,IAAIF,sBAAJ,CAA2B;AAACS,aAAK,EAAE;AAAR,OAA3B,CAAP;AACD;;;EAPiDsB,qB","names":["ServerErrorInterceptor","options","reason","WebexHttpError","InternalServerError","BadGateway","ServiceUnavailable","uri","feature","webex","internal","device","features","developer","get","value","metrics","submitClientMetrics","fields","success","tags","action","error","message","url","_promise","resolve","services","markFailedUrl","then","reject","Interceptor"],"sources":["server-error.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\nimport {WebexHttpError} from '@webex/webex-core';\n/**\n * Changes server url when it fails\n */\nexport default class ServerErrorInterceptor extends Interceptor {\n  /**\n  * @returns {HAMessagingInterceptor}\n  */\n  static create() {\n    // eslint-disable-next-line no-invalid-this\n    return new ServerErrorInterceptor({webex: this});\n  }\n\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Object} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    if ((reason instanceof WebexHttpError.InternalServerError || reason instanceof WebexHttpError.BadGateway || reason instanceof WebexHttpError.ServiceUnavailable) && options.uri) {\n      const feature = this.webex.internal.device.features.developer.get('web-high-availability');\n\n      if (feature && feature.value) {\n        this.webex.internal.metrics.submitClientMetrics('web-ha', {\n          fields: {success: false},\n          tags: {action: 'failed', error: reason.message, url: options.uri}\n        });\n\n        return Promise.resolve(this.webex.internal.services.markFailedUrl(options.uri))\n          .then(() => Promise.reject(reason));\n      }\n    }\n\n    return Promise.reject(reason);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}