{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Allows the user of the SDK to set default options that apply every http request made by the SDK\n * For example a default timeout could be set for all requests like this :\n *\n *   webex = WebexSdk.init({\n *     credentials: {\n *       supertoken: superToken\n *     },\n *     config: {\n *       credentials: {\n *         client_id,\n *         client_secret\n *       },\n *       defaultRequestOptions: {\n *         timeout: 15000\n *       }\n *     }\n *   });\n */\n\n\nvar DefaultOptionsInterceptor = /*#__PURE__*/function (_Interceptor) {\n  (0, _inherits2.default)(DefaultOptionsInterceptor, _Interceptor);\n\n  var _super = _createSuper(DefaultOptionsInterceptor);\n\n  function DefaultOptionsInterceptor() {\n    (0, _classCallCheck2.default)(this, DefaultOptionsInterceptor);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(DefaultOptionsInterceptor, [{\n    key: \"onRequest\",\n    value:\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @returns {Object}\n     */\n    function onRequest(options) {\n      var defaultOptions = this.webex.config.defaultRequestOptions;\n\n      if (!defaultOptions) {\n        return options;\n      }\n\n      (0, _keys.default)(defaultOptions).forEach(function (key) {\n        // don't override any existing option properties\n        if (!(0, _keys.default)(options).includes(key)) {\n          options[key] = defaultOptions[key];\n        }\n      });\n      return options;\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\n     * @returns {DefaultOptionsInterceptor}\n     */\n    function create() {\n      return new DefaultOptionsInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return DefaultOptionsInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = DefaultOptionsInterceptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACqBA,yB;;;;;;;;;;;;;AAQnB;AACF;AACA;AACA;AACA;AACE,uBAAUC,OAAV,EAAmB;AACjB,UAA8BC,cAA9B,GAAgD,KAAKC,KAAL,CAAWC,MAAX,CAAzCC,qBAAP;;AAEA,UAAI,CAACH,cAAL,EAAqB;AACnB,eAAOD,OAAP;AACD;;AAED,yBAAYC,cAAZ,EAA4BI,OAA5B,CAAoC,UAACC,GAAD,EAAS;AAC3C;AACA,YAAI,CAAC,mBAAYN,OAAZ,EAAqBO,QAArB,CAA8BD,GAA9B,CAAL,EAAyC;AACvCN,iBAAO,CAACM,GAAD,CAAPN,GAAeC,cAAc,CAACK,GAAD,CAA7BN;AACD;AAJH;AAOA,aAAOA,OAAP;AACD;;;;AA3BD;AACF;AACA;AACE,sBAAgB;AACd,aAAO,IAAID,yBAAJ,CAA8B;AAACG,aAAK,EAAE;AAAR,OAA9B,CAAP;AACD;;;EANoDM,qB","names":["DefaultOptionsInterceptor","options","defaultOptions","webex","config","defaultRequestOptions","forEach","key","includes","Interceptor"],"sources":["default-options.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\n\n/**\n * Allows the user of the SDK to set default options that apply every http request made by the SDK\n * For example a default timeout could be set for all requests like this :\n *\n *   webex = WebexSdk.init({\n *     credentials: {\n *       supertoken: superToken\n *     },\n *     config: {\n *       credentials: {\n *         client_id,\n *         client_secret\n *       },\n *       defaultRequestOptions: {\n *         timeout: 15000\n *       }\n *     }\n *   });\n */\nexport default class DefaultOptionsInterceptor extends Interceptor {\n  /**\n   * @returns {DefaultOptionsInterceptor}\n   */\n  static create() {\n    return new DefaultOptionsInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    const {defaultRequestOptions: defaultOptions} = this.webex.config;\n\n    if (!defaultOptions) {\n      return options;\n    }\n\n    Object.keys(defaultOptions).forEach((key) => {\n      // don't override any existing option properties\n      if (!Object.keys(options).includes(key)) {\n        options[key] = defaultOptions[key];\n      }\n    });\n\n    return options;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}