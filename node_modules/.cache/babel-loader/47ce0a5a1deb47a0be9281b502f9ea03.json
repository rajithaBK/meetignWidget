{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _loggerProxy = _interopRequireDefault(require(\"../common/logs/logger-proxy\"));\n\nvar _constants = require(\"../constants\");\n/**\n * @class RechabilityRequest\n */\n\n\nvar RechabilityRequest =\n/**\n * Creates an instance of RechabilityRequest.\n * @param {object} webex\n * @memberof RechabilityRequest\n */\nfunction RechabilityRequest(webex) {\n  var _this = this;\n\n  (0, _classCallCheck2.default)(this, RechabilityRequest);\n  (0, _defineProperty2.default)(this, \"getClusters\", function () {\n    return _this.webex.request({\n      method: _constants.HTTP_VERBS.GET,\n      shouldRefreshAccessToken: false,\n      api: _constants.API.CALLIOPEDISCOVERY,\n      resource: _constants.RESOURCE.CLUSTERS\n    }).then(function (res) {\n      var clusters = res.body.clusters;\n\n      _loggerProxy.default.logger.log(\"Reachability:request#getClusters --> get clusters successful:\".concat((0, _stringify.default)(clusters)));\n\n      return clusters;\n    });\n  });\n  (0, _defineProperty2.default)(this, \"remoteSDPForClusters\", function (localSDPList) {\n    return _this.webex.request({\n      method: _constants.HTTP_VERBS.POST,\n      shouldRefreshAccessToken: false,\n      api: _constants.API.CALLIOPEDISCOVERY,\n      resource: _constants.RESOURCE.REACHABILITY,\n      body: {\n        offers: localSDPList\n      }\n    }).then(function (res) {\n      _loggerProxy.default.logger.log('Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully');\n\n      return res.body;\n    });\n  });\n  this.webex = webex;\n}\n/**\n * gets the cluster information\n * @returns {Promise}\n */\n;\n\nvar _default = RechabilityRequest;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;AAMA;AACA;AACA;;;IACMA,kB;AACJ;AACF;AACA;AACA;AACA;AACE,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AAAA,qDAQL;AAAA,WAAMC,KAAI,CAACD,KAAL,CAAWE,OAAX,CAAmB;AACrCC,YAAM,EAAEC,sBAAWC,GADkB;AAErCC,8BAAwB,EAAE,KAFW;AAGrCC,SAAG,EAAEC,eAAIC,iBAH4B;AAIrCC,cAAQ,EAAEC,oBAASC;AAJkB,KAAnB,EAMjBC,IANiB,CAMZ,UAACC,GAAD,EAAS;AACb,UAAOC,QAAP,GAAmBD,GAAG,CAACE,IAAJF,CAAZC,QAAP;;AAEAE,2BAAYC,MAAZD,CAAmBE,GAAnBF,wEAAuF,wBAAeF,QAAf,CAAvF;;AAEA,aAAOA,QAAP;AAXgB,MAAN;AARK;AAAA,8DA2BI,UAACK,YAAD;AAAA,WAAkBnB,KAAI,CAACD,KAAL,CAAWE,OAAX,CAAmB;AAC1DC,YAAM,EAAEC,sBAAWiB,IADuC;AAE1Df,8BAAwB,EAAE,KAFgC;AAG1DC,SAAG,EAAEC,eAAIC,iBAHiD;AAI1DC,cAAQ,EAAEC,oBAASW,YAJuC;AAK1DN,UAAI,EAAE;AAACO,cAAM,EAAEH;AAAT;AALoD,KAAnB,EAOtCP,IAPsC,CAOjC,UAACC,GAAD,EAAS;AACbG,2BAAYC,MAAZD,CAAmBE,GAAnBF,CAAuB,6EAAvBA;;AAEA,aAAOH,GAAG,CAACE,IAAX;AAVqC,MAAlB;AA3BJ;AACjB,OAAKhB,KAAL,GAAaA,KAAb;AACD;AAED;AACF;AACA;AACA;;;eAkCeD","names":["RechabilityRequest","webex","_this","request","method","HTTP_VERBS","GET","shouldRefreshAccessToken","api","API","CALLIOPEDISCOVERY","resource","RESOURCE","CLUSTERS","then","res","clusters","body","LoggerProxy","logger","log","localSDPList","POST","REACHABILITY","offers"],"sources":["request.js"],"sourcesContent":["import LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  HTTP_VERBS,\n  RESOURCE,\n  API\n} from '../constants';\n\n/**\n * @class RechabilityRequest\n */\nclass RechabilityRequest {\n  /**\n   * Creates an instance of RechabilityRequest.\n   * @param {object} webex\n   * @memberof RechabilityRequest\n   */\n  constructor(webex) {\n    this.webex = webex;\n  }\n\n  /**\n   * gets the cluster information\n   * @returns {Promise}\n   */\n  getClusters = () => this.webex.request({\n    method: HTTP_VERBS.GET,\n    shouldRefreshAccessToken: false,\n    api: API.CALLIOPEDISCOVERY,\n    resource: RESOURCE.CLUSTERS\n  })\n    .then((res) => {\n      const {clusters} = res.body;\n\n      LoggerProxy.logger.log(`Reachability:request#getClusters --> get clusters successful:${JSON.stringify(clusters)}`);\n\n      return clusters;\n    });\n\n  /**\n   * gets remote SDP For Clusters\n   * @param {Object} localSDPList localSDPs for the cluster\n   * @returns {Object}\n   */\n  remoteSDPForClusters = (localSDPList) => this.webex.request({\n    method: HTTP_VERBS.POST,\n    shouldRefreshAccessToken: false,\n    api: API.CALLIOPEDISCOVERY,\n    resource: RESOURCE.REACHABILITY,\n    body: {offers: localSDPList}\n  })\n    .then((res) => {\n      LoggerProxy.logger.log('Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully');\n\n      return res.body;\n    });\n}\n\nexport default RechabilityRequest;\n"]},"metadata":{},"sourceType":"script"}