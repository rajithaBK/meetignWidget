{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n_Object$defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _presence.default;\n  }\n});\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _has2 = _interopRequireDefault(require(\"lodash/has\"));\n\nrequire(\"@webex/internal-plugin-device\");\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _presence = _interopRequireDefault(require(\"./presence\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n\n(0, _webexCore.registerInternalPlugin)('presence', _presence.default, {\n  payloadTransformer: {\n    predicates: [{\n      name: 'normalizeSingleStatusResponse',\n      direction: 'inbound',\n      test: function test(ctx, response) {\n        // POST to /apheleia/api/v1/events\n        return _promise.default.resolve((0, _has2.default)(response, 'body.eventType') && (0, _has2.default)(response, 'body.subject'));\n      },\n      extract: function extract(response) {\n        return _promise.default.resolve(response);\n      }\n    }],\n    transforms: [{\n      name: 'normalizeSingleStatusResponse',\n      direction: 'inbound',\n      fn: function fn(ctx, response) {\n        response.body.status = response.body.eventType;\n      }\n    }]\n  },\n  config: _config.default\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAIAA;;AAEA;;AAGA;;AACA;AAVA;AACA;AACA;;;AAUA,uCAAuB,UAAvB,EAAmCC,iBAAnC,EAA6C;AAC3CC,oBAAkB,EAAE;AAClBC,cAAU,EAAE,CACV;AACEC,UAAI,EAAE,+BADR;AAEEC,eAAS,EAAE,SAFb;AAGEC,UAHF,gBAGOC,GAHP,EAGYC,QAHZ,EAGsB;AAClB;AACA,eAAOC,iBAAQC,OAAR,CAAgB,mBAAIF,QAAJ,EAAc,gBAAd,KAAmC,mBAAIA,QAAJ,EAAc,cAAd,CAAnD,CAAP;AALJ;AAOEG,aAPF,mBAOUH,QAPV,EAOoB;AAChB,eAAOC,iBAAQC,OAAR,CAAgBF,QAAhB,CAAP;AACD;AATH,KADU,CADM;AAclBI,cAAU,EAAE,CACV;AACER,UAAI,EAAE,+BADR;AAEEC,eAAS,EAAE,SAFb;AAGEQ,QAHF,cAGKN,GAHL,EAGUC,QAHV,EAGoB;AAChBA,gBAAQ,CAACM,IAATN,CAAcO,MAAdP,GAAuBA,QAAQ,CAACM,IAATN,CAAcQ,SAArCR;AACD;AALH,KADU;AAdM,GADuB;AAyB3CS,QAAM,EAANA;AAzB2C,CAA7C","names":["require","Presence","payloadTransformer","predicates","name","direction","test","ctx","response","_promise","resolve","extract","transforms","fn","body","status","eventType","config"],"sources":["index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport '@webex/internal-plugin-device';\n\nimport {registerInternalPlugin} from '@webex/webex-core';\nimport {has} from 'lodash';\n\nimport Presence from './presence';\nimport config from './config';\n\nregisterInternalPlugin('presence', Presence, {\n  payloadTransformer: {\n    predicates: [\n      {\n        name: 'normalizeSingleStatusResponse',\n        direction: 'inbound',\n        test(ctx, response) {\n          // POST to /apheleia/api/v1/events\n          return Promise.resolve(has(response, 'body.eventType') && has(response, 'body.subject'));\n        },\n        extract(response) {\n          return Promise.resolve(response);\n        }\n      }\n    ],\n    transforms: [\n      {\n        name: 'normalizeSingleStatusResponse',\n        direction: 'inbound',\n        fn(ctx, response) {\n          response.body.status = response.body.eventType;\n        }\n      }\n    ]\n  },\n  config\n});\n\nexport {default} from './presence';\n"]},"metadata":{},"sourceType":"script"}