{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nvar _constants = require(\"../constants\");\n\nvar MembersUtil = {};\n/**\n * @param {Object} invitee with emailAddress, email or phoneNumber\n * @param {String} locusUrl\n * @param {Boolean} alertIfActive\n * @returns {Object} the format object\n */\n\nMembersUtil.generateAddMemberOptions = function (invitee, locusUrl, alertIfActive) {\n  return {\n    invitee: invitee,\n    locusUrl: locusUrl,\n    alertIfActive: alertIfActive\n  };\n};\n/**\n * @param {Array} memberIds\n * @param {String} locusUrl\n * @returns {Object} the format object\n */\n\n\nMembersUtil.generateAdmitMemberOptions = function (memberIds, locusUrl) {\n  return {\n    locusUrl: locusUrl,\n    memberIds: memberIds\n  };\n};\n/**\n * @param {Object} options with {invitee: {emailAddress, email, phoneNumber}, alertIfActive}\n * @returns {Object} with {invitees: [{address}], alertIfActive}\n */\n\n\nMembersUtil.getAddMemberBody = function (options) {\n  return {\n    invitees: [{\n      address: options.invitee.emailAddress || options.invitee.email || options.invitee.phoneNumber\n    }],\n    alertIfActive: options.alertIfActive\n  };\n};\n/**\n * @param {Object} options with {memberIds}\n * @returns {Object} admit with {memberIds}\n */\n\n\nMembersUtil.getAdmitMemberRequestBody = function (options) {\n  return {\n    admit: {\n      participantIds: options.memberIds\n    }\n  };\n};\n/**\n * @param {Object} format with {memberIds, locusUrl}\n * @returns {Object} the request parameters (method, uri, body) needed to make a admitMember request\n */\n\n\nMembersUtil.getAdmitMemberRequestParams = function (format) {\n  var body = MembersUtil.getAdmitMemberRequestBody(format);\n  var uri = \"\".concat(format.locusUrl, \"/\").concat(_constants.CONTROLS);\n  return {\n    method: _constants.HTTP_VERBS.PUT,\n    uri: uri,\n    body: body\n  };\n};\n/**\n * @param {Object} format with {invitee {emailAddress, email, phoneNumber}, locusUrl, alertIfActive}\n * @returns {Object} the request parameters (method, uri, body) needed to make a addMember request\n */\n\n\nMembersUtil.getAddMemberRequestParams = function (format) {\n  var body = MembersUtil.getAddMemberBody(format);\n  var requestParams = {\n    method: _constants.HTTP_VERBS.PUT,\n    uri: format.locusUrl,\n    body: body\n  };\n  return requestParams;\n};\n\nMembersUtil.isInvalidInvitee = function (invitee) {\n  if (!(invitee && (invitee.email || invitee.emailAddress || invitee.phoneNumber))) {\n    return true;\n  }\n\n  if (invitee.phoneNumber) {\n    return !_constants.DIALER_REGEX.E164_FORMAT.test(invitee.phoneNumber);\n  }\n\n  return !_constants.VALID_EMAIL_ADDRESS.test(invitee.email || invitee.emailAddress);\n};\n\nMembersUtil.getRemoveMemberRequestParams = function (options) {\n  var body = {\n    reason: options.reason\n  };\n  var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(options.memberId, \"/\").concat(_constants.LEAVE);\n  return {\n    method: _constants.HTTP_VERBS.PUT,\n    uri: uri,\n    body: body\n  };\n};\n\nMembersUtil.generateTransferHostMemberOptions = function (transfer, moderator, locusUrl) {\n  return {\n    moderator: moderator,\n    locusUrl: locusUrl,\n    memberId: transfer\n  };\n};\n\nMembersUtil.generateRemoveMemberOptions = function (removal, locusUrl) {\n  return {\n    reason: _constants._FORCED_,\n    memberId: removal,\n    locusUrl: locusUrl\n  };\n};\n\nMembersUtil.generateMuteMemberOptions = function (mute, status, locusUrl) {\n  return {\n    memberId: mute,\n    muted: status,\n    locusUrl: locusUrl\n  };\n};\n\nMembersUtil.getMuteMemberRequestParams = function (options) {\n  var body = {\n    audio: {\n      muted: options.muted\n    }\n  };\n  var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(options.memberId, \"/\").concat(_constants.CONTROLS);\n  return {\n    method: _constants.HTTP_VERBS.PATCH,\n    uri: uri,\n    body: body\n  };\n};\n\nMembersUtil.getTransferHostToMemberRequestParams = function (options) {\n  var body = {\n    role: {\n      moderator: options.moderator\n    }\n  };\n  var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(options.memberId, \"/\").concat(_constants.CONTROLS);\n  return {\n    method: _constants.HTTP_VERBS.PATCH,\n    uri: uri,\n    body: body\n  };\n};\n\nMembersUtil.genderateSendDTMFOptions = function (url, tones, memberId, locusUrl) {\n  return {\n    url: url,\n    tones: tones,\n    memberId: memberId,\n    locusUrl: locusUrl\n  };\n};\n\nMembersUtil.generateSendDTMFRequestParams = function (_ref) {\n  var url = _ref.url,\n      tones = _ref.tones,\n      memberId = _ref.memberId,\n      locusUrl = _ref.locusUrl;\n  var body = {\n    device: {\n      url: url\n    },\n    memberId: memberId,\n    dtmf: {\n      correlationId: _uuid.default.v4(),\n      tones: tones,\n      direction: 'transmit'\n    }\n  };\n  var uri = \"\".concat(locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(memberId, \"/\").concat(_constants.SEND_DTMF_ENDPOINT);\n  return {\n    method: _constants.HTTP_VERBS.POST,\n    uri: uri,\n    body: body\n  };\n};\n\nMembersUtil.cancelPhoneInviteOptions = function (invitee, locusUrl) {\n  return {\n    invitee: invitee,\n    locusUrl: locusUrl\n  };\n};\n\nMembersUtil.generateCancelInviteRequestParams = function (options) {\n  var body = {\n    actionType: _constants._REMOVE_,\n    invitees: [{\n      address: options.invitee.phoneNumber\n    }]\n  };\n  var requestParams = {\n    method: _constants.HTTP_VERBS.PUT,\n    uri: options.locusUrl,\n    body: body\n  };\n  return requestParams;\n};\n\nvar _default = MembersUtil;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["MembersUtil","generateAddMemberOptions","invitee","locusUrl","alertIfActive","generateAdmitMemberOptions","memberIds","getAddMemberBody","options","invitees","address","emailAddress","email","phoneNumber","getAdmitMemberRequestBody","admit","participantIds","getAdmitMemberRequestParams","format","body","uri","CONTROLS","method","HTTP_VERBS","PUT","getAddMemberRequestParams","requestParams","isInvalidInvitee","DIALER_REGEX","E164_FORMAT","test","VALID_EMAIL_ADDRESS","getRemoveMemberRequestParams","reason","PARTICIPANT","memberId","LEAVE","generateTransferHostMemberOptions","transfer","moderator","generateRemoveMemberOptions","removal","_FORCED_","generateMuteMemberOptions","mute","status","muted","getMuteMemberRequestParams","audio","PATCH","getTransferHostToMemberRequestParams","role","genderateSendDTMFOptions","url","tones","generateSendDTMFRequestParams","device","dtmf","correlationId","uuid","v4","direction","SEND_DTMF_ENDPOINT","POST","cancelPhoneInviteOptions","generateCancelInviteRequestParams","actionType","_REMOVE_"],"sources":["util.js"],"sourcesContent":["import uuid from 'uuid';\n\nimport {\n  HTTP_VERBS,\n  CONTROLS,\n  _FORCED_,\n  LEAVE,\n  PARTICIPANT,\n  VALID_EMAIL_ADDRESS,\n  DIALER_REGEX,\n  SEND_DTMF_ENDPOINT,\n  _REMOVE_\n} from '../constants';\n\nconst MembersUtil = {};\n\n/**\n * @param {Object} invitee with emailAddress, email or phoneNumber\n * @param {String} locusUrl\n * @param {Boolean} alertIfActive\n * @returns {Object} the format object\n */\nMembersUtil.generateAddMemberOptions = (invitee, locusUrl, alertIfActive) => ({\n  invitee,\n  locusUrl,\n  alertIfActive\n});\n\n/**\n * @param {Array} memberIds\n * @param {String} locusUrl\n * @returns {Object} the format object\n */\nMembersUtil.generateAdmitMemberOptions = (memberIds, locusUrl) => ({\n  locusUrl,\n  memberIds\n});\n\n/**\n * @param {Object} options with {invitee: {emailAddress, email, phoneNumber}, alertIfActive}\n * @returns {Object} with {invitees: [{address}], alertIfActive}\n */\nMembersUtil.getAddMemberBody = (options) => ({\n  invitees: [\n    {\n      address: options.invitee.emailAddress || options.invitee.email || options.invitee.phoneNumber\n    }\n  ],\n  alertIfActive: options.alertIfActive\n});\n\n/**\n * @param {Object} options with {memberIds}\n * @returns {Object} admit with {memberIds}\n */\nMembersUtil.getAdmitMemberRequestBody = (options) => ({\n  admit: {participantIds: options.memberIds}\n});\n\n/**\n * @param {Object} format with {memberIds, locusUrl}\n * @returns {Object} the request parameters (method, uri, body) needed to make a admitMember request\n */\nMembersUtil.getAdmitMemberRequestParams = (format) => {\n  const body = MembersUtil.getAdmitMemberRequestBody(format);\n  const uri = `${format.locusUrl}/${CONTROLS}`;\n\n  return {\n    method: HTTP_VERBS.PUT,\n    uri,\n    body\n  };\n};\n\n/**\n * @param {Object} format with {invitee {emailAddress, email, phoneNumber}, locusUrl, alertIfActive}\n * @returns {Object} the request parameters (method, uri, body) needed to make a addMember request\n */\nMembersUtil.getAddMemberRequestParams = (format) => {\n  const body = MembersUtil.getAddMemberBody(format);\n  const requestParams = {\n    method: HTTP_VERBS.PUT,\n    uri: format.locusUrl,\n    body\n  };\n\n  return requestParams;\n};\n\nMembersUtil.isInvalidInvitee = (invitee) => {\n  if (!(invitee && (invitee.email || invitee.emailAddress || invitee.phoneNumber))) {\n    return true;\n  }\n\n  if (invitee.phoneNumber) {\n    return !DIALER_REGEX.E164_FORMAT.test(invitee.phoneNumber);\n  }\n\n  return !VALID_EMAIL_ADDRESS.test(invitee.email || invitee.emailAddress);\n};\n\nMembersUtil.getRemoveMemberRequestParams = (options) => {\n  const body = {\n    reason: options.reason\n  };\n  const uri = `${options.locusUrl}/${PARTICIPANT}/${options.memberId}/${LEAVE}`;\n\n  return {\n    method: HTTP_VERBS.PUT,\n    uri,\n    body\n  };\n};\n\nMembersUtil.generateTransferHostMemberOptions = (transfer, moderator, locusUrl) => ({\n  moderator,\n  locusUrl,\n  memberId: transfer\n});\n\nMembersUtil.generateRemoveMemberOptions = (removal, locusUrl) => ({\n  reason: _FORCED_,\n  memberId: removal,\n  locusUrl\n});\n\nMembersUtil.generateMuteMemberOptions = (mute, status, locusUrl) => ({\n  memberId: mute,\n  muted: status,\n  locusUrl\n});\n\nMembersUtil.getMuteMemberRequestParams = (options) => {\n  const body = {\n    audio: {\n      muted: options.muted\n    }\n  };\n  const uri = `${options.locusUrl}/${PARTICIPANT}/${options.memberId}/${CONTROLS}`;\n\n  return {\n    method: HTTP_VERBS.PATCH,\n    uri,\n    body\n  };\n};\n\nMembersUtil.getTransferHostToMemberRequestParams = (options) => {\n  const body = {\n    role: {\n      moderator: options.moderator\n    }\n  };\n  const uri = `${options.locusUrl}/${PARTICIPANT}/${options.memberId}/${CONTROLS}`;\n\n  return {\n    method: HTTP_VERBS.PATCH,\n    uri,\n    body\n  };\n};\n\nMembersUtil.genderateSendDTMFOptions = (url, tones, memberId, locusUrl) => ({\n  url,\n  tones,\n  memberId,\n  locusUrl\n});\n\nMembersUtil.generateSendDTMFRequestParams = ({\n  url, tones, memberId, locusUrl\n}) => {\n  const body = {\n    device: {\n      url\n    },\n    memberId,\n    dtmf: {\n      correlationId: uuid.v4(),\n      tones,\n      direction: 'transmit'\n    }\n  };\n  const uri = `${locusUrl}/${PARTICIPANT}/${memberId}/${SEND_DTMF_ENDPOINT}`;\n\n  return {\n    method: HTTP_VERBS.POST,\n    uri,\n    body\n  };\n};\n\nMembersUtil.cancelPhoneInviteOptions = (invitee, locusUrl) => ({\n  invitee,\n  locusUrl\n});\n\nMembersUtil.generateCancelInviteRequestParams = (options) => {\n  const body = {\n    actionType: _REMOVE_,\n    invitees: [\n      {\n        address: options.invitee.phoneNumber\n      }\n    ]\n  };\n  const requestParams = {\n    method: HTTP_VERBS.PUT,\n    uri: options.locusUrl,\n    body\n  };\n\n  return requestParams;\n};\n\nexport default MembersUtil;\n"]},"metadata":{},"sourceType":"script"}