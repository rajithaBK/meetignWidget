{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar FullState = {};\n\nFullState.parse = function (fullState) {\n  return {\n    type: fullState.type || _constants.FULL_STATE.UNKNOWN,\n    meetingState: fullState.state,\n    locked: fullState.locked\n  };\n};\n\nFullState.getFullState = function (oldFullState, newFullState) {\n  var previous = oldFullState && FullState.parse(oldFullState);\n  var current = newFullState && FullState.parse(newFullState);\n  return {\n    previous: previous,\n    current: current,\n    updates: {\n      isMeetingEnded: FullState.isMeetingEnded(previous, current),\n      isMeetingTerminating: FullState.isMeetingTerminating(previous, current),\n      meetingTypeChangedTo: FullState.isTypeChanged(previous, current),\n      meetingStateChangedTo: FullState.meetingStateChange(previous, current)\n    }\n  };\n};\n\nFullState.isMeetingEnded = function (previous, current) {\n  if (current.state === _constants.FULL_STATE.INACTIVE && previous && (previous.state === _constants.FULL_STATE.ACTIVE || previous.state === _constants.FULL_STATE.INITIALIZING || previous.state === _constants.FULL_STATE.TERMINATING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isMeetingTerminating = function (previous, current) {\n  if (current.state === _constants.FULL_STATE.TERMINATING && previous && (previous.state === _constants.FULL_STATE.ACTIVE || previous.state === _constants.FULL_STATE.INITIALIZING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isTypeChanged = function (previous, current) {\n  if (!previous || current.type !== previous.type) {\n    return current && current.type;\n  }\n\n  return null;\n};\n\nFullState.meetingStateChange = function (previous, current) {\n  if (!previous || current.meetingState !== previous.meetingState) {\n    return current && current.meetingState;\n  }\n\n  return null;\n};\n\nvar _default = FullState;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG,EAAlB;;AAEAA,SAAS,CAACC,KAAVD,GAAkB,UAACE,SAAD;AAAA,SAAgB;AAChCC,QAAI,EAAED,SAAS,CAACC,IAAVD,IAAkBE,sBAAWC,OADH;AAEhCC,gBAAY,EAAEJ,SAAS,CAACK,KAFQ;AAGhCC,UAAM,EAAEN,SAAS,CAACM;AAHc,GAAhB;AAAlB;;AAOAR,SAAS,CAACS,YAAVT,GAAyB,UAACU,YAAD,EAAeC,YAAf,EAAgC;AACvD,MAAMC,QAAQ,GAAGF,YAAY,IAAIV,SAAS,CAACC,KAAVD,CAAgBU,YAAhBV,CAAjC;AACA,MAAMa,OAAO,GAAGF,YAAY,IAAIX,SAAS,CAACC,KAAVD,CAAgBW,YAAhBX,CAAhC;AAEA,SAAO;AACLY,YAAQ,EAARA,QADK;AAELC,WAAO,EAAPA,OAFK;AAGLC,WAAO,EAAE;AACPC,oBAAc,EAAEf,SAAS,CAACe,cAAVf,CAAyBY,QAAzBZ,EAAmCa,OAAnCb,CADT;AAEPgB,0BAAoB,EAAEhB,SAAS,CAACgB,oBAAVhB,CAA+BY,QAA/BZ,EAAyCa,OAAzCb,CAFf;AAGPiB,0BAAoB,EAAEjB,SAAS,CAACkB,aAAVlB,CAAwBY,QAAxBZ,EAAkCa,OAAlCb,CAHf;AAIPmB,2BAAqB,EAAEnB,SAAS,CAACoB,kBAAVpB,CAA6BY,QAA7BZ,EAAuCa,OAAvCb;AAJhB;AAHJ,GAAP;AAJF;;AAgBAA,SAAS,CAACe,cAAVf,GAA2B,UAACY,QAAD,EAAWC,OAAX,EAAuB;AAChD,MAAIA,OAAO,CAACN,KAARM,KAAkBT,sBAAWiB,QAA7BR,IAAyCD,QAAzCC,KACFD,QAAQ,CAACL,KAATK,KAAmBR,sBAAWkB,MAA9BV,IACAA,QAAQ,CAACL,KAATK,KAAmBR,sBAAWmB,YAD9BX,IAEAA,QAAQ,CAACL,KAATK,KAAmBR,sBAAWoB,WAH5BX,CAAJ,EAG8C;AAC5C,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AARF;;AAWAb,SAAS,CAACgB,oBAAVhB,GAAiC,UAACY,QAAD,EAAWC,OAAX,EAAuB;AACtD,MAAIA,OAAO,CAACN,KAARM,KAAkBT,sBAAWoB,WAA7BX,IAA4CD,QAA5CC,KACHD,QAAQ,CAACL,KAATK,KAAmBR,sBAAWkB,MAA9BV,IACCA,QAAQ,CAACL,KAATK,KAAmBR,sBAAWmB,YAF5BV,CAAJ,EAE+C;AAC7C,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AAPF;;AAUAb,SAAS,CAACkB,aAAVlB,GAA0B,UAACY,QAAD,EAAWC,OAAX,EAAuB;AAC/C,MAAI,CAACD,QAAD,IAAaC,OAAO,CAACV,IAARU,KAAiBD,QAAQ,CAACT,IAA3C,EAAiD;AAC/C,WAAOU,OAAO,IAAIA,OAAO,CAACV,IAA1B;AACD;;AAED,SAAO,IAAP;AALF;;AAQAH,SAAS,CAACoB,kBAAVpB,GAA+B,UAACY,QAAD,EAAWC,OAAX,EAAuB;AACpD,MAAI,CAACD,QAAD,IAAaC,OAAO,CAACP,YAARO,KAAyBD,QAAQ,CAACN,YAAnD,EAAiE;AAC/D,WAAOO,OAAO,IAAIA,OAAO,CAACP,YAA1B;AACD;;AAED,SAAO,IAAP;AALF;;eAQeN","names":["FullState","parse","fullState","type","FULL_STATE","UNKNOWN","meetingState","state","locked","getFullState","oldFullState","newFullState","previous","current","updates","isMeetingEnded","isMeetingTerminating","meetingTypeChangedTo","isTypeChanged","meetingStateChangedTo","meetingStateChange","INACTIVE","ACTIVE","INITIALIZING","TERMINATING"],"sources":["fullState.js"],"sourcesContent":["import {FULL_STATE} from '../constants';\n\nconst FullState = {};\n\nFullState.parse = (fullState) => ({\n  type: fullState.type || FULL_STATE.UNKNOWN,\n  meetingState: fullState.state,\n  locked: fullState.locked\n});\n\n\nFullState.getFullState = (oldFullState, newFullState) => {\n  const previous = oldFullState && FullState.parse(oldFullState);\n  const current = newFullState && FullState.parse(newFullState);\n\n  return {\n    previous,\n    current,\n    updates: {\n      isMeetingEnded: FullState.isMeetingEnded(previous, current),\n      isMeetingTerminating: FullState.isMeetingTerminating(previous, current),\n      meetingTypeChangedTo: FullState.isTypeChanged(previous, current),\n      meetingStateChangedTo: FullState.meetingStateChange(previous, current)\n    }\n  };\n};\n\nFullState.isMeetingEnded = (previous, current) => {\n  if (current.state === FULL_STATE.INACTIVE && previous &&\n   (previous.state === FULL_STATE.ACTIVE ||\n    previous.state === FULL_STATE.INITIALIZING ||\n    previous.state === FULL_STATE.TERMINATING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isMeetingTerminating = (previous, current) => {\n  if (current.state === FULL_STATE.TERMINATING && previous &&\n  (previous.state === FULL_STATE.ACTIVE ||\n    previous.state === FULL_STATE.INITIALIZING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isTypeChanged = (previous, current) => {\n  if (!previous || current.type !== previous.type) {\n    return current && current.type;\n  }\n\n  return null;\n};\n\nFullState.meetingStateChange = (previous, current) => {\n  if (!previous || current.meetingState !== previous.meetingState) {\n    return current && current.meetingState;\n  }\n\n  return null;\n};\n\nexport default FullState;\n"]},"metadata":{},"sourceType":"script"}