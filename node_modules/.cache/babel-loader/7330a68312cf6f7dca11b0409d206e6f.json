{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _common = require(\"@webex/common\");\n\nvar _default = {\n  device: {\n    /**\n     * The duration to wait for the catalog to populate in seconds.\n     *\n     * @type {number}\n     */\n    canRegisterWaitDuration: 10,\n\n    /**\n     * The default configuration group when sending registration requests.\n     *\n     * @type {Object}\n     */\n    defaults: {\n      /**\n       * The default body configuration of registration requests.\n       *\n       * @type {Object}\n       */\n      body: {\n        name: (typeof process.title === 'string' ? process.title.trim() : undefined) || _common.inBrowser && 'browser' || 'javascript',\n        deviceType: _common.deviceType.WEB,\n        model: 'web-js-sdk',\n        localizedModel: 'webex-js-sdk',\n        systemName: 'WEBEX_JS_SDK',\n        systemVersion: '1.0.0'\n      }\n    },\n\n    /**\n     * When true, the **wdm** service will enforce an inactivity duration.\n     *\n     * @type {boolean}\n     */\n    enableInactivityEnforcement: false,\n\n    /**\n     * When true, the device registration will include a ttl value of\n     * {@link config.device.ephemeralDeviceTTL} and refresh on an interval of\n     * {@link config.device.ephemeralDeviceTTL} / 2 + 60 seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeral: false,\n\n    /**\n     * The ttl value to include in device registration if\n     * {@link config.device.ephemeral} is true. Measured in seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeralDeviceTTL: 30 * 60\n  }\n};\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;;eAEe;AACbA,QAAM,EAAE;AAEN;AACJ;AACA;AACA;AACA;AACIC,2BAAuB,EAAE,EAPnB;;AASN;AACJ;AACA;AACA;AACA;AACIC,YAAQ,EAAE;AAER;AACN;AACA;AACA;AACA;AACMC,UAAI,EAAE;AACJC,YAAI,EAAE,CAAC,OAAOC,OAAO,CAACC,KAAf,KAAyB,QAAzB,GACLD,OAAO,CAACC,KAARD,CAAcE,IAAdF,EADK,GACkBG,SADnB,KAEJC,qBAAa,SAFT,IAEsB,YAHxB;AAIJC,kBAAU,EAAEA,mBAAWC,GAJnB;AAKJC,aAAK,EAAE,YALH;AAMJC,sBAAc,EAAE,cANZ;AAOJC,kBAAU,EAAE,cAPR;AAQJC,qBAAa,EAAE;AARX;AAPE,KAdJ;;AAiCN;AACJ;AACA;AACA;AACA;AACIC,+BAA2B,EAAE,KAtCvB;;AAwCN;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,aAAS,EAAE,KA/CL;;AAiDN;AACJ;AACA;AACA;AACA;AACA;AACIC,sBAAkB,EAAE,KAAK;AAvDnB;AADK","names":["device","canRegisterWaitDuration","defaults","body","name","process","title","trim","undefined","inBrowser","deviceType","WEB","model","localizedModel","systemName","systemVersion","enableInactivityEnforcement","ephemeral","ephemeralDeviceTTL"],"sources":["config.js"],"sourcesContent":["import {inBrowser, deviceType} from '@webex/common';\n\nexport default {\n  device: {\n\n    /**\n     * The duration to wait for the catalog to populate in seconds.\n     *\n     * @type {number}\n     */\n    canRegisterWaitDuration: 10,\n\n    /**\n     * The default configuration group when sending registration requests.\n     *\n     * @type {Object}\n     */\n    defaults: {\n\n      /**\n       * The default body configuration of registration requests.\n       *\n       * @type {Object}\n       */\n      body: {\n        name: (typeof process.title === 'string' ?\n          process.title.trim() : undefined) ||\n          inBrowser && 'browser' || 'javascript',\n        deviceType: deviceType.WEB,\n        model: 'web-js-sdk',\n        localizedModel: 'webex-js-sdk',\n        systemName: 'WEBEX_JS_SDK',\n        systemVersion: '1.0.0'\n      }\n    },\n\n    /**\n     * When true, the **wdm** service will enforce an inactivity duration.\n     *\n     * @type {boolean}\n     */\n    enableInactivityEnforcement: false,\n\n    /**\n     * When true, the device registration will include a ttl value of\n     * {@link config.device.ephemeralDeviceTTL} and refresh on an interval of\n     * {@link config.device.ephemeralDeviceTTL} / 2 + 60 seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeral: false,\n\n    /**\n     * The ttl value to include in device registration if\n     * {@link config.device.ephemeral} is true. Measured in seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeralDeviceTTL: 30 * 60\n  }\n};\n"]},"metadata":{},"sourceType":"script"}