{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n_Object$defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _conversation.default;\n  }\n});\n\n_Object$defineProperty(exports, \"ShareActivity\", {\n  enumerable: true,\n  get: function get() {\n    return _shareActivity.default;\n  }\n});\n\n_Object$defineProperty(exports, \"ConversationError\", {\n  enumerable: true,\n  get: function get() {\n    return _convoError.ConversationError;\n  }\n});\n\n_Object$defineProperty(exports, \"InvalidUserCreation\", {\n  enumerable: true,\n  get: function get() {\n    return _convoError.InvalidUserCreation;\n  }\n});\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _deleteProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/delete-property\"));\n\nvar _has2 = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _capitalize2 = _interopRequireDefault(require(\"lodash/capitalize\"));\n\nrequire(\"@webex/internal-plugin-encryption\");\n\nrequire(\"@webex/internal-plugin-user\");\n\nvar _common = require(\"@webex/common\");\n\nvar _helperHtml = require(\"@webex/helper-html\");\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _conversation = _interopRequireDefault(require(\"./conversation\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _encryptionTransforms = require(\"./encryption-transforms\");\n\nvar _decryptionTransforms = require(\"./decryption-transforms\");\n\nvar _shareActivity = _interopRequireDefault(require(\"./share-activity\"));\n\nvar _convoError = require(\"./convo-error\");\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n\n(0, _webexCore.registerInternalPlugin)('conversation', _conversation.default, {\n  payloadTransformer: {\n    predicates: [{\n      name: 'transformObject',\n      test: function test(ctx, optionsOrResponse) {\n        return _promise.default.resolve((0, _has2.default)(optionsOrResponse, 'body.objectType'));\n      },\n      extract: function extract(optionsOrResponse) {\n        return _promise.default.resolve(optionsOrResponse.body);\n      }\n    }, {\n      name: 'transformObject',\n      direction: 'inbound',\n      test: function test(ctx, event) {\n        return _promise.default.resolve((0, _has2.default)(event, 'activity'));\n      },\n      extract: function extract(event) {\n        return _promise.default.resolve(event.activity);\n      }\n    }, {\n      name: 'transformObjectArray',\n      direction: 'inbound',\n      test: function test(ctx, response) {\n        return _promise.default.resolve((0, _has2.default)(response, 'body.multistatus'));\n      },\n      extract: function extract(response) {\n        return _promise.default.resolve(response.body.multistatus.map(function (item) {\n          return item && item.data && item.data.activity;\n        }));\n      }\n    }, {\n      name: 'normalizeConversationListAndBindDecrypters',\n      direction: 'inbound',\n      test: function test(ctx, options) {\n        if (!(0, _has2.default)(options, 'body.items[0].objectType')) {\n          return _promise.default.resolve(false);\n        }\n\n        if ((0, _get2.default)(options, 'options.deferDecrypt')) {\n          return _promise.default.resolve(true);\n        }\n\n        return _promise.default.resolve(false);\n      },\n      extract: function extract(options) {\n        return _promise.default.resolve(options.body.items);\n      }\n    }, {\n      name: 'transformObjectArray',\n      direction: 'inbound',\n      test: function test(ctx, options) {\n        if (!(0, _has2.default)(options, 'body.items[0].objectType')) {\n          return _promise.default.resolve(false);\n        }\n\n        if ((0, _get2.default)(options, 'options.deferDecrypt')) {\n          return _promise.default.resolve(false);\n        }\n\n        return _promise.default.resolve(true);\n      },\n      extract: function extract(options) {\n        return _promise.default.resolve(options.body.items);\n      }\n    }, {\n      name: 'transformThreadArray',\n      direction: 'inbound',\n      test: function test(ctx, options) {\n        if (!(0, _has2.default)(options, 'body.items[0].childType') || !(0, _has2.default)(options, 'body.items[0].actorId')) {\n          return _promise.default.resolve(false);\n        }\n\n        if ((0, _get2.default)(options, 'options.deferDecrypt')) {\n          return _promise.default.resolve(false);\n        }\n\n        return _promise.default.resolve(true);\n      },\n      extract: function extract(options) {\n        return _promise.default.resolve(options.body.items);\n      }\n    }],\n    transforms: [{\n      name: 'normalizeConversationListAndBindDecrypters',\n      fn: function fn(ctx, array) {\n        return _promise.default.all(array.map(function (item) {\n          return ctx.transform('normalizeObject', item).then(function () {\n            item.decrypt = function decrypt() {\n              (0, _deleteProperty.default)(item, 'decrypt');\n              return ctx.transform('decryptObject', item);\n            };\n\n            return item;\n          });\n        }));\n      }\n    }, {\n      name: 'transformObjectArray',\n      fn: function fn(ctx, array) {\n        return _promise.default.all(array.map(function (item) {\n          return ctx.transform('transformObject', item);\n        }));\n      }\n    }, {\n      name: 'transformThreadArray',\n      fn: function fn(ctx, array) {\n        return _promise.default.all(array.map(function (item) {\n          return ctx.transform('transformThread', item);\n        }));\n      }\n    }, {\n      name: 'transformObject',\n      direction: 'outbound',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise.default.resolve();\n        }\n\n        if (!object.objectType) {\n          return _promise.default.resolve();\n        }\n\n        return ctx.transform('normalizeObject', object).then(function () {\n          return ctx.transform('encryptObject', object);\n        }).then(function () {\n          return ctx.transform('encryptKmsMessage', object);\n        });\n      }\n    }, {\n      name: 'transformObject',\n      direction: 'inbound',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise.default.resolve();\n        }\n\n        if (!object.objectType) {\n          return _promise.default.resolve();\n        }\n\n        return ctx.transform('decryptObject', object).then(function () {\n          return ctx.transform('normalizeObject', object);\n        });\n      }\n    }, {\n      name: 'normalizeObject',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise.default.resolve();\n        }\n\n        if (!object.objectType) {\n          return _promise.default.resolve();\n        }\n\n        return _promise.default.all([ctx.transform(\"normalize\".concat((0, _capitalize2.default)(object.objectType)), object), ctx.transform('normalizePropContent', object)]);\n      }\n    }, {\n      name: 'transformThread',\n      direction: 'inbound',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise.default.resolve();\n        }\n\n        return ctx.transform('decryptThread', object).then(function () {\n          return ctx.transform('normalizeThread', object);\n        });\n      }\n    }, {\n      name: 'normalizePropContent',\n      direction: 'inbound',\n      fn: function fn(ctx, object) {\n        if (!object.content) {\n          return _promise.default.resolve();\n        }\n\n        var _ctx$webex$config$con = ctx.webex.config.conversation,\n            inboundProcessFunc = _ctx$webex$config$con.inboundProcessFunc,\n            allowedInboundTags = _ctx$webex$config$con.allowedInboundTags,\n            allowedInboundStyles = _ctx$webex$config$con.allowedInboundStyles;\n        return (0, _helperHtml.filter)(inboundProcessFunc, allowedInboundTags || {}, allowedInboundStyles, object.content).then(function (c) {\n          object.content = c;\n        });\n      }\n    }, {\n      name: 'normalizePropContent',\n      direction: 'outbound',\n      fn: function fn(ctx, object) {\n        if (!object.content) {\n          return _promise.default.resolve();\n        }\n\n        var _ctx$webex$config$con2 = ctx.webex.config.conversation,\n            outboundProcessFunc = _ctx$webex$config$con2.outboundProcessFunc,\n            allowedOutboundTags = _ctx$webex$config$con2.allowedOutboundTags,\n            allowedOutboundStyles = _ctx$webex$config$con2.allowedOutboundStyles;\n        return (0, _helperHtml.filterEscape)(outboundProcessFunc, allowedOutboundTags || {}, allowedOutboundStyles, object.content).then(function (c) {\n          object.content = c;\n        });\n      }\n    }, {\n      name: 'normalizeConversation',\n      fn: function fn(ctx, conversation) {\n        conversation.activities = conversation.activities || {};\n        conversation.activities.items = conversation.activities.items || [];\n        conversation.participants = conversation.participants || {};\n        conversation.participants.items = conversation.participants.items || [];\n        return _promise.default.all([_promise.default.all(conversation.activities.items.map(function (item) {\n          return ctx.transform('normalizeObject', item);\n        })), _promise.default.all(conversation.participants.items.map(function (item) {\n          return ctx.transform('normalizeObject', item);\n        }))]);\n      }\n    }, {\n      name: 'normalizeActivity',\n      fn: function fn(ctx, activity) {\n        return _promise.default.all([ctx.transform('normalizeObject', activity.actor), ctx.transform('normalizeObject', activity.object), ctx.transform('normalizeObject', activity.target)]);\n      }\n    }, {\n      name: 'normalizeThread',\n      fn: function fn(ctx, threadActivity) {\n        // childActivities are of type Activity\n        return _promise.default.all(threadActivity.childActivities.map(function (item) {\n          return ctx.transform('normalizeObject', item);\n        }));\n      }\n    }, {\n      name: 'normalizePerson',\n      // eslint-disable-next-line complexity\n      fn: function fn(ctx, person) {\n        var email = person.entryEmail || person.emailAddress || person.id;\n        var id = person.entryUUID || person.id;\n\n        if (_common.patterns.email.test(email)) {\n          person.entryEmail = person.emailAddress = email.toLowerCase();\n        } else {\n          (0, _deleteProperty.default)(person, 'entryEmail');\n          (0, _deleteProperty.default)(person, 'emailAddress');\n        }\n\n        if (person.roomProperties) {\n          person.roomProperties.isModerator = Boolean(person.roomProperties.isModerator);\n        }\n\n        if (_common.patterns.uuid.test(id)) {\n          person.entryUUID = person.id = id.toLowerCase();\n          return _promise.default.resolve(person);\n        }\n\n        if (!email) {\n          return _promise.default.reject(new Error('cannot determine id without an `emailAddress` or `entryUUID` property'));\n        }\n\n        return ctx.webex.internal.user.asUUID(email).then(function (uuid) {\n          person.entryUUID = person.id = uuid;\n          return person;\n        });\n      }\n    }].concat(_decryptionTransforms.transforms).concat(_encryptionTransforms.transforms)\n  },\n  config: _config.default\n});","map":{"version":3,"mappings":"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","names":["require","Conversation","payloadTransformer","predicates","name","test","ctx","optionsOrResponse","_promise","resolve","extract","body","direction","event","activity","response","multistatus","map","item","data","options","items","transforms","fn","array","all","transform","then","decrypt","object","objectType","content","webex","config","conversation","inboundProcessFunc","allowedInboundTags","allowedInboundStyles","c","outboundProcessFunc","allowedOutboundTags","allowedOutboundStyles","activities","participants","actor","target","threadActivity","childActivities","person","email","entryEmail","emailAddress","id","entryUUID","patterns","toLowerCase","roomProperties","isModerator","Boolean","uuid","reject","Error","internal","user","asUUID","concat","decryptionTransforms","encryptionTransforms"],"sources":["index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport '@webex/internal-plugin-encryption';\nimport '@webex/internal-plugin-user';\n\nimport {patterns} from '@webex/common';\nimport {filter as htmlFilter, filterEscape as htmlFilterEscape} from '@webex/helper-html';\nimport {registerInternalPlugin} from '@webex/webex-core';\nimport {capitalize, get, has} from 'lodash';\n\nimport Conversation from './conversation';\nimport config from './config';\nimport {transforms as encryptionTransforms} from './encryption-transforms';\nimport {transforms as decryptionTransforms} from './decryption-transforms';\n\nregisterInternalPlugin('conversation', Conversation, {\n  payloadTransformer: {\n    predicates: [\n      {\n        name: 'transformObject',\n        test(ctx, optionsOrResponse) {\n          return Promise.resolve(has(optionsOrResponse, 'body.objectType'));\n        },\n        extract(optionsOrResponse) {\n          return Promise.resolve(optionsOrResponse.body);\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'inbound',\n        test(ctx, event) {\n          return Promise.resolve(has(event, 'activity'));\n        },\n        extract(event) {\n          return Promise.resolve(event.activity);\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, response) {\n          return Promise.resolve(has(response, 'body.multistatus'));\n        },\n        extract(response) {\n          return Promise.resolve(response.body.multistatus.map((item) => item && item.data && item.data.activity));\n        }\n      },\n      {\n        name: 'normalizeConversationListAndBindDecrypters',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].objectType')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(true);\n          }\n\n          return Promise.resolve(false);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].objectType')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(false);\n          }\n\n          return Promise.resolve(true);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      },\n      {\n        name: 'transformThreadArray',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].childType') || !has(options, 'body.items[0].actorId')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(false);\n          }\n\n          return Promise.resolve(true);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      }\n    ],\n    transforms: [\n      {\n        name: 'normalizeConversationListAndBindDecrypters',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('normalizeObject', item)\n            .then(() => {\n              item.decrypt = function decrypt() {\n                Reflect.deleteProperty(item, 'decrypt');\n\n                return ctx.transform('decryptObject', item);\n              };\n\n              return item;\n            })));\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('transformObject', item)));\n        }\n      },\n      {\n        name: 'transformThreadArray',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('transformThread', item)));\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'outbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('normalizeObject', object)\n            .then(() => ctx.transform('encryptObject', object))\n            .then(() => ctx.transform('encryptKmsMessage', object));\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('decryptObject', object)\n            .then(() => ctx.transform('normalizeObject', object));\n        }\n      },\n      {\n        name: 'normalizeObject',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return Promise.all([\n            ctx.transform(`normalize${capitalize(object.objectType)}`, object),\n            ctx.transform('normalizePropContent', object)\n          ]);\n        }\n      },\n      {\n        name: 'transformThread',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('decryptThread', object)\n            .then(() => ctx.transform('normalizeThread', object));\n        }\n      },\n      {\n        name: 'normalizePropContent',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object.content) {\n            return Promise.resolve();\n          }\n          const {\n            inboundProcessFunc,\n            allowedInboundTags,\n            allowedInboundStyles\n          } = ctx.webex.config.conversation;\n\n          return htmlFilter(inboundProcessFunc, allowedInboundTags || {}, allowedInboundStyles, object.content)\n            .then((c) => {\n              object.content = c;\n            });\n        }\n      },\n      {\n        name: 'normalizePropContent',\n        direction: 'outbound',\n        fn(ctx, object) {\n          if (!object.content) {\n            return Promise.resolve();\n          }\n\n          const {\n            outboundProcessFunc,\n            allowedOutboundTags,\n            allowedOutboundStyles\n          } = ctx.webex.config.conversation;\n\n          return htmlFilterEscape(outboundProcessFunc, allowedOutboundTags || {}, allowedOutboundStyles, object.content)\n            .then((c) => {\n              object.content = c;\n            });\n        }\n      },\n      {\n        name: 'normalizeConversation',\n        fn(ctx, conversation) {\n          conversation.activities = conversation.activities || {};\n          conversation.activities.items = conversation.activities.items || [];\n          conversation.participants = conversation.participants || {};\n          conversation.participants.items = conversation.participants.items || [];\n\n          return Promise.all([\n            Promise.all(conversation.activities.items.map((item) => ctx.transform('normalizeObject', item))),\n            Promise.all(conversation.participants.items.map((item) => ctx.transform('normalizeObject', item)))\n          ]);\n        }\n      },\n      {\n        name: 'normalizeActivity',\n        fn(ctx, activity) {\n          return Promise.all([\n            ctx.transform('normalizeObject', activity.actor),\n            ctx.transform('normalizeObject', activity.object),\n            ctx.transform('normalizeObject', activity.target)\n          ]);\n        }\n      },\n      {\n        name: 'normalizeThread',\n        fn(ctx, threadActivity) {\n          // childActivities are of type Activity\n          return Promise.all(threadActivity.childActivities.map((item) => ctx.transform('normalizeObject', item)));\n        }\n      },\n      {\n        name: 'normalizePerson',\n        // eslint-disable-next-line complexity\n        fn(ctx, person) {\n          const email = person.entryEmail || person.emailAddress || person.id;\n          const id = person.entryUUID || person.id;\n\n          if (patterns.email.test(email)) {\n            person.entryEmail = person.emailAddress = email.toLowerCase();\n          }\n          else {\n            Reflect.deleteProperty(person, 'entryEmail');\n            Reflect.deleteProperty(person, 'emailAddress');\n          }\n\n          if (person.roomProperties) {\n            person.roomProperties.isModerator = Boolean(person.roomProperties.isModerator);\n          }\n\n          if (patterns.uuid.test(id)) {\n            person.entryUUID = person.id = id.toLowerCase();\n\n            return Promise.resolve(person);\n          }\n\n          if (!email) {\n            return Promise.reject(new Error('cannot determine id without an `emailAddress` or `entryUUID` property'));\n          }\n\n          return ctx.webex.internal.user.asUUID(email)\n            .then((uuid) => {\n              person.entryUUID = person.id = uuid;\n\n              return person;\n            });\n        }\n      }\n    ]\n      .concat(decryptionTransforms)\n      .concat(encryptionTransforms)\n  },\n  config\n});\n\nexport {default} from './conversation';\nexport {default as ShareActivity} from './share-activity';\nexport {ConversationError, InvalidUserCreation} from './convo-error';\n"]},"metadata":{},"sourceType":"script"}