{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * @class\n * @ignore\n */\n\n\nvar PersonUUIDRequestBatcher = _webexCore.Batcher.extend({\n  namespace: 'People',\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess: function handleHttpSuccess(res) {\n    var _this = this;\n\n    var promises = res.body.items.map(function (personResponse) {\n      return _this.handleItemSuccess(personResponse.id, personResponse);\n    });\n\n    if (res.body.notFoundIds) {\n      promises.concat(res.body.notFoundIds.map(function (id) {\n        return _this.handleItemFailure(id);\n      }));\n    }\n\n    return _promise.default.all(promises);\n  },\n  handleItemFailure: function handleItemFailure(id) {\n    return this.getDeferredForResponse(id).then(function (defer) {\n      defer.reject(id);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} email\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess: function handleItemSuccess(email, response) {\n    return this.getDeferredForResponse(email).then(function (defer) {\n      defer.resolve(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} uuidOrHydraId\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest: function fingerprintRequest(uuidOrHydraId) {\n    var hydraId = this.webex.people.inferPersonIdFromUuid(uuidOrHydraId);\n    return _promise.default.resolve(hydraId);\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} hydraId\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse: function fingerprintResponse(hydraId) {\n    return _promise.default.resolve(hydraId);\n  },\n  prepareRequest: function prepareRequest(ids) {\n    return _promise.default.resolve(ids.join());\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {Object} ids\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest: function submitHttpRequest(ids) {\n    return this.webex.request({\n      service: 'hydra',\n      resource: \"people/?id=\".concat(ids, \"&showAllTypes=\").concat(this.config.showAllTypes)\n    });\n  }\n});\n\nvar _default = PersonUUIDRequestBatcher;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAIA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;;;AACA,IAAMA,wBAAwB,GAAGC,mBAAQC,MAARD,CAAe;AAC9CE,WAAS,EAAE,QADmC;;AAG9C;AACF;AACA;AACA;AACA;AACA;AACEC,mBAT8C,6BAS5BC,GAT4B,EASvB;AAAA;;AACrB,QAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJF,CAASG,KAATH,CAAeI,GAAfJ,CAAmB,UAACK,cAAD;AAAA,aAClCC,KAAI,CAACC,iBAAL,CAAuBF,cAAc,CAACG,EAAtC,EAA0CH,cAA1C,CADkC;AAAnB,MAAjB;;AAGA,QAAIL,GAAG,CAACE,IAAJF,CAASS,WAAb,EAA0B;AACxBR,cAAQ,CAACS,MAATT,CAAgBD,GAAG,CAACE,IAAJF,CAASS,WAATT,CAAqBI,GAArBJ,CAAyB,UAACQ,EAAD;AAAA,eACvCF,KAAI,CAACK,iBAAL,CAAuBH,EAAvB,CADuC;AAAzB,QAAhBP;AAED;;AAED,WAAOW,iBAAQC,GAAR,CAAYZ,QAAZ,CAAP;AAlB4C;AAqB9CU,mBArB8C,6BAqB5BH,EArB4B,EAqBxB;AACpB,WAAO,KAAKM,sBAAL,CAA4BN,EAA5B,EACJO,IADI,CACC,UAACC,KAAD,EAAW;AACfA,WAAK,CAACC,MAAND,CAAaR,EAAbQ;AAFG,MAAP;AAtB4C;;AA4B9C;AACF;AACA;AACA;AACA;AACA;AACA;AACET,mBAnC8C,6BAmC5BW,KAnC4B,EAmCrBC,QAnCqB,EAmCX;AACjC,WAAO,KAAKL,sBAAL,CAA4BI,KAA5B,EACJH,IADI,CACC,UAACC,KAAD,EAAW;AACfA,WAAK,CAACI,OAANJ,CAAcG,QAAdH;AAFG,MAAP;AApC4C;;AA0C9C;AACF;AACA;AACA;AACA;AACA;AACEK,oBAhD8C,8BAgD3BC,aAhD2B,EAgDZ;AAChC,QAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,qBAAlB,CAAwCJ,aAAxC,CAAhB;AAEA,WAAOV,iBAAQQ,OAAR,CAAgBG,OAAhB,CAAP;AAnD4C;;AAsD9C;AACF;AACA;AACA;AACA;AACA;AACEI,qBA5D8C,+BA4D1BJ,OA5D0B,EA4DjB;AAC3B,WAAOX,iBAAQQ,OAAR,CAAgBG,OAAhB,CAAP;AA7D4C;AAgE9CK,gBAhE8C,0BAgE/BC,GAhE+B,EAgE1B;AAClB,WAAOjB,iBAAQQ,OAAR,CAAgBS,GAAG,CAACC,IAAJD,EAAhB,CAAP;AAjE4C;;AAoE9C;AACF;AACA;AACA;AACA;AACA;AACEE,mBA1E8C,6BA0E5BF,GA1E4B,EA0EvB;AACrB,WAAO,KAAKL,KAAL,CAAWQ,OAAX,CAAmB;AACxBC,aAAO,EAAE,OADe;AAExBC,cAAQ,uBAAgBL,GAAhB,2BAAoC,KAAKM,MAAL,CAAYC,YAAhD;AAFgB,KAAnB,CAAP;AAID;AA/E6C,CAAfxC,CAAjC;;eAkFeD","names":["PersonUUIDRequestBatcher","Batcher","extend","namespace","handleHttpSuccess","res","promises","body","items","map","personResponse","_this","handleItemSuccess","id","notFoundIds","concat","handleItemFailure","_promise","all","getDeferredForResponse","then","defer","reject","email","response","resolve","fingerprintRequest","uuidOrHydraId","hydraId","webex","people","inferPersonIdFromUuid","fingerprintResponse","prepareRequest","ids","join","submitHttpRequest","request","service","resource","config","showAllTypes"],"sources":["people-batcher.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Batcher} from '@webex/webex-core';\n\n/**\n * @class\n * @ignore\n */\nconst PersonUUIDRequestBatcher = Batcher.extend({\n  namespace: 'People',\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess(res) {\n    const promises = res.body.items.map((personResponse) =>\n      this.handleItemSuccess(personResponse.id, personResponse));\n\n    if (res.body.notFoundIds) {\n      promises.concat(res.body.notFoundIds.map((id) =>\n        this.handleItemFailure(id)));\n    }\n\n    return Promise.all(promises);\n  },\n\n  handleItemFailure(id) {\n    return this.getDeferredForResponse(id)\n      .then((defer) => {\n        defer.reject(id);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} email\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess(email, response) {\n    return this.getDeferredForResponse(email)\n      .then((defer) => {\n        defer.resolve(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} uuidOrHydraId\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest(uuidOrHydraId) {\n    const hydraId = this.webex.people.inferPersonIdFromUuid(uuidOrHydraId);\n\n    return Promise.resolve(hydraId);\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} hydraId\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse(hydraId) {\n    return Promise.resolve(hydraId);\n  },\n\n  prepareRequest(ids) {\n    return Promise.resolve(ids.join());\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {Object} ids\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest(ids) {\n    return this.webex.request({\n      service: 'hydra',\n      resource: `people/?id=${ids}&showAllTypes=${this.config.showAllTypes}`\n    });\n  }\n});\n\nexport default PersonUUIDRequestBatcher;\n"]},"metadata":{},"sourceType":"script"}