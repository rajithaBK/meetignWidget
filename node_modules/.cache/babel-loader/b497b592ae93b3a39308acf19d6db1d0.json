{"ast":null,"code":"import _classCallCheck from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\"; //**************************************************************************************\n\n/**\r\n * Class from RFC5652\r\n */\n\nvar OtherRecipientInfo = /*#__PURE__*/function () {\n  //**********************************************************************************\n\n  /**\r\n   * Constructor for OtherRecipientInfo class\r\n   * @param {Object} [parameters={}]\r\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n   */\n  function OtherRecipientInfo() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, OtherRecipientInfo);\n\n    //region Internal properties of the object\n\n    /**\r\n     * @type {string}\r\n     * @desc oriType\r\n     */\n    this.oriType = getParametersValue(parameters, \"oriType\", OtherRecipientInfo.defaultValues(\"oriType\"));\n    /**\r\n     * @type {*}\r\n     * @desc oriValue\r\n     */\n\n    this.oriValue = getParametersValue(parameters, \"oriValue\", OtherRecipientInfo.defaultValues(\"oriValue\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\r\n   * Return default values for all class members\r\n   * @param {string} memberName String name for a class member\r\n   */\n\n\n  _createClass(OtherRecipientInfo, [{\n    key: \"fromSchema\",\n    value: //**********************************************************************************\n\n    /**\r\n     * Convert parsed asn1js object into current class\r\n     * @param {!Object} schema\r\n     */\n    function fromSchema(schema) {\n      //region Clear input data first\n      clearProps(schema, [\"oriType\", \"oriValue\"]); //endregion\n      //region Check the schema is valid\n\n      var asn1 = asn1js.compareSchema(schema, schema, OtherRecipientInfo.schema({\n        names: {\n          oriType: \"oriType\",\n          oriValue: \"oriValue\"\n        }\n      }));\n      if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for OtherRecipientInfo\"); //endregion\n      //region Get internal properties from parsed schema\n\n      this.oriType = asn1.result.oriType.valueBlock.toString();\n      this.oriValue = asn1.result.oriValue; //endregion\n    } //**********************************************************************************\n\n    /**\r\n     * Convert current object to asn1js object and set correct values\r\n     * @returns {Object} asn1js object\r\n     */\n\n  }, {\n    key: \"toSchema\",\n    value: function toSchema() {\n      //region Construct and return new ASN.1 schema for this object\n      return new asn1js.Sequence({\n        value: [new asn1js.ObjectIdentifier({\n          value: this.oriType\n        }), this.oriValue]\n      }); //endregion\n    } //**********************************************************************************\n\n    /**\r\n     * Convertion for the class to JSON object\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _object = {\n        oriType: this.oriType\n      };\n      if (OtherRecipientInfo.compareWithDefault(\"oriValue\", this.oriValue) === false) _object.oriValue = this.oriValue.toJSON();\n      return _object;\n    } //**********************************************************************************\n\n  }], [{\n    key: \"defaultValues\",\n    value: function defaultValues(memberName) {\n      switch (memberName) {\n        case \"oriType\":\n          return \"\";\n\n        case \"oriValue\":\n          return {};\n\n        default:\n          throw new Error(\"Invalid member name for OtherRecipientInfo class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Compare values with default values for all class members\r\n     * @param {string} memberName String name for a class member\r\n     * @param {*} memberValue Value to compare with default value\r\n     */\n\n  }, {\n    key: \"compareWithDefault\",\n    value: function compareWithDefault(memberName, memberValue) {\n      switch (memberName) {\n        case \"oriType\":\n          return memberValue === \"\";\n\n        case \"oriValue\":\n          return Object.keys(memberValue).length === 0;\n\n        default:\n          throw new Error(\"Invalid member name for OtherRecipientInfo class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Return value of pre-defined ASN.1 schema for current class\r\n     *\r\n     * ASN.1 schema:\r\n     * ```asn1\r\n     * OtherRecipientInfo ::= SEQUENCE {\r\n     *    oriType OBJECT IDENTIFIER,\r\n     *    oriValue ANY DEFINED BY oriType }\r\n     * ```\r\n     *\r\n     * @param {Object} parameters Input parameters for the schema\r\n     * @returns {Object} asn1js schema object\r\n     */\n\n  }, {\n    key: \"schema\",\n    value: function schema() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\r\n       * @type {Object}\r\n       * @property {string} [blockName]\r\n       * @property {string} [oriType]\r\n       * @property {string} [oriValue]\r\n       */\n      var names = getParametersValue(parameters, \"names\", {});\n      return new asn1js.Sequence({\n        name: names.blockName || \"\",\n        value: [new asn1js.ObjectIdentifier({\n          name: names.oriType || \"\"\n        }), new asn1js.Any({\n          name: names.oriValue || \"\"\n        })]\n      });\n    }\n  }]);\n\n  return OtherRecipientInfo;\n}(); //**************************************************************************************\n\n\nexport { OtherRecipientInfo as default };","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/OtherRecipientInfo.js"],"names":["asn1js","getParametersValue","clearProps","OtherRecipientInfo","parameters","oriType","defaultValues","oriValue","fromSchema","schema","asn1","compareSchema","names","verified","Error","result","valueBlock","toString","Sequence","value","ObjectIdentifier","_object","compareWithDefault","toJSON","memberName","memberValue","Object","keys","length","name","blockName","Any"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class OtherRecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OtherRecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc oriType\r\n\t\t */\r\n\t\tthis.oriType = getParametersValue(parameters, \"oriType\", OtherRecipientInfo.defaultValues(\"oriType\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @desc oriValue\r\n\t\t */\r\n\t\tthis.oriValue = getParametersValue(parameters, \"oriValue\", OtherRecipientInfo.defaultValues(\"oriValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"oriType\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"oriValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OtherRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"oriType\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"oriValue\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OtherRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * OtherRecipientInfo ::= SEQUENCE {\r\n\t *    oriType OBJECT IDENTIFIER,\r\n\t *    oriValue ANY DEFINED BY oriType }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [oriType]\r\n\t\t * @property {string} [oriValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.oriType || \"\") }),\r\n\t\t\t\tnew asn1js.Any({ name: (names.oriValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"oriType\",\r\n\t\t\t\"oriValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOtherRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\toriType: \"oriType\",\r\n\t\t\t\t\toriValue: \"oriValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OtherRecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.oriType = asn1.result.oriType.valueBlock.toString();\r\n\t\tthis.oriValue = asn1.result.oriValue;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.oriType }),\r\n\t\t\t\tthis.oriValue\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\toriType: this.oriType\r\n\t\t};\r\n\r\n\t\tif(OtherRecipientInfo.compareWithDefault(\"oriValue\", this.oriValue) === false)\r\n\t\t\t_object.oriValue = this.oriValue.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]},"metadata":{},"sourceType":"module"}