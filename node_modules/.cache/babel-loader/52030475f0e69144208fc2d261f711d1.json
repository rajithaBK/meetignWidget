{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar PersonalMeetingRoomUtil = {};\n\nPersonalMeetingRoomUtil.getClaimPmrLink = function (pmrLink) {\n  var validator = _constants.VALID_PMR_ADDRESS.test(pmrLink);\n\n  if (validator) {\n    return pmrLink;\n  }\n\n  validator = pmrLink.match(_constants.VALID_PMR_LINK);\n\n  if (validator) {\n    // userId + '@' + site + '.webex.com'\n    return \"\".concat(validator[4], \"@\").concat(validator[2], \".\").concat(_constants.WEBEX_DOT_COM);\n  }\n\n  return null;\n};\n\nPersonalMeetingRoomUtil.getClaimPmrPin = function (hostPin) {\n  if (_constants.VALID_PIN.test(hostPin)) {\n    return hostPin;\n  }\n\n  return null;\n};\n\nPersonalMeetingRoomUtil.getClaimedRequestParams = function (link, pin, options) {\n  return {\n    method: _constants.HTTP_VERBS.POST,\n    api: _constants.HECATE,\n    resource: \"/\".concat(_constants.CMR_MEETINGS, \"/\").concat(_constants.CLAIM),\n    body: {\n      userId: options.userId,\n      passcode: pin,\n      preferred: options.preferred,\n      meetingAddress: link\n    }\n  };\n};\n\nvar _default = PersonalMeetingRoomUtil;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;;AAWA,IAAMA,uBAAuB,GAAG,EAAhC;;AAEAA,uBAAuB,CAACC,eAAxBD,GAA0C,UAACE,OAAD,EAAa;AACrD,MAAIC,SAAS,GAAGC,6BAAkBC,IAAlBD,CAAuBF,OAAvBE,CAAhB;;AAEA,MAAID,SAAJ,EAAe;AACb,WAAOD,OAAP;AACD;;AACDC,WAAS,GAAGD,OAAO,CAACI,KAARJ,CAAcK,yBAAdL,CAAZC;;AACA,MAAIA,SAAJ,EAAe;AACb;AACA,qBAAUA,SAAS,CAAC,CAAD,CAAnB,cAA0BA,SAAS,CAAC,CAAD,CAAnC,cAA0CK,wBAA1C;AACD;;AAED,SAAO,IAAP;AAZF;;AAeAR,uBAAuB,CAACS,cAAxBT,GAAyC,UAACU,OAAD,EAAa;AACpD,MAAIC,qBAAUN,IAAVM,CAAeD,OAAfC,CAAJ,EAA6B;AAC3B,WAAOD,OAAP;AACD;;AAED,SAAO,IAAP;AALF;;AAQAV,uBAAuB,CAACY,uBAAxBZ,GAAkD,UAACa,IAAD,EAAOC,GAAP,EAAYC,OAAZ;AAAA,SAAyB;AACzEC,UAAM,EAAEC,sBAAWC,IADsD;AAEzEC,OAAG,EAAEC,iBAFoE;AAGzEC,YAAQ,aAAMC,uBAAN,cAAsBC,gBAAtB,CAHiE;AAIzEC,QAAI,EAAE;AACJC,YAAM,EAAEV,OAAO,CAACU,MADZ;AAEJC,cAAQ,EAAEZ,GAFN;AAGJa,eAAS,EAAEZ,OAAO,CAACY,SAHf;AAIJC,oBAAc,EAAEf;AAJZ;AAJmE,GAAzB;AAAlD;;eAYeb","names":["PersonalMeetingRoomUtil","getClaimPmrLink","pmrLink","validator","VALID_PMR_ADDRESS","test","match","VALID_PMR_LINK","WEBEX_DOT_COM","getClaimPmrPin","hostPin","VALID_PIN","getClaimedRequestParams","link","pin","options","method","HTTP_VERBS","POST","api","HECATE","resource","CMR_MEETINGS","CLAIM","body","userId","passcode","preferred","meetingAddress"],"sources":["util.js"],"sourcesContent":["import {\n  HTTP_VERBS,\n  VALID_PIN,\n  VALID_PMR_ADDRESS,\n  VALID_PMR_LINK,\n  CMR_MEETINGS,\n  CLAIM,\n  HECATE,\n  WEBEX_DOT_COM\n} from '../constants';\n\nconst PersonalMeetingRoomUtil = {};\n\nPersonalMeetingRoomUtil.getClaimPmrLink = (pmrLink) => {\n  let validator = VALID_PMR_ADDRESS.test(pmrLink);\n\n  if (validator) {\n    return pmrLink;\n  }\n  validator = pmrLink.match(VALID_PMR_LINK);\n  if (validator) {\n    // userId + '@' + site + '.webex.com'\n    return `${validator[4]}@${validator[2]}.${WEBEX_DOT_COM}`;\n  }\n\n  return null;\n};\n\nPersonalMeetingRoomUtil.getClaimPmrPin = (hostPin) => {\n  if (VALID_PIN.test(hostPin)) {\n    return hostPin;\n  }\n\n  return null;\n};\n\nPersonalMeetingRoomUtil.getClaimedRequestParams = (link, pin, options) => ({\n  method: HTTP_VERBS.POST,\n  api: HECATE,\n  resource: `/${CMR_MEETINGS}/${CLAIM}`,\n  body: {\n    userId: options.userId,\n    passcode: pin,\n    preferred: options.preferred,\n    meetingAddress: link\n  }\n});\n\nexport default PersonalMeetingRoomUtil;\n"]},"metadata":{},"sourceType":"script"}