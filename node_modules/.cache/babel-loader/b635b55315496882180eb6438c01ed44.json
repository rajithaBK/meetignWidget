{"ast":null,"code":"\"use strict\";\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar CalendarUtil = {\n  // calculate the end time for the meeting based on the duration so it's stored on\n  // the scheduled meeting item, that way client can display start and end without\n  // calculation on their side\n  // gets the start time from server, and the duration, and reformats\n\n  /**\n   * calculates the end time for meeting\n   * @param {Object} item the locus.host property\n   * @param {Object} item.start start time of the meeting\n   * @param {Object} item.duration duration of the meeting\n   * @returns {Object} end time of the meeting\n   * @memberof CalendarUtil\n   */\n  calculateEndTime: function calculateEndTime(item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      endTime: new Date(new Date(item.start).getTime() + item.durationMinutes * 60000)\n    });\n  }\n};\nvar _default = CalendarUtil;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAY,GAAG;AAEnB;AACA;AACA;AACA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,kBAdmB,4BAcFC,IAdE,EAcI;AACrB,2CAAWA,IAAX;AAAiBC,aAAO,EAAE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,CAASF,IAAI,CAACG,KAAd,EAAqBC,OAArB,KAAiCJ,IAAI,CAACK,eAALL,GAAuB,KAAjE;AAA1B;AACD;AAhBkB,CAArB;eAmBeF","names":["CalendarUtil","calculateEndTime","item","endTime","Date","start","getTime","durationMinutes"],"sources":["util.js"],"sourcesContent":["const CalendarUtil = {\n\n  // calculate the end time for the meeting based on the duration so it's stored on\n  // the scheduled meeting item, that way client can display start and end without\n  // calculation on their side\n  // gets the start time from server, and the duration, and reformats\n  /**\n   * calculates the end time for meeting\n   * @param {Object} item the locus.host property\n   * @param {Object} item.start start time of the meeting\n   * @param {Object} item.duration duration of the meeting\n   * @returns {Object} end time of the meeting\n   * @memberof CalendarUtil\n   */\n  calculateEndTime(item) {\n    return {...item, endTime: new Date(new Date(item.start).getTime() + item.durationMinutes * 60000)};\n  }\n};\n\nexport default CalendarUtil;\n"]},"metadata":{},"sourceType":"script"}