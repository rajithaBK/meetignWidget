{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\rkanthet\\\\Documents\\\\test_window_object\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _slicedToArray = require(\"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _objectSpread = require(\"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar Token = require('token-types');\n\nvar strtok3 = require('strtok3/lib/core');\n\nvar _require = require('./util'),\n    stringToBytes = _require.stringToBytes,\n    tarHeaderChecksumMatches = _require.tarHeaderChecksumMatches,\n    uint32SyncSafeToken = _require.uint32SyncSafeToken;\n\nvar supported = require('./supported');\n\nvar minimumBytes = 4100; // A fair amount of file-types are detectable within this range\n\nfunction fromStream(_x) {\n  return _fromStream.apply(this, arguments);\n}\n\nfunction _fromStream() {\n  _fromStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(stream) {\n    var tokenizer;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return strtok3.fromStream(stream);\n\n          case 2:\n            tokenizer = _context2.sent;\n            _context2.prev = 3;\n            _context2.next = 6;\n            return fromTokenizer(tokenizer);\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.next = 10;\n            return tokenizer.close();\n\n          case 10:\n            return _context2.finish(7);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3,, 7, 11]]);\n  }));\n  return _fromStream.apply(this, arguments);\n}\n\nfunction fromBuffer(_x2) {\n  return _fromBuffer.apply(this, arguments);\n}\n\nfunction _fromBuffer() {\n  _fromBuffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(input) {\n    var buffer, tokenizer;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input)) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new TypeError(\"Expected the `input` argument to be of type `Uint8Array` or `Buffer` or `ArrayBuffer`, got `\".concat(typeof input, \"`\"));\n\n          case 2:\n            buffer = input instanceof Buffer ? input : Buffer.from(input);\n\n            if (buffer && buffer.length > 1) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            tokenizer = strtok3.fromBuffer(buffer);\n            return _context3.abrupt(\"return\", fromTokenizer(tokenizer));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _fromBuffer.apply(this, arguments);\n}\n\nfunction _check(buffer, headers, options) {\n  options = _objectSpread({\n    offset: 0\n  }, options);\n\n  var _iterator = _createForOfIteratorHelper(headers.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          header = _step$value[1];\n\n      // If a bitmask is set\n      if (options.mask) {\n        // If header doesn't equal `buf` with bits masked off\n        if (header !== (options.mask[index] & buffer[index + options.offset])) {\n          return false;\n        }\n      } else if (header !== buffer[index + options.offset]) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n}\n\nfunction fromTokenizer(_x3) {\n  return _fromTokenizer2.apply(this, arguments);\n}\n\nfunction _fromTokenizer2() {\n  _fromTokenizer2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tokenizer) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            return _context4.abrupt(\"return\", _fromTokenizer(tokenizer));\n\n          case 4:\n            _context4.prev = 4;\n            _context4.t0 = _context4[\"catch\"](0);\n\n            if (_context4.t0 instanceof strtok3.EndOfStreamError) {\n              _context4.next = 8;\n              break;\n            }\n\n            throw _context4.t0;\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 4]]);\n  }));\n  return _fromTokenizer2.apply(this, arguments);\n}\n\nfunction _fromTokenizer(_x4) {\n  return _fromTokenizer3.apply(this, arguments);\n}\n\nfunction _fromTokenizer3() {\n  _fromTokenizer3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(tokenizer) {\n    var buffer, bytesRead, check, checkString, id3HeaderLen, zipHeader, type, mimeType, nextHeaderIndex, _type, brandMajor, maxBufferSize, _buffer, readField, readElement, readChildren, re, docType, str, readChunkHeader, chunk, readHeader, header, payload, typeId, _type2, jsonSize, _header, json;\n\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            buffer = Buffer.alloc(minimumBytes);\n            bytesRead = 12;\n\n            check = function check(header, options) {\n              return _check(buffer, header, options);\n            };\n\n            checkString = function checkString(header, options) {\n              return check(stringToBytes(header), options);\n            }; // Keep reading until EOF if the file size is unknown.\n\n\n            if (!tokenizer.fileInfo.size) {\n              tokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n            }\n\n            _context10.next = 7;\n            return tokenizer.peekBuffer(buffer, {\n              length: bytesRead,\n              mayBeLess: true\n            });\n\n          case 7:\n            if (!check([0x42, 0x4D])) {\n              _context10.next = 9;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'bmp',\n              mime: 'image/bmp'\n            });\n\n          case 9:\n            if (!check([0x0B, 0x77])) {\n              _context10.next = 11;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ac3',\n              mime: 'audio/vnd.dolby.dd-raw'\n            });\n\n          case 11:\n            if (!check([0x78, 0x01])) {\n              _context10.next = 13;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'dmg',\n              mime: 'application/x-apple-diskimage'\n            });\n\n          case 13:\n            if (!check([0x4D, 0x5A])) {\n              _context10.next = 15;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'exe',\n              mime: 'application/x-msdownload'\n            });\n\n          case 15:\n            if (!check([0x25, 0x21])) {\n              _context10.next = 21;\n              break;\n            }\n\n            _context10.next = 18;\n            return tokenizer.peekBuffer(buffer, {\n              length: 24,\n              mayBeLess: true\n            });\n\n          case 18:\n            if (!(checkString('PS-Adobe-', {\n              offset: 2\n            }) && checkString(' EPSF-', {\n              offset: 14\n            }))) {\n              _context10.next = 20;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'eps',\n              mime: 'application/eps'\n            });\n\n          case 20:\n            return _context10.abrupt(\"return\", {\n              ext: 'ps',\n              mime: 'application/postscript'\n            });\n\n          case 21:\n            if (!(check([0x1F, 0xA0]) || check([0x1F, 0x9D]))) {\n              _context10.next = 23;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'Z',\n              mime: 'application/x-compress'\n            });\n\n          case 23:\n            if (!check([0xFF, 0xD8, 0xFF])) {\n              _context10.next = 25;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'jpg',\n              mime: 'image/jpeg'\n            });\n\n          case 25:\n            if (!check([0x49, 0x49, 0xBC])) {\n              _context10.next = 27;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'jxr',\n              mime: 'image/vnd.ms-photo'\n            });\n\n          case 27:\n            if (!check([0x1F, 0x8B, 0x8])) {\n              _context10.next = 29;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'gz',\n              mime: 'application/gzip'\n            });\n\n          case 29:\n            if (!check([0x42, 0x5A, 0x68])) {\n              _context10.next = 31;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'bz2',\n              mime: 'application/x-bzip2'\n            });\n\n          case 31:\n            if (!checkString('ID3')) {\n              _context10.next = 42;\n              break;\n            }\n\n            _context10.next = 34;\n            return tokenizer.ignore(6);\n\n          case 34:\n            _context10.next = 36;\n            return tokenizer.readToken(uint32SyncSafeToken);\n\n          case 36:\n            id3HeaderLen = _context10.sent;\n\n            if (!(tokenizer.position + id3HeaderLen > tokenizer.fileInfo.size)) {\n              _context10.next = 39;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mp3',\n              mime: 'audio/mpeg'\n            });\n\n          case 39:\n            _context10.next = 41;\n            return tokenizer.ignore(id3HeaderLen);\n\n          case 41:\n            return _context10.abrupt(\"return\", fromTokenizer(tokenizer));\n\n          case 42:\n            if (!checkString('MP+')) {\n              _context10.next = 44;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mpc',\n              mime: 'audio/x-musepack'\n            });\n\n          case 44:\n            if (!((buffer[0] === 0x43 || buffer[0] === 0x46) && check([0x57, 0x53], {\n              offset: 1\n            }))) {\n              _context10.next = 46;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'swf',\n              mime: 'application/x-shockwave-flash'\n            });\n\n          case 46:\n            if (!check([0x47, 0x49, 0x46])) {\n              _context10.next = 48;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'gif',\n              mime: 'image/gif'\n            });\n\n          case 48:\n            if (!checkString('FLIF')) {\n              _context10.next = 50;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'flif',\n              mime: 'image/flif'\n            });\n\n          case 50:\n            if (!checkString('8BPS')) {\n              _context10.next = 52;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'psd',\n              mime: 'image/vnd.adobe.photoshop'\n            });\n\n          case 52:\n            if (!checkString('WEBP', {\n              offset: 8\n            })) {\n              _context10.next = 54;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'webp',\n              mime: 'image/webp'\n            });\n\n          case 54:\n            if (!checkString('MPCK')) {\n              _context10.next = 56;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mpc',\n              mime: 'audio/x-musepack'\n            });\n\n          case 56:\n            if (!checkString('FORM')) {\n              _context10.next = 58;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'aif',\n              mime: 'audio/aiff'\n            });\n\n          case 58:\n            if (!checkString('icns', {\n              offset: 0\n            })) {\n              _context10.next = 60;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'icns',\n              mime: 'image/icns'\n            });\n\n          case 60:\n            if (!check([0x50, 0x4B, 0x3, 0x4])) {\n              _context10.next = 121;\n              break;\n            }\n\n            _context10.prev = 61;\n\n          case 62:\n            if (!(tokenizer.position + 30 < tokenizer.fileInfo.size)) {\n              _context10.next = 114;\n              break;\n            }\n\n            _context10.next = 65;\n            return tokenizer.readBuffer(buffer, {\n              length: 30\n            });\n\n          case 65:\n            // https://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\n            zipHeader = {\n              compressedSize: buffer.readUInt32LE(18),\n              uncompressedSize: buffer.readUInt32LE(22),\n              filenameLength: buffer.readUInt16LE(26),\n              extraFieldLength: buffer.readUInt16LE(28)\n            };\n            _context10.next = 68;\n            return tokenizer.readToken(new Token.StringType(zipHeader.filenameLength, 'utf-8'));\n\n          case 68:\n            zipHeader.filename = _context10.sent;\n            _context10.next = 71;\n            return tokenizer.ignore(zipHeader.extraFieldLength);\n\n          case 71:\n            if (!(zipHeader.filename === 'META-INF/mozilla.rsa')) {\n              _context10.next = 73;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'xpi',\n              mime: 'application/x-xpinstall'\n            });\n\n          case 73:\n            if (!(zipHeader.filename.endsWith('.rels') || zipHeader.filename.endsWith('.xml'))) {\n              _context10.next = 83;\n              break;\n            }\n\n            type = zipHeader.filename.split('/')[0];\n            _context10.t0 = type;\n            _context10.next = _context10.t0 === '_rels' ? 78 : _context10.t0 === 'word' ? 79 : _context10.t0 === 'ppt' ? 80 : _context10.t0 === 'xl' ? 81 : 82;\n            break;\n\n          case 78:\n            return _context10.abrupt(\"break\", 83);\n\n          case 79:\n            return _context10.abrupt(\"return\", {\n              ext: 'docx',\n              mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            });\n\n          case 80:\n            return _context10.abrupt(\"return\", {\n              ext: 'pptx',\n              mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n            });\n\n          case 81:\n            return _context10.abrupt(\"return\", {\n              ext: 'xlsx',\n              mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n            });\n\n          case 82:\n            return _context10.abrupt(\"break\", 83);\n\n          case 83:\n            if (!zipHeader.filename.startsWith('xl/')) {\n              _context10.next = 85;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'xlsx',\n              mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n            });\n\n          case 85:\n            if (!(zipHeader.filename.startsWith('3D/') && zipHeader.filename.endsWith('.model'))) {\n              _context10.next = 87;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: '3mf',\n              mime: 'model/3mf'\n            });\n\n          case 87:\n            if (!(zipHeader.filename === 'mimetype' && zipHeader.compressedSize === zipHeader.uncompressedSize)) {\n              _context10.next = 98;\n              break;\n            }\n\n            _context10.next = 90;\n            return tokenizer.readToken(new Token.StringType(zipHeader.compressedSize, 'utf-8'));\n\n          case 90:\n            mimeType = _context10.sent;\n            _context10.t1 = mimeType;\n            _context10.next = _context10.t1 === 'application/epub+zip' ? 94 : _context10.t1 === 'application/vnd.oasis.opendocument.text' ? 95 : _context10.t1 === 'application/vnd.oasis.opendocument.spreadsheet' ? 96 : _context10.t1 === 'application/vnd.oasis.opendocument.presentation' ? 97 : 98;\n            break;\n\n          case 94:\n            return _context10.abrupt(\"return\", {\n              ext: 'epub',\n              mime: 'application/epub+zip'\n            });\n\n          case 95:\n            return _context10.abrupt(\"return\", {\n              ext: 'odt',\n              mime: 'application/vnd.oasis.opendocument.text'\n            });\n\n          case 96:\n            return _context10.abrupt(\"return\", {\n              ext: 'ods',\n              mime: 'application/vnd.oasis.opendocument.spreadsheet'\n            });\n\n          case 97:\n            return _context10.abrupt(\"return\", {\n              ext: 'odp',\n              mime: 'application/vnd.oasis.opendocument.presentation'\n            });\n\n          case 98:\n            if (!(zipHeader.compressedSize === 0)) {\n              _context10.next = 110;\n              break;\n            }\n\n            nextHeaderIndex = -1;\n\n          case 100:\n            if (!(nextHeaderIndex < 0 && tokenizer.position < tokenizer.fileInfo.size)) {\n              _context10.next = 108;\n              break;\n            }\n\n            _context10.next = 103;\n            return tokenizer.peekBuffer(buffer, {\n              mayBeLess: true\n            });\n\n          case 103:\n            nextHeaderIndex = buffer.indexOf('504B0304', 0, 'hex'); // Move position to the next header if found, skip the whole buffer otherwise\n\n            _context10.next = 106;\n            return tokenizer.ignore(nextHeaderIndex >= 0 ? nextHeaderIndex : buffer.length);\n\n          case 106:\n            _context10.next = 100;\n            break;\n\n          case 108:\n            _context10.next = 112;\n            break;\n\n          case 110:\n            _context10.next = 112;\n            return tokenizer.ignore(zipHeader.compressedSize);\n\n          case 112:\n            _context10.next = 62;\n            break;\n\n          case 114:\n            _context10.next = 120;\n            break;\n\n          case 116:\n            _context10.prev = 116;\n            _context10.t2 = _context10[\"catch\"](61);\n\n            if (_context10.t2 instanceof strtok3.EndOfStreamError) {\n              _context10.next = 120;\n              break;\n            }\n\n            throw _context10.t2;\n\n          case 120:\n            return _context10.abrupt(\"return\", {\n              ext: 'zip',\n              mime: 'application/zip'\n            });\n\n          case 121:\n            if (!checkString('OggS')) {\n              _context10.next = 140;\n              break;\n            }\n\n            _context10.next = 124;\n            return tokenizer.ignore(28);\n\n          case 124:\n            _type = Buffer.alloc(8);\n            _context10.next = 127;\n            return tokenizer.readBuffer(_type);\n\n          case 127:\n            if (!_check(_type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n              _context10.next = 129;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'opus',\n              mime: 'audio/opus'\n            });\n\n          case 129:\n            if (!_check(_type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n              _context10.next = 131;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ogv',\n              mime: 'video/ogg'\n            });\n\n          case 131:\n            if (!_check(_type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n              _context10.next = 133;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ogm',\n              mime: 'video/ogg'\n            });\n\n          case 133:\n            if (!_check(_type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n              _context10.next = 135;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'oga',\n              mime: 'audio/ogg'\n            });\n\n          case 135:\n            if (!_check(_type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n              _context10.next = 137;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'spx',\n              mime: 'audio/ogg'\n            });\n\n          case 137:\n            if (!_check(_type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n              _context10.next = 139;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ogg',\n              mime: 'audio/ogg'\n            });\n\n          case 139:\n            return _context10.abrupt(\"return\", {\n              ext: 'ogx',\n              mime: 'application/ogg'\n            });\n\n          case 140:\n            if (!(check([0x50, 0x4B]) && (buffer[2] === 0x3 || buffer[2] === 0x5 || buffer[2] === 0x7) && (buffer[3] === 0x4 || buffer[3] === 0x6 || buffer[3] === 0x8))) {\n              _context10.next = 142;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'zip',\n              mime: 'application/zip'\n            });\n\n          case 142:\n            if (!(checkString('ftyp', {\n              offset: 4\n            }) && (buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n            )) {\n              _context10.next = 167;\n              break;\n            }\n\n            // They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n            // For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n            brandMajor = buffer.toString('binary', 8, 12).replace('\\0', ' ').trim();\n            _context10.t3 = brandMajor;\n            _context10.next = _context10.t3 === 'avif' ? 147 : _context10.t3 === 'mif1' ? 148 : _context10.t3 === 'msf1' ? 149 : _context10.t3 === 'heic' ? 150 : _context10.t3 === 'heix' ? 150 : _context10.t3 === 'hevc' ? 151 : _context10.t3 === 'hevx' ? 151 : _context10.t3 === 'qt' ? 152 : _context10.t3 === 'M4V' ? 153 : _context10.t3 === 'M4VH' ? 153 : _context10.t3 === 'M4VP' ? 153 : _context10.t3 === 'M4P' ? 154 : _context10.t3 === 'M4B' ? 155 : _context10.t3 === 'M4A' ? 156 : _context10.t3 === 'F4V' ? 157 : _context10.t3 === 'F4P' ? 158 : _context10.t3 === 'F4A' ? 159 : _context10.t3 === 'F4B' ? 160 : _context10.t3 === 'crx' ? 161 : 162;\n            break;\n\n          case 147:\n            return _context10.abrupt(\"return\", {\n              ext: 'avif',\n              mime: 'image/avif'\n            });\n\n          case 148:\n            return _context10.abrupt(\"return\", {\n              ext: 'heic',\n              mime: 'image/heif'\n            });\n\n          case 149:\n            return _context10.abrupt(\"return\", {\n              ext: 'heic',\n              mime: 'image/heif-sequence'\n            });\n\n          case 150:\n            return _context10.abrupt(\"return\", {\n              ext: 'heic',\n              mime: 'image/heic'\n            });\n\n          case 151:\n            return _context10.abrupt(\"return\", {\n              ext: 'heic',\n              mime: 'image/heic-sequence'\n            });\n\n          case 152:\n            return _context10.abrupt(\"return\", {\n              ext: 'mov',\n              mime: 'video/quicktime'\n            });\n\n          case 153:\n            return _context10.abrupt(\"return\", {\n              ext: 'm4v',\n              mime: 'video/x-m4v'\n            });\n\n          case 154:\n            return _context10.abrupt(\"return\", {\n              ext: 'm4p',\n              mime: 'video/mp4'\n            });\n\n          case 155:\n            return _context10.abrupt(\"return\", {\n              ext: 'm4b',\n              mime: 'audio/mp4'\n            });\n\n          case 156:\n            return _context10.abrupt(\"return\", {\n              ext: 'm4a',\n              mime: 'audio/x-m4a'\n            });\n\n          case 157:\n            return _context10.abrupt(\"return\", {\n              ext: 'f4v',\n              mime: 'video/mp4'\n            });\n\n          case 158:\n            return _context10.abrupt(\"return\", {\n              ext: 'f4p',\n              mime: 'video/mp4'\n            });\n\n          case 159:\n            return _context10.abrupt(\"return\", {\n              ext: 'f4a',\n              mime: 'audio/mp4'\n            });\n\n          case 160:\n            return _context10.abrupt(\"return\", {\n              ext: 'f4b',\n              mime: 'audio/mp4'\n            });\n\n          case 161:\n            return _context10.abrupt(\"return\", {\n              ext: 'cr3',\n              mime: 'image/x-canon-cr3'\n            });\n\n          case 162:\n            if (!brandMajor.startsWith('3g')) {\n              _context10.next = 166;\n              break;\n            }\n\n            if (!brandMajor.startsWith('3g2')) {\n              _context10.next = 165;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: '3g2',\n              mime: 'video/3gpp2'\n            });\n\n          case 165:\n            return _context10.abrupt(\"return\", {\n              ext: '3gp',\n              mime: 'video/3gpp'\n            });\n\n          case 166:\n            return _context10.abrupt(\"return\", {\n              ext: 'mp4',\n              mime: 'video/mp4'\n            });\n\n          case 167:\n            if (!checkString('MThd')) {\n              _context10.next = 169;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mid',\n              mime: 'audio/midi'\n            });\n\n          case 169:\n            if (!(checkString('wOFF') && (check([0x00, 0x01, 0x00, 0x00], {\n              offset: 4\n            }) || checkString('OTTO', {\n              offset: 4\n            })))) {\n              _context10.next = 171;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'woff',\n              mime: 'font/woff'\n            });\n\n          case 171:\n            if (!(checkString('wOF2') && (check([0x00, 0x01, 0x00, 0x00], {\n              offset: 4\n            }) || checkString('OTTO', {\n              offset: 4\n            })))) {\n              _context10.next = 173;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'woff2',\n              mime: 'font/woff2'\n            });\n\n          case 173:\n            if (!(check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4]))) {\n              _context10.next = 175;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'pcap',\n              mime: 'application/vnd.tcpdump.pcap'\n            });\n\n          case 175:\n            if (!checkString('DSD ')) {\n              _context10.next = 177;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'dsf',\n              mime: 'audio/x-dsf' // Non-standard\n\n            });\n\n          case 177:\n            if (!checkString('LZIP')) {\n              _context10.next = 179;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'lz',\n              mime: 'application/x-lzip'\n            });\n\n          case 179:\n            if (!checkString('fLaC')) {\n              _context10.next = 181;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'flac',\n              mime: 'audio/x-flac'\n            });\n\n          case 181:\n            if (!check([0x42, 0x50, 0x47, 0xFB])) {\n              _context10.next = 183;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'bpg',\n              mime: 'image/bpg'\n            });\n\n          case 183:\n            if (!checkString('wvpk')) {\n              _context10.next = 185;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'wv',\n              mime: 'audio/wavpack'\n            });\n\n          case 185:\n            if (!checkString('%PDF')) {\n              _context10.next = 195;\n              break;\n            }\n\n            _context10.next = 188;\n            return tokenizer.ignore(1350);\n\n          case 188:\n            maxBufferSize = 10 * 1024 * 1024;\n            _buffer = Buffer.alloc(Math.min(maxBufferSize, tokenizer.fileInfo.size));\n            _context10.next = 192;\n            return tokenizer.readBuffer(_buffer, {\n              mayBeLess: true\n            });\n\n          case 192:\n            if (!_buffer.includes(Buffer.from('AIPrivateData'))) {\n              _context10.next = 194;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ai',\n              mime: 'application/postscript'\n            });\n\n          case 194:\n            return _context10.abrupt(\"return\", {\n              ext: 'pdf',\n              mime: 'application/pdf'\n            });\n\n          case 195:\n            if (!check([0x00, 0x61, 0x73, 0x6D])) {\n              _context10.next = 197;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'wasm',\n              mime: 'application/wasm'\n            });\n\n          case 197:\n            if (!check([0x49, 0x49, 0x2A, 0x0])) {\n              _context10.next = 210;\n              break;\n            }\n\n            if (!checkString('CR', {\n              offset: 8\n            })) {\n              _context10.next = 200;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'cr2',\n              mime: 'image/x-canon-cr2'\n            });\n\n          case 200:\n            if (!(check([0x1C, 0x00, 0xFE, 0x00], {\n              offset: 8\n            }) || check([0x1F, 0x00, 0x0B, 0x00], {\n              offset: 8\n            }))) {\n              _context10.next = 202;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'nef',\n              mime: 'image/x-nikon-nef'\n            });\n\n          case 202:\n            if (!(check([0x08, 0x00, 0x00, 0x00], {\n              offset: 4\n            }) && (check([0x2D, 0x00, 0xFE, 0x00], {\n              offset: 8\n            }) || check([0x27, 0x00, 0xFE, 0x00], {\n              offset: 8\n            })))) {\n              _context10.next = 204;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'dng',\n              mime: 'image/x-adobe-dng'\n            });\n\n          case 204:\n            buffer = Buffer.alloc(24);\n            _context10.next = 207;\n            return tokenizer.peekBuffer(buffer);\n\n          case 207:\n            if (!((check([0x10, 0xFB, 0x86, 0x01], {\n              offset: 4\n            }) || check([0x08, 0x00, 0x00, 0x00], {\n              offset: 4\n            })) && // This pattern differentiates ARW from other TIFF-ish file types:\n            check([0x00, 0xFE, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01], {\n              offset: 9\n            }))) {\n              _context10.next = 209;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'arw',\n              mime: 'image/x-sony-arw'\n            });\n\n          case 209:\n            return _context10.abrupt(\"return\", {\n              ext: 'tif',\n              mime: 'image/tiff'\n            });\n\n          case 210:\n            if (!check([0x4D, 0x4D, 0x0, 0x2A])) {\n              _context10.next = 212;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'tif',\n              mime: 'image/tiff'\n            });\n\n          case 212:\n            if (!checkString('MAC ')) {\n              _context10.next = 214;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ape',\n              mime: 'audio/ape'\n            });\n\n          case 214:\n            if (!check([0x1A, 0x45, 0xDF, 0xA3])) {\n              _context10.next = 230;\n              break;\n            }\n\n            // Root element: EBML\n            readField = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                var msb, mask, ic, id;\n                return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return tokenizer.peekNumber(Token.UINT8);\n\n                      case 2:\n                        msb = _context5.sent;\n                        mask = 0x80;\n                        ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n                        while ((msb & mask) === 0) {\n                          ++ic;\n                          mask >>= 1;\n                        }\n\n                        id = Buffer.alloc(ic + 1);\n                        _context5.next = 9;\n                        return tokenizer.readBuffer(id);\n\n                      case 9:\n                        return _context5.abrupt(\"return\", id);\n\n                      case 10:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function readField() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            readElement = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                var id, lenField, nrLen;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return readField();\n\n                      case 2:\n                        id = _context6.sent;\n                        _context6.next = 5;\n                        return readField();\n\n                      case 5:\n                        lenField = _context6.sent;\n                        lenField[0] ^= 0x80 >> lenField.length - 1;\n                        nrLen = Math.min(6, lenField.length); // JavaScript can max read 6 bytes integer\n\n                        return _context6.abrupt(\"return\", {\n                          id: id.readUIntBE(0, id.length),\n                          len: lenField.readUIntBE(lenField.length - nrLen, nrLen)\n                        });\n\n                      case 9:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function readElement() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            readChildren = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(level, children) {\n                var e;\n                return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        if (!(children > 0)) {\n                          _context7.next = 11;\n                          break;\n                        }\n\n                        _context7.next = 3;\n                        return readElement();\n\n                      case 3:\n                        e = _context7.sent;\n\n                        if (!(e.id === 0x4282)) {\n                          _context7.next = 6;\n                          break;\n                        }\n\n                        return _context7.abrupt(\"return\", tokenizer.readToken(new Token.StringType(e.len, 'utf-8')));\n\n                      case 6:\n                        _context7.next = 8;\n                        return tokenizer.ignore(e.len);\n\n                      case 8:\n                        // ignore payload\n                        --children;\n                        _context7.next = 0;\n                        break;\n\n                      case 11:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function readChildren(_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            _context10.next = 220;\n            return readElement();\n\n          case 220:\n            re = _context10.sent;\n            _context10.next = 223;\n            return readChildren(1, re.len);\n\n          case 223:\n            docType = _context10.sent;\n            _context10.t4 = docType;\n            _context10.next = _context10.t4 === 'webm' ? 227 : _context10.t4 === 'matroska' ? 228 : 229;\n            break;\n\n          case 227:\n            return _context10.abrupt(\"return\", {\n              ext: 'webm',\n              mime: 'video/webm'\n            });\n\n          case 228:\n            return _context10.abrupt(\"return\", {\n              ext: 'mkv',\n              mime: 'video/x-matroska'\n            });\n\n          case 229:\n            return _context10.abrupt(\"return\");\n\n          case 230:\n            if (!check([0x52, 0x49, 0x46, 0x46])) {\n              _context10.next = 237;\n              break;\n            }\n\n            if (!check([0x41, 0x56, 0x49], {\n              offset: 8\n            })) {\n              _context10.next = 233;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'avi',\n              mime: 'video/vnd.avi'\n            });\n\n          case 233:\n            if (!check([0x57, 0x41, 0x56, 0x45], {\n              offset: 8\n            })) {\n              _context10.next = 235;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'wav',\n              mime: 'audio/vnd.wave'\n            });\n\n          case 235:\n            if (!check([0x51, 0x4C, 0x43, 0x4D], {\n              offset: 8\n            })) {\n              _context10.next = 237;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'qcp',\n              mime: 'audio/qcelp'\n            });\n\n          case 237:\n            if (!checkString('SQLi')) {\n              _context10.next = 239;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'sqlite',\n              mime: 'application/x-sqlite3'\n            });\n\n          case 239:\n            if (!check([0x4E, 0x45, 0x53, 0x1A])) {\n              _context10.next = 241;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'nes',\n              mime: 'application/x-nintendo-nes-rom'\n            });\n\n          case 241:\n            if (!checkString('Cr24')) {\n              _context10.next = 243;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'crx',\n              mime: 'application/x-google-chrome-extension'\n            });\n\n          case 243:\n            if (!(checkString('MSCF') || checkString('ISc('))) {\n              _context10.next = 245;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'cab',\n              mime: 'application/vnd.ms-cab-compressed'\n            });\n\n          case 245:\n            if (!check([0xED, 0xAB, 0xEE, 0xDB])) {\n              _context10.next = 247;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'rpm',\n              mime: 'application/x-rpm'\n            });\n\n          case 247:\n            if (!check([0xC5, 0xD0, 0xD3, 0xC6])) {\n              _context10.next = 249;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'eps',\n              mime: 'application/eps'\n            });\n\n          case 249:\n            if (!check([0x28, 0xB5, 0x2F, 0xFD])) {\n              _context10.next = 251;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'zst',\n              mime: 'application/zstd'\n            });\n\n          case 251:\n            if (!check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n              _context10.next = 253;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'otf',\n              mime: 'font/otf'\n            });\n\n          case 253:\n            if (!checkString('#!AMR')) {\n              _context10.next = 255;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'amr',\n              mime: 'audio/amr'\n            });\n\n          case 255:\n            if (!checkString('{\\\\rtf')) {\n              _context10.next = 257;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'rtf',\n              mime: 'application/rtf'\n            });\n\n          case 257:\n            if (!check([0x46, 0x4C, 0x56, 0x01])) {\n              _context10.next = 259;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'flv',\n              mime: 'video/x-flv'\n            });\n\n          case 259:\n            if (!checkString('IMPM')) {\n              _context10.next = 261;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'it',\n              mime: 'audio/x-it'\n            });\n\n          case 261:\n            if (!(checkString('-lh0-', {\n              offset: 2\n            }) || checkString('-lh1-', {\n              offset: 2\n            }) || checkString('-lh2-', {\n              offset: 2\n            }) || checkString('-lh3-', {\n              offset: 2\n            }) || checkString('-lh4-', {\n              offset: 2\n            }) || checkString('-lh5-', {\n              offset: 2\n            }) || checkString('-lh6-', {\n              offset: 2\n            }) || checkString('-lh7-', {\n              offset: 2\n            }) || checkString('-lzs-', {\n              offset: 2\n            }) || checkString('-lz4-', {\n              offset: 2\n            }) || checkString('-lz5-', {\n              offset: 2\n            }) || checkString('-lhd-', {\n              offset: 2\n            }))) {\n              _context10.next = 263;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'lzh',\n              mime: 'application/x-lzh-compressed'\n            });\n\n          case 263:\n            if (!check([0x00, 0x00, 0x01, 0xBA])) {\n              _context10.next = 268;\n              break;\n            }\n\n            if (!check([0x21], {\n              offset: 4,\n              mask: [0xF1]\n            })) {\n              _context10.next = 266;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mpg',\n              // May also be .ps, .mpeg\n              mime: 'video/MP1S'\n            });\n\n          case 266:\n            if (!check([0x44], {\n              offset: 4,\n              mask: [0xC4]\n            })) {\n              _context10.next = 268;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mpg',\n              // May also be .mpg, .m2p, .vob or .sub\n              mime: 'video/MP2P'\n            });\n\n          case 268:\n            if (!checkString('ITSF')) {\n              _context10.next = 270;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'chm',\n              mime: 'application/vnd.ms-htmlhelp'\n            });\n\n          case 270:\n            if (!check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n              _context10.next = 272;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'xz',\n              mime: 'application/x-xz'\n            });\n\n          case 272:\n            if (!checkString('<?xml ')) {\n              _context10.next = 274;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'xml',\n              mime: 'application/xml'\n            });\n\n          case 274:\n            if (!check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n              _context10.next = 276;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: '7z',\n              mime: 'application/x-7z-compressed'\n            });\n\n          case 276:\n            if (!(check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) && (buffer[6] === 0x0 || buffer[6] === 0x1))) {\n              _context10.next = 278;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'rar',\n              mime: 'application/x-rar-compressed'\n            });\n\n          case 278:\n            if (!checkString('solid ')) {\n              _context10.next = 280;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'stl',\n              mime: 'model/stl'\n            });\n\n          case 280:\n            if (!checkString('BLENDER')) {\n              _context10.next = 282;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'blend',\n              mime: 'application/x-blender'\n            });\n\n          case 282:\n            if (!checkString('!<arch>')) {\n              _context10.next = 291;\n              break;\n            }\n\n            _context10.next = 285;\n            return tokenizer.ignore(8);\n\n          case 285:\n            _context10.next = 287;\n            return tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\n          case 287:\n            str = _context10.sent;\n\n            if (!(str === 'debian-binary')) {\n              _context10.next = 290;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'deb',\n              mime: 'application/x-deb'\n            });\n\n          case 290:\n            return _context10.abrupt(\"return\", {\n              ext: 'ar',\n              mime: 'application/x-unix-archive'\n            });\n\n          case 291:\n            if (!check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n              _context10.next = 309;\n              break;\n            }\n\n            // ignore PNG signature\n            readChunkHeader = /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _context8.next = 2;\n                        return tokenizer.readToken(Token.INT32_BE);\n\n                      case 2:\n                        _context8.t0 = _context8.sent;\n                        _context8.next = 5;\n                        return tokenizer.readToken(new Token.StringType(4, 'binary'));\n\n                      case 5:\n                        _context8.t1 = _context8.sent;\n                        return _context8.abrupt(\"return\", {\n                          length: _context8.t0,\n                          type: _context8.t1\n                        });\n\n                      case 7:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function readChunkHeader() {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            _context10.next = 295;\n            return tokenizer.ignore(8);\n\n          case 295:\n            _context10.next = 297;\n            return readChunkHeader();\n\n          case 297:\n            chunk = _context10.sent;\n\n            if (!(chunk.length < 0)) {\n              _context10.next = 300;\n              break;\n            }\n\n            return _context10.abrupt(\"return\");\n\n          case 300:\n            _context10.t5 = chunk.type;\n            _context10.next = _context10.t5 === 'IDAT' ? 303 : _context10.t5 === 'acTL' ? 304 : 305;\n            break;\n\n          case 303:\n            return _context10.abrupt(\"return\", {\n              ext: 'png',\n              mime: 'image/png'\n            });\n\n          case 304:\n            return _context10.abrupt(\"return\", {\n              ext: 'apng',\n              mime: 'image/apng'\n            });\n\n          case 305:\n            _context10.next = 307;\n            return tokenizer.ignore(chunk.length + 4);\n\n          case 307:\n            if (tokenizer.position + 8 < tokenizer.fileInfo.size) {\n              _context10.next = 295;\n              break;\n            }\n\n          case 308:\n            return _context10.abrupt(\"return\", {\n              ext: 'png',\n              mime: 'image/png'\n            });\n\n          case 309:\n            if (!check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n              _context10.next = 311;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'arrow',\n              mime: 'application/x-apache-arrow'\n            });\n\n          case 311:\n            if (!check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n              _context10.next = 313;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'glb',\n              mime: 'model/gltf-binary'\n            });\n\n          case 313:\n            if (!(check([0x66, 0x72, 0x65, 0x65], {\n              offset: 4\n            }) || // `free`\n            check([0x6D, 0x64, 0x61, 0x74], {\n              offset: 4\n            }) || // `mdat` MJPEG\n            check([0x6D, 0x6F, 0x6F, 0x76], {\n              offset: 4\n            }) || // `moov`\n            check([0x77, 0x69, 0x64, 0x65], {\n              offset: 4\n            }) // `wide`\n            )) {\n              _context10.next = 315;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mov',\n              mime: 'video/quicktime'\n            });\n\n          case 315:\n            if (!check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n              _context10.next = 317;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'orf',\n              mime: 'image/x-olympus-orf'\n            });\n\n          case 317:\n            if (!checkString('gimp xcf ')) {\n              _context10.next = 319;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'xcf',\n              mime: 'image/x-xcf'\n            });\n\n          case 319:\n            if (!check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n              _context10.next = 321;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'rw2',\n              mime: 'image/x-panasonic-rw2'\n            });\n\n          case 321:\n            if (!check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n              _context10.next = 346;\n              break;\n            }\n\n            readHeader = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                var guid;\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        guid = Buffer.alloc(16);\n                        _context9.next = 3;\n                        return tokenizer.readBuffer(guid);\n\n                      case 3:\n                        _context9.t0 = guid;\n                        _context9.t1 = Number;\n                        _context9.next = 7;\n                        return tokenizer.readToken(Token.UINT64_LE);\n\n                      case 7:\n                        _context9.t2 = _context9.sent;\n                        _context9.t3 = (0, _context9.t1)(_context9.t2);\n                        return _context9.abrupt(\"return\", {\n                          id: _context9.t0,\n                          size: _context9.t3\n                        });\n\n                      case 10:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function readHeader() {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            _context10.next = 325;\n            return tokenizer.ignore(30);\n\n          case 325:\n            if (!(tokenizer.position + 24 < tokenizer.fileInfo.size)) {\n              _context10.next = 345;\n              break;\n            }\n\n            _context10.next = 328;\n            return readHeader();\n\n          case 328:\n            header = _context10.sent;\n            payload = header.size - 24;\n\n            if (!_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n              _context10.next = 341;\n              break;\n            }\n\n            // Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n            typeId = Buffer.alloc(16);\n            _context10.t6 = payload;\n            _context10.next = 335;\n            return tokenizer.readBuffer(typeId);\n\n          case 335:\n            payload = _context10.t6 -= _context10.sent;\n\n            if (!_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n              _context10.next = 338;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'asf',\n              mime: 'audio/x-ms-asf'\n            });\n\n          case 338:\n            if (!_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n              _context10.next = 340;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'asf',\n              mime: 'video/x-ms-asf'\n            });\n\n          case 340:\n            return _context10.abrupt(\"break\", 345);\n\n          case 341:\n            _context10.next = 343;\n            return tokenizer.ignore(payload);\n\n          case 343:\n            _context10.next = 325;\n            break;\n\n          case 345:\n            return _context10.abrupt(\"return\", {\n              ext: 'asf',\n              mime: 'application/vnd.ms-asf'\n            });\n\n          case 346:\n            if (!check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n              _context10.next = 348;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ktx',\n              mime: 'image/ktx'\n            });\n\n          case 348:\n            if (!((check([0x7E, 0x10, 0x04]) || check([0x7E, 0x18, 0x04])) && check([0x30, 0x4D, 0x49, 0x45], {\n              offset: 4\n            }))) {\n              _context10.next = 350;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mie',\n              mime: 'application/x-mie'\n            });\n\n          case 350:\n            if (!check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {\n              offset: 2\n            })) {\n              _context10.next = 352;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'shp',\n              mime: 'application/x-esri-shape'\n            });\n\n          case 352:\n            if (!check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n              _context10.next = 366;\n              break;\n            }\n\n            _context10.next = 355;\n            return tokenizer.ignore(20);\n\n          case 355:\n            _context10.next = 357;\n            return tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\n          case 357:\n            _type2 = _context10.sent;\n            _context10.t7 = _type2;\n            _context10.next = _context10.t7 === 'jp2 ' ? 361 : _context10.t7 === 'jpx ' ? 362 : _context10.t7 === 'jpm ' ? 363 : _context10.t7 === 'mjp2' ? 364 : 365;\n            break;\n\n          case 361:\n            return _context10.abrupt(\"return\", {\n              ext: 'jp2',\n              mime: 'image/jp2'\n            });\n\n          case 362:\n            return _context10.abrupt(\"return\", {\n              ext: 'jpx',\n              mime: 'image/jpx'\n            });\n\n          case 363:\n            return _context10.abrupt(\"return\", {\n              ext: 'jpm',\n              mime: 'image/jpm'\n            });\n\n          case 364:\n            return _context10.abrupt(\"return\", {\n              ext: 'mj2',\n              mime: 'image/mj2'\n            });\n\n          case 365:\n            return _context10.abrupt(\"return\");\n\n          case 366:\n            if (!(check([0xFF, 0x0A]) || check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A]))) {\n              _context10.next = 368;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'jxl',\n              mime: 'image/jxl'\n            });\n\n          case 368:\n            if (!(check([0x0, 0x0, 0x1, 0xBA]) || check([0x0, 0x0, 0x1, 0xB3]))) {\n              _context10.next = 370;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mpg',\n              mime: 'video/mpeg'\n            });\n\n          case 370:\n            if (!check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n              _context10.next = 372;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ttf',\n              mime: 'font/ttf'\n            });\n\n          case 372:\n            if (!check([0x00, 0x00, 0x01, 0x00])) {\n              _context10.next = 374;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ico',\n              mime: 'image/x-icon'\n            });\n\n          case 374:\n            if (!check([0x00, 0x00, 0x02, 0x00])) {\n              _context10.next = 376;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'cur',\n              mime: 'image/x-icon'\n            });\n\n          case 376:\n            if (!check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n              _context10.next = 378;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'cfb',\n              mime: 'application/x-cfb'\n            });\n\n          case 378:\n            _context10.next = 380;\n            return tokenizer.peekBuffer(buffer, {\n              length: Math.min(256, tokenizer.fileInfo.size),\n              mayBeLess: true\n            });\n\n          case 380:\n            if (!checkString('BEGIN:')) {\n              _context10.next = 385;\n              break;\n            }\n\n            if (!checkString('VCARD', {\n              offset: 6\n            })) {\n              _context10.next = 383;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'vcf',\n              mime: 'text/vcard'\n            });\n\n          case 383:\n            if (!checkString('VCALENDAR', {\n              offset: 6\n            })) {\n              _context10.next = 385;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'ics',\n              mime: 'text/calendar'\n            });\n\n          case 385:\n            if (!checkString('FUJIFILMCCD-RAW')) {\n              _context10.next = 387;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'raf',\n              mime: 'image/x-fujifilm-raf'\n            });\n\n          case 387:\n            if (!checkString('Extended Module:')) {\n              _context10.next = 389;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'xm',\n              mime: 'audio/x-xm'\n            });\n\n          case 389:\n            if (!checkString('Creative Voice File')) {\n              _context10.next = 391;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'voc',\n              mime: 'audio/x-voc'\n            });\n\n          case 391:\n            if (!(check([0x04, 0x00, 0x00, 0x00]) && buffer.length >= 16)) {\n              _context10.next = 403;\n              break;\n            }\n\n            // Rough & quick check Pickle/ASAR\n            jsonSize = buffer.readUInt32LE(12);\n\n            if (!(jsonSize > 12 && buffer.length >= jsonSize + 16)) {\n              _context10.next = 403;\n              break;\n            }\n\n            _context10.prev = 394;\n            _header = buffer.slice(16, jsonSize + 16).toString();\n            json = JSON.parse(_header); // Check if Pickle is ASAR\n\n            if (!json.files) {\n              _context10.next = 399;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'asar',\n              mime: 'application/x-asar'\n            });\n\n          case 399:\n            _context10.next = 403;\n            break;\n\n          case 401:\n            _context10.prev = 401;\n            _context10.t8 = _context10[\"catch\"](394);\n\n          case 403:\n            if (!check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n              _context10.next = 405;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mxf',\n              mime: 'application/mxf'\n            });\n\n          case 405:\n            if (!checkString('SCRM', {\n              offset: 44\n            })) {\n              _context10.next = 407;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 's3m',\n              mime: 'audio/x-s3m'\n            });\n\n          case 407:\n            if (!(check([0x47], {\n              offset: 4\n            }) && (check([0x47], {\n              offset: 192\n            }) || check([0x47], {\n              offset: 196\n            })))) {\n              _context10.next = 409;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mts',\n              mime: 'video/mp2t'\n            });\n\n          case 409:\n            if (!check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {\n              offset: 60\n            })) {\n              _context10.next = 411;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mobi',\n              mime: 'application/x-mobipocket-ebook'\n            });\n\n          case 411:\n            if (!check([0x44, 0x49, 0x43, 0x4D], {\n              offset: 128\n            })) {\n              _context10.next = 413;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'dcm',\n              mime: 'application/dicom'\n            });\n\n          case 413:\n            if (!check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n              _context10.next = 415;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'lnk',\n              mime: 'application/x.ms.shortcut' // Invented by us\n\n            });\n\n          case 415:\n            if (!check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n              _context10.next = 417;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'alias',\n              mime: 'application/x.apple.alias' // Invented by us\n\n            });\n\n          case 417:\n            if (!(check([0x4C, 0x50], {\n              offset: 34\n            }) && (check([0x00, 0x00, 0x01], {\n              offset: 8\n            }) || check([0x01, 0x00, 0x02], {\n              offset: 8\n            }) || check([0x02, 0x00, 0x02], {\n              offset: 8\n            })))) {\n              _context10.next = 419;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'eot',\n              mime: 'application/vnd.ms-fontobject'\n            });\n\n          case 419:\n            if (!check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n              _context10.next = 421;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'indd',\n              mime: 'application/x-indesign'\n            });\n\n          case 421:\n            _context10.next = 423;\n            return tokenizer.peekBuffer(buffer, {\n              length: Math.min(512, tokenizer.fileInfo.size),\n              mayBeLess: true\n            });\n\n          case 423:\n            if (!tarHeaderChecksumMatches(buffer)) {\n              _context10.next = 425;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'tar',\n              mime: 'application/x-tar'\n            });\n\n          case 425:\n            if (!check([0xFF, 0xFE, 0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00])) {\n              _context10.next = 427;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'skp',\n              mime: 'application/vnd.sketchup.skp'\n            });\n\n          case 427:\n            if (!checkString('-----BEGIN PGP MESSAGE-----')) {\n              _context10.next = 429;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'pgp',\n              mime: 'application/pgp-encrypted'\n            });\n\n          case 429:\n            if (!(buffer.length >= 2 && check([0xFF, 0xE0], {\n              offset: 0,\n              mask: [0xFF, 0xE0]\n            }))) {\n              _context10.next = 440;\n              break;\n            }\n\n            if (!check([0x10], {\n              offset: 1,\n              mask: [0x16]\n            })) {\n              _context10.next = 434;\n              break;\n            }\n\n            if (!check([0x08], {\n              offset: 1,\n              mask: [0x08]\n            })) {\n              _context10.next = 433;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'aac',\n              mime: 'audio/aac'\n            });\n\n          case 433:\n            return _context10.abrupt(\"return\", {\n              ext: 'aac',\n              mime: 'audio/aac'\n            });\n\n          case 434:\n            if (!check([0x02], {\n              offset: 1,\n              mask: [0x06]\n            })) {\n              _context10.next = 436;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mp3',\n              mime: 'audio/mpeg'\n            });\n\n          case 436:\n            if (!check([0x04], {\n              offset: 1,\n              mask: [0x06]\n            })) {\n              _context10.next = 438;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mp2',\n              mime: 'audio/mpeg'\n            });\n\n          case 438:\n            if (!check([0x06], {\n              offset: 1,\n              mask: [0x06]\n            })) {\n              _context10.next = 440;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              ext: 'mp1',\n              mime: 'audio/mpeg'\n            });\n\n          case 440:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[61, 116], [394, 401]]);\n  }));\n  return _fromTokenizer3.apply(this, arguments);\n}\n\nvar stream = function stream(readableStream) {\n  return new Promise(function (resolve, reject) {\n    // Using `eval` to work around issues when bundling with Webpack\n    var stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n    readableStream.on('error', reject);\n    readableStream.once('readable', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var pass, outputStream, chunk, _fileType;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Set up output stream\n              pass = new stream.PassThrough();\n\n              if (stream.pipeline) {\n                outputStream = stream.pipeline(readableStream, pass, function () {});\n              } else {\n                outputStream = readableStream.pipe(pass);\n              } // Read the input stream and detect the filetype\n\n\n              chunk = readableStream.read(minimumBytes) || readableStream.read() || Buffer.alloc(0);\n              _context.prev = 3;\n              _context.next = 6;\n              return fromBuffer(chunk);\n\n            case 6:\n              _fileType = _context.sent;\n              pass.fileType = _fileType;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              reject(_context.t0);\n\n            case 13:\n              resolve(outputStream);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    })));\n  });\n};\n\nvar fileType = {\n  fromStream: fromStream,\n  fromTokenizer: fromTokenizer,\n  fromBuffer: fromBuffer,\n  stream: stream\n};\nObject.defineProperty(fileType, 'extensions', {\n  get: function get() {\n    return new Set(supported.extensions);\n  }\n});\nObject.defineProperty(fileType, 'mimeTypes', {\n  get: function get() {\n    return new Set(supported.mimeTypes);\n  }\n});\nmodule.exports = fileType;","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/file-type/core.js"],"names":["Token","require","strtok3","stringToBytes","tarHeaderChecksumMatches","uint32SyncSafeToken","supported","minimumBytes","fromStream","stream","tokenizer","fromTokenizer","close","fromBuffer","input","Uint8Array","ArrayBuffer","Buffer","isBuffer","TypeError","buffer","from","length","_check","headers","options","offset","entries","index","header","mask","_fromTokenizer","EndOfStreamError","alloc","bytesRead","check","checkString","fileInfo","size","Number","MAX_SAFE_INTEGER","peekBuffer","mayBeLess","ext","mime","ignore","readToken","id3HeaderLen","position","readBuffer","zipHeader","compressedSize","readUInt32LE","uncompressedSize","filenameLength","readUInt16LE","extraFieldLength","StringType","filename","endsWith","type","split","startsWith","mimeType","nextHeaderIndex","indexOf","brandMajor","toString","replace","trim","maxBufferSize","Math","min","includes","readField","peekNumber","UINT8","msb","ic","id","readElement","lenField","nrLen","readUIntBE","len","readChildren","level","children","e","re","docType","str","readChunkHeader","INT32_BE","chunk","readHeader","guid","UINT64_LE","payload","typeId","jsonSize","slice","json","JSON","parse","files","readableStream","Promise","resolve","reject","eval","on","once","pass","PassThrough","pipeline","outputStream","pipe","read","fileType","Object","defineProperty","get","Set","extensions","mimeTypes","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;AACA,eAIIA,OAAO,CAAC,QAAD,CAJX;AAAA,IACCE,aADD,YACCA,aADD;AAAA,IAECC,wBAFD,YAECA,wBAFD;AAAA,IAGCC,mBAHD,YAGCA,mBAHD;;AAKA,IAAMC,SAAS,GAAGL,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAMM,YAAY,GAAG,IAArB,C,CAA2B;;SAEZC,U;;;;;yEAAf,kBAA0BC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBP,OAAO,CAACM,UAAR,CAAmBC,MAAnB,CADzB;;AAAA;AACOC,YAAAA,SADP;AAAA;AAAA;AAAA,mBAGeC,aAAa,CAACD,SAAD,CAH5B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAKQA,SAAS,CAACE,KAAV,EALR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SASeC,U;;;;;yEAAf,kBAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACOA,KAAK,YAAYC,UAAjB,IAA+BD,KAAK,YAAYE,WAAhD,IAA+DC,MAAM,CAACC,QAAP,CAAgBJ,KAAhB,CADtE;AAAA;AAAA;AAAA;;AAAA,kBAEQ,IAAIK,SAAJ,uGAAsH,OAAOL,KAA7H,OAFR;;AAAA;AAKOM,YAAAA,MALP,GAKgBN,KAAK,YAAYG,MAAjB,GAA0BH,KAA1B,GAAkCG,MAAM,CAACI,IAAP,CAAYP,KAAZ,CALlD;;AAAA,gBAOOM,MAAM,IAAIA,MAAM,CAACE,MAAP,GAAgB,CAPjC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAWOZ,YAAAA,SAXP,GAWmBR,OAAO,CAACW,UAAR,CAAmBO,MAAnB,CAXnB;AAAA,8CAYQT,aAAa,CAACD,SAAD,CAZrB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,SAASa,MAAT,CAAgBH,MAAhB,EAAwBI,OAAxB,EAAiCC,OAAjC,EAA0C;AACzCA,EAAAA,OAAO;AACNC,IAAAA,MAAM,EAAE;AADF,KAEHD,OAFG,CAAP;;AADyC,6CAMXD,OAAO,CAACG,OAAR,EANW;AAAA;;AAAA;AAMzC,wDAAiD;AAAA;AAAA,UAArCC,KAAqC;AAAA,UAA9BC,MAA8B;;AAChD;AACA,UAAIJ,OAAO,CAACK,IAAZ,EAAkB;AACjB;AACA,YAAID,MAAM,MAAMJ,OAAO,CAACK,IAAR,CAAaF,KAAb,IAAsBR,MAAM,CAACQ,KAAK,GAAGH,OAAO,CAACC,MAAjB,CAAlC,CAAV,EAAuE;AACtE,iBAAO,KAAP;AACA;AACD,OALD,MAKO,IAAIG,MAAM,KAAKT,MAAM,CAACQ,KAAK,GAAGH,OAAO,CAACC,MAAjB,CAArB,EAA+C;AACrD,eAAO,KAAP;AACA;AACD;AAhBwC;AAAA;AAAA;AAAA;AAAA;;AAkBzC,SAAO,IAAP;AACA;;SAEcf,a;;;;;6EAAf,kBAA6BD,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAESqB,cAAc,CAACrB,SAAD,CAFvB;;AAAA;AAAA;AAAA;;AAAA,gBAIQ,wBAAiBR,OAAO,CAAC8B,gBAJjC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAUeD,c;;;;;6EAAf,mBAA8BrB,SAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACKU,YAAAA,MADL,GACcH,MAAM,CAACgB,KAAP,CAAa1B,YAAb,CADd;AAEO2B,YAAAA,SAFP,GAEmB,EAFnB;;AAGOC,YAAAA,KAHP,GAGe,SAARA,KAAQ,CAACN,MAAD,EAASJ,OAAT;AAAA,qBAAqBF,MAAM,CAACH,MAAD,EAASS,MAAT,EAAiBJ,OAAjB,CAA3B;AAAA,aAHf;;AAIOW,YAAAA,WAJP,GAIqB,SAAdA,WAAc,CAACP,MAAD,EAASJ,OAAT;AAAA,qBAAqBU,KAAK,CAAChC,aAAa,CAAC0B,MAAD,CAAd,EAAwBJ,OAAxB,CAA1B;AAAA,aAJrB,EAMC;;;AACA,gBAAI,CAACf,SAAS,CAAC2B,QAAV,CAAmBC,IAAxB,EAA8B;AAC7B5B,cAAAA,SAAS,CAAC2B,QAAV,CAAmBC,IAAnB,GAA0BC,MAAM,CAACC,gBAAjC;AACA;;AATF;AAAA,mBAWO9B,SAAS,CAAC+B,UAAV,CAAqBrB,MAArB,EAA6B;AAACE,cAAAA,MAAM,EAAEY,SAAT;AAAoBQ,cAAAA,SAAS,EAAE;AAA/B,aAA7B,CAXP;;AAAA;AAAA,iBAeKP,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAfV;AAAA;AAAA;AAAA;;AAAA,+CAgBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhBT;;AAAA;AAAA,iBAsBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAtBV;AAAA;AAAA;AAAA;;AAAA,+CAuBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvBT;;AAAA;AAAA,iBA6BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CA7BV;AAAA;AAAA;AAAA;;AAAA,+CA8BS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9BT;;AAAA;AAAA,iBAoCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CApCV;AAAA;AAAA;AAAA;;AAAA,+CAqCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aArCT;;AAAA;AAAA,iBA2CKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CA3CV;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA4CQzB,SAAS,CAAC+B,UAAV,CAAqBrB,MAArB,EAA6B;AAACE,cAAAA,MAAM,EAAE,EAAT;AAAaoB,cAAAA,SAAS,EAAE;AAAxB,aAA7B,CA5CR;;AAAA;AAAA,kBA8CMN,WAAW,CAAC,WAAD,EAAc;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAd,CAAX,IACHU,WAAW,CAAC,QAAD,EAAW;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAX,CA/Cd;AAAA;AAAA;AAAA;;AAAA,+CAgDU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhDV;;AAAA;AAAA,+CAsDS;AACND,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAtDT;;AAAA;AAAA,kBA6DET,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAAL,IACAA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CA9DP;AAAA;AAAA;AAAA;;AAAA,+CAgES;AACNQ,cAAAA,GAAG,EAAE,GADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhET;;AAAA;AAAA,iBAwEKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAxEV;AAAA;AAAA;AAAA;;AAAA,+CAyES;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzET;;AAAA;AAAA,iBA+EKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CA/EV;AAAA;AAAA;AAAA;;AAAA,+CAgFS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhFT;;AAAA;AAAA,iBAsFKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,CAAD,CAtFV;AAAA;AAAA;AAAA;;AAAA,+CAuFS;AACNQ,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvFT;;AAAA;AAAA,iBA6FKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CA7FV;AAAA;AAAA;AAAA;;AAAA,+CA8FS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9FT;;AAAA;AAAA,iBAoGKR,WAAW,CAAC,KAAD,CApGhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAqGQ1B,SAAS,CAACmC,MAAV,CAAiB,CAAjB,CArGR;;AAAA;AAAA;AAAA,mBAsG6BnC,SAAS,CAACoC,SAAV,CAAoBzC,mBAApB,CAtG7B;;AAAA;AAsGQ0C,YAAAA,YAtGR;;AAAA,kBAuGMrC,SAAS,CAACsC,QAAV,GAAqBD,YAArB,GAAoCrC,SAAS,CAAC2B,QAAV,CAAmBC,IAvG7D;AAAA;AAAA;AAAA;;AAAA,+CAyGU;AACNK,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzGV;;AAAA;AAAA;AAAA,mBA+GQlC,SAAS,CAACmC,MAAV,CAAiBE,YAAjB,CA/GR;;AAAA;AAAA,+CAgHSpC,aAAa,CAACD,SAAD,CAhHtB;;AAAA;AAAA,iBAoHK0B,WAAW,CAAC,KAAD,CApHhB;AAAA;AAAA;AAAA;;AAAA,+CAqHS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aArHT;;AAAA;AAAA,kBA4HE,CAACxB,MAAM,CAAC,CAAD,CAAN,KAAc,IAAd,IAAsBA,MAAM,CAAC,CAAD,CAAN,KAAc,IAArC,KACAe,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,EAAe;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAf,CA7HP;AAAA;AAAA;AAAA;;AAAA,+CA+HS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/HT;;AAAA;AAAA,iBAuIKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAvIV;AAAA;AAAA;AAAA;;AAAA,+CAwIS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAxIT;;AAAA;AAAA,iBA8IKR,WAAW,CAAC,MAAD,CA9IhB;AAAA;AAAA;AAAA;;AAAA,+CA+IS;AACNO,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/IT;;AAAA;AAAA,iBAqJKR,WAAW,CAAC,MAAD,CArJhB;AAAA;AAAA;AAAA;;AAAA,+CAsJS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAtJT;;AAAA;AAAA,iBA4JKR,WAAW,CAAC,MAAD,EAAS;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAT,CA5JhB;AAAA;AAAA;AAAA;;AAAA,+CA6JS;AACNiB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7JT;;AAAA;AAAA,iBAoKKR,WAAW,CAAC,MAAD,CApKhB;AAAA;AAAA;AAAA;;AAAA,+CAqKS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aArKT;;AAAA;AAAA,iBA2KKR,WAAW,CAAC,MAAD,CA3KhB;AAAA;AAAA;AAAA;;AAAA,+CA4KS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA5KT;;AAAA;AAAA,iBAkLKR,WAAW,CAAC,MAAD,EAAS;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAT,CAlLhB;AAAA;AAAA;AAAA;;AAAA,+CAmLS;AACNiB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAnLT;;AAAA;AAAA,iBA2LKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,GAAlB,CAAD,CA3LV;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBA6LUzB,SAAS,CAACsC,QAAV,GAAqB,EAArB,GAA0BtC,SAAS,CAAC2B,QAAV,CAAmBC,IA7LvD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA8LU5B,SAAS,CAACuC,UAAV,CAAqB7B,MAArB,EAA6B;AAACE,cAAAA,MAAM,EAAE;AAAT,aAA7B,CA9LV;;AAAA;AAgMI;AACM4B,YAAAA,SAjMV,GAiMsB;AACjBC,cAAAA,cAAc,EAAE/B,MAAM,CAACgC,YAAP,CAAoB,EAApB,CADC;AAEjBC,cAAAA,gBAAgB,EAAEjC,MAAM,CAACgC,YAAP,CAAoB,EAApB,CAFD;AAGjBE,cAAAA,cAAc,EAAElC,MAAM,CAACmC,YAAP,CAAoB,EAApB,CAHC;AAIjBC,cAAAA,gBAAgB,EAAEpC,MAAM,CAACmC,YAAP,CAAoB,EAApB;AAJD,aAjMtB;AAAA;AAAA,mBAwM+B7C,SAAS,CAACoC,SAAV,CAAoB,IAAI9C,KAAK,CAACyD,UAAV,CAAqBP,SAAS,CAACI,cAA/B,EAA+C,OAA/C,CAApB,CAxM/B;;AAAA;AAwMIJ,YAAAA,SAAS,CAACQ,QAxMd;AAAA;AAAA,mBAyMUhD,SAAS,CAACmC,MAAV,CAAiBK,SAAS,CAACM,gBAA3B,CAzMV;;AAAA;AAAA,kBA4MQN,SAAS,CAACQ,QAAV,KAAuB,sBA5M/B;AAAA;AAAA;AAAA;;AAAA,+CA6MY;AACNf,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7MZ;;AAAA;AAAA,kBAmNQM,SAAS,CAACQ,QAAV,CAAmBC,QAAnB,CAA4B,OAA5B,KAAwCT,SAAS,CAACQ,QAAV,CAAmBC,QAAnB,CAA4B,MAA5B,CAnNhD;AAAA;AAAA;AAAA;;AAoNWC,YAAAA,IApNX,GAoNkBV,SAAS,CAACQ,QAAV,CAAmBG,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CApNlB;AAAA,4BAqNaD,IArNb;AAAA,gDAsNW,OAtNX,0BAwNW,MAxNX,0BA6NW,KA7NX,0BAkOW,IAlOX;AAAA;;AAAA;AAAA;;AAAA;AAAA,+CAyNc;AACNjB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzNd;;AAAA;AAAA,+CA8Nc;AACND,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9Nd;;AAAA;AAAA,+CAmOc;AACND,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAnOd;;AAAA;AAAA;;AAAA;AAAA,iBA4OQM,SAAS,CAACQ,QAAV,CAAmBI,UAAnB,CAA8B,KAA9B,CA5OR;AAAA;AAAA;AAAA;;AAAA,+CA6OY;AACNnB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7OZ;;AAAA;AAAA,kBAmPQM,SAAS,CAACQ,QAAV,CAAmBI,UAAnB,CAA8B,KAA9B,KAAwCZ,SAAS,CAACQ,QAAV,CAAmBC,QAAnB,CAA4B,QAA5B,CAnPhD;AAAA;AAAA;AAAA;;AAAA,+CAoPY;AACNhB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aApPZ;;AAAA;AAAA,kBAgQQM,SAAS,CAACQ,QAAV,KAAuB,UAAvB,IAAqCR,SAAS,CAACC,cAAV,KAA6BD,SAAS,CAACG,gBAhQpF;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiQ4B3C,SAAS,CAACoC,SAAV,CAAoB,IAAI9C,KAAK,CAACyD,UAAV,CAAqBP,SAAS,CAACC,cAA/B,EAA+C,OAA/C,CAApB,CAjQ5B;;AAAA;AAiQWY,YAAAA,QAjQX;AAAA,4BAmQaA,QAnQb;AAAA,gDAoQW,sBApQX,0BAyQW,yCAzQX,0BA8QW,gDA9QX,0BAmRW,iDAnRX;AAAA;;AAAA;AAAA,+CAqQc;AACNpB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aArQd;;AAAA;AAAA,+CA0Qc;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1Qd;;AAAA;AAAA,+CA+Qc;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/Qd;;AAAA;AAAA,+CAoRc;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aApRd;;AAAA;AAAA,kBA6RQM,SAAS,CAACC,cAAV,KAA6B,CA7RrC;AAAA;AAAA;AAAA;;AA8RSa,YAAAA,eA9RT,GA8R2B,CAAC,CA9R5B;;AAAA;AAAA,kBAgSYA,eAAe,GAAG,CAAlB,IAAwBtD,SAAS,CAACsC,QAAV,GAAqBtC,SAAS,CAAC2B,QAAV,CAAmBC,IAhS5E;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiSY5B,SAAS,CAAC+B,UAAV,CAAqBrB,MAArB,EAA6B;AAACsB,cAAAA,SAAS,EAAE;AAAZ,aAA7B,CAjSZ;;AAAA;AAmSMsB,YAAAA,eAAe,GAAG5C,MAAM,CAAC6C,OAAP,CAAe,UAAf,EAA2B,CAA3B,EAA8B,KAA9B,CAAlB,CAnSN,CAoSM;;AApSN;AAAA,mBAqSYvD,SAAS,CAACmC,MAAV,CAAiBmB,eAAe,IAAI,CAAnB,GAAuBA,eAAvB,GAAyC5C,MAAM,CAACE,MAAjE,CArSZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAwSWZ,SAAS,CAACmC,MAAV,CAAiBK,SAAS,CAACC,cAA3B,CAxSX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,gBA4SS,yBAAiBjD,OAAO,CAAC8B,gBA5SlC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,+CAiTS;AACNW,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAjTT;;AAAA;AAAA,iBAuTKR,WAAW,CAAC,MAAD,CAvThB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAyTQ1B,SAAS,CAACmC,MAAV,CAAiB,EAAjB,CAzTR;;AAAA;AA0TQe,YAAAA,KA1TR,GA0Te3C,MAAM,CAACgB,KAAP,CAAa,CAAb,CA1Tf;AAAA;AAAA,mBA2TQvB,SAAS,CAACuC,UAAV,CAAqBW,KAArB,CA3TR;;AAAA;AAAA,iBA8TMrC,MAAM,CAACqC,KAAD,EAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAP,CA9TZ;AAAA;AAAA;AAAA;;AAAA,+CA+TU;AACNjB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/TV;;AAAA;AAAA,iBAsUMrB,MAAM,CAACqC,KAAD,EAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAP,CAtUZ;AAAA;AAAA;AAAA;;AAAA,+CAuUU;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvUV;;AAAA;AAAA,iBA8UMrB,MAAM,CAACqC,KAAD,EAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAP,CA9UZ;AAAA;AAAA;AAAA;;AAAA,+CA+UU;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/UV;;AAAA;AAAA,iBAsVMrB,MAAM,CAACqC,KAAD,EAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAP,CAtVZ;AAAA;AAAA;AAAA;;AAAA,+CAuVU;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvVV;;AAAA;AAAA,iBA8VMrB,MAAM,CAACqC,KAAD,EAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAP,CA9VZ;AAAA;AAAA;AAAA;;AAAA,+CA+VU;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/VV;;AAAA;AAAA,iBAsWMrB,MAAM,CAACqC,KAAD,EAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAP,CAtWZ;AAAA;AAAA;AAAA;;AAAA,+CAuWU;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvWV;;AAAA;AAAA,+CA8WS;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9WT;;AAAA;AAAA,kBAqXET,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAAL,KACCf,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAAC,CAAD,CAAN,KAAc,GAAnC,IAA0CA,MAAM,CAAC,CAAD,CAAN,KAAc,GADzD,MAECA,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAAC,CAAD,CAAN,KAAc,GAAnC,IAA0CA,MAAM,CAAC,CAAD,CAAN,KAAc,GAFzD,CArXF;AAAA;AAAA;AAAA;;AAAA,+CAyXS;AACNuB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzXT;;AAAA;AAAA,kBAsYER,WAAW,CAAC,MAAD,EAAS;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAT,CAAX,IACA,CAACN,MAAM,CAAC,CAAD,CAAN,GAAY,IAAb,MAAuB,IAvYzB,CAuY8B;AAvY9B;AAAA;AAAA;AAAA;;AAyYE;AACA;AACM8C,YAAAA,UA3YR,GA2YqB9C,MAAM,CAAC+C,QAAP,CAAgB,QAAhB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiCC,OAAjC,CAAyC,IAAzC,EAA+C,GAA/C,EAAoDC,IAApD,EA3YrB;AAAA,4BA4YUH,UA5YV;AAAA,gDA6YQ,MA7YR,2BA+YQ,MA/YR,2BAiZQ,MAjZR,2BAmZQ,MAnZR,2BAoZQ,MApZR,2BAsZQ,MAtZR,2BAuZQ,MAvZR,2BAyZQ,IAzZR,2BA2ZQ,KA3ZR,2BA4ZQ,MA5ZR,2BA6ZQ,MA7ZR,2BA+ZQ,KA/ZR,2BAiaQ,KAjaR,2BAmaQ,KAnaR,2BAqaQ,KAraR,2BAuaQ,KAvaR,2BAyaQ,KAzaR,2BA2aQ,KA3aR,2BA6aQ,KA7aR;AAAA;;AAAA;AAAA,+CA8YW;AAACvB,cAAAA,GAAG,EAAE,MAAN;AAAcC,cAAAA,IAAI,EAAE;AAApB,aA9YX;;AAAA;AAAA,+CAgZW;AAACD,cAAAA,GAAG,EAAE,MAAN;AAAcC,cAAAA,IAAI,EAAE;AAApB,aAhZX;;AAAA;AAAA,+CAkZW;AAACD,cAAAA,GAAG,EAAE,MAAN;AAAcC,cAAAA,IAAI,EAAE;AAApB,aAlZX;;AAAA;AAAA,+CAqZW;AAACD,cAAAA,GAAG,EAAE,MAAN;AAAcC,cAAAA,IAAI,EAAE;AAApB,aArZX;;AAAA;AAAA,+CAwZW;AAACD,cAAAA,GAAG,EAAE,MAAN;AAAcC,cAAAA,IAAI,EAAE;AAApB,aAxZX;;AAAA;AAAA,+CA0ZW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aA1ZX;;AAAA;AAAA,+CA8ZW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aA9ZX;;AAAA;AAAA,+CAgaW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAhaX;;AAAA;AAAA,+CAkaW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAlaX;;AAAA;AAAA,+CAoaW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aApaX;;AAAA;AAAA,+CAsaW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAtaX;;AAAA;AAAA,+CAwaW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAxaX;;AAAA;AAAA,+CA0aW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aA1aX;;AAAA;AAAA,+CA4aW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aA5aX;;AAAA;AAAA,+CA8aW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aA9aX;;AAAA;AAAA,iBAgbQsB,UAAU,CAACJ,UAAX,CAAsB,IAAtB,CAhbR;AAAA;AAAA;AAAA;;AAAA,iBAibSI,UAAU,CAACJ,UAAX,CAAsB,KAAtB,CAjbT;AAAA;AAAA;AAAA;;AAAA,+CAkba;AAACnB,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAlbb;;AAAA;AAAA,+CAqbY;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aArbZ;;AAAA;AAAA,+CAwbW;AAACD,cAAAA,GAAG,EAAE,KAAN;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAxbX;;AAAA;AAAA,iBA4bKR,WAAW,CAAC,MAAD,CA5bhB;AAAA;AAAA;AAAA;;AAAA,+CA6bS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7bT;;AAAA;AAAA,kBAocER,WAAW,CAAC,MAAD,CAAX,KAECD,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,IACAU,WAAW,CAAC,MAAD,EAAS;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAT,CAHZ,CApcF;AAAA;AAAA;AAAA;;AAAA,+CA0cS;AACNiB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1cT;;AAAA;AAAA,kBAidER,WAAW,CAAC,MAAD,CAAX,KAECD,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,IACAU,WAAW,CAAC,MAAD,EAAS;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAT,CAHZ,CAjdF;AAAA;AAAA;AAAA;;AAAA,+CAudS;AACNiB,cAAAA,GAAG,EAAE,OADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvdT;;AAAA;AAAA,kBA6dKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAAL,IAAmCA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA7d7C;AAAA;AAAA;AAAA;;AAAA,+CA8dS;AACNQ,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9dT;;AAAA;AAAA,iBAqeKR,WAAW,CAAC,MAAD,CArehB;AAAA;AAAA;AAAA;;AAAA,+CAseS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE,aAFA,CAEc;;AAFd,aAteT;;AAAA;AAAA,iBA4eKR,WAAW,CAAC,MAAD,CA5ehB;AAAA;AAAA;AAAA;;AAAA,+CA6eS;AACNO,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7eT;;AAAA;AAAA,iBAmfKR,WAAW,CAAC,MAAD,CAnfhB;AAAA;AAAA;AAAA;;AAAA,+CAofS;AACNO,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aApfT;;AAAA;AAAA,iBA0fKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA1fV;AAAA;AAAA;AAAA;;AAAA,+CA2fS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA3fT;;AAAA;AAAA,iBAigBKR,WAAW,CAAC,MAAD,CAjgBhB;AAAA;AAAA;AAAA;;AAAA,+CAkgBS;AACNO,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAlgBT;;AAAA;AAAA,iBAwgBKR,WAAW,CAAC,MAAD,CAxgBhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAygBQ1B,SAAS,CAACmC,MAAV,CAAiB,IAAjB,CAzgBR;;AAAA;AA0gBQyB,YAAAA,aA1gBR,GA0gBwB,KAAK,IAAL,GAAY,IA1gBpC;AA2gBQlD,YAAAA,OA3gBR,GA2gBiBH,MAAM,CAACgB,KAAP,CAAasC,IAAI,CAACC,GAAL,CAASF,aAAT,EAAwB5D,SAAS,CAAC2B,QAAV,CAAmBC,IAA3C,CAAb,CA3gBjB;AAAA;AAAA,mBA4gBQ5B,SAAS,CAACuC,UAAV,CAAqB7B,OAArB,EAA6B;AAACsB,cAAAA,SAAS,EAAE;AAAZ,aAA7B,CA5gBR;;AAAA;AAAA,iBA+gBMtB,OAAM,CAACqD,QAAP,CAAgBxD,MAAM,CAACI,IAAP,CAAY,eAAZ,CAAhB,CA/gBN;AAAA;AAAA;AAAA;;AAAA,+CAghBU;AACNsB,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhhBV;;AAAA;AAAA,+CAuhBS;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvhBT;;AAAA;AAAA,iBA6hBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA7hBV;AAAA;AAAA;AAAA;;AAAA,+CA8hBS;AACNQ,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9hBT;;AAAA;AAAA,iBAqiBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,GAAnB,CAAD,CAriBV;AAAA;AAAA;AAAA;;AAAA,iBAsiBMC,WAAW,CAAC,IAAD,EAAO;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAP,CAtiBjB;AAAA;AAAA;AAAA;;AAAA,+CAuiBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAviBV;;AAAA;AAAA,kBA6iBMT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,IAAgDS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CA7iB3D;AAAA;AAAA;AAAA;;AAAA,+CA8iBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9iBV;;AAAA;AAAA,kBAqjBGT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,KACCS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,IACAS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAFN,CArjBH;AAAA;AAAA;AAAA;;AAAA,+CAyjBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzjBV;;AAAA;AA+jBExB,YAAAA,MAAM,GAAGH,MAAM,CAACgB,KAAP,CAAa,EAAb,CAAT;AA/jBF;AAAA,mBAgkBQvB,SAAS,CAAC+B,UAAV,CAAqBrB,MAArB,CAhkBR;;AAAA;AAAA,kBAkkBG,CAACe,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,IAAgDS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAtD,KACA;AACAS,YAAAA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,CAAD,EAA6F;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA7F,CApkBR;AAAA;AAAA;AAAA;;AAAA,+CAskBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAtkBV;;AAAA;AAAA,+CA4kBS;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA5kBT;;AAAA;AAAA,iBAmlBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,CAAD,CAnlBV;AAAA;AAAA;AAAA;;AAAA,+CAolBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAplBT;;AAAA;AAAA,iBA0lBKR,WAAW,CAAC,MAAD,CA1lBhB;AAAA;AAAA;AAAA;;AAAA,+CA2lBS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA3lBT;;AAAA;AAAA,iBAkmBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAlmBV;AAAA;AAAA;AAAA;;AAkmBwC;AACvBuC,YAAAA,SAnmBjB;AAAA,mFAmmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACmBhE,SAAS,CAACiE,UAAV,CAAqB3E,KAAK,CAAC4E,KAA3B,CADnB;;AAAA;AACOC,wBAAAA,GADP;AAEK/C,wBAAAA,IAFL,GAEY,IAFZ;AAGKgD,wBAAAA,EAHL,GAGU,CAHV,EAGa;;AAEZ,+BAAO,CAACD,GAAG,GAAG/C,IAAP,MAAiB,CAAxB,EAA2B;AAC1B,4BAAEgD,EAAF;AACAhD,0BAAAA,IAAI,KAAK,CAAT;AACA;;AAEKiD,wBAAAA,EAVP,GAUY9D,MAAM,CAACgB,KAAP,CAAa6C,EAAE,GAAG,CAAlB,CAVZ;AAAA;AAAA,+BAWOpE,SAAS,CAACuC,UAAV,CAAqB8B,EAArB,CAXP;;AAAA;AAAA,0DAYQA,EAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnmBF;;AAAA,8BAmmBiBL,SAnmBjB;AAAA;AAAA;AAAA;;AAknBiBM,YAAAA,WAlnBjB;AAAA,mFAknBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACkBN,SAAS,EAD3B;;AAAA;AACOK,wBAAAA,EADP;AAAA;AAAA,+BAEwBL,SAAS,EAFjC;;AAAA;AAEOO,wBAAAA,QAFP;AAGCA,wBAAAA,QAAQ,CAAC,CAAD,CAAR,IAAe,QAASA,QAAQ,CAAC3D,MAAT,GAAkB,CAA1C;AACM4D,wBAAAA,KAJP,GAIeX,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYS,QAAQ,CAAC3D,MAArB,CAJf,EAI6C;;AAJ7C,0DAKQ;AACNyD,0BAAAA,EAAE,EAAEA,EAAE,CAACI,UAAH,CAAc,CAAd,EAAiBJ,EAAE,CAACzD,MAApB,CADE;AAEN8D,0BAAAA,GAAG,EAAEH,QAAQ,CAACE,UAAT,CAAoBF,QAAQ,CAAC3D,MAAT,GAAkB4D,KAAtC,EAA6CA,KAA7C;AAFC,yBALR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlnBF;;AAAA,8BAknBiBF,WAlnBjB;AAAA;AAAA;AAAA;;AA6nBiBK,YAAAA,YA7nBjB;AAAA,mFA6nBE,kBAA4BC,KAA5B,EAAmCC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACQA,QAAQ,GAAG,CADnB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAEkBP,WAAW,EAF7B;;AAAA;AAEQQ,wBAAAA,CAFR;;AAAA,8BAGMA,CAAC,CAACT,EAAF,KAAS,MAHf;AAAA;AAAA;AAAA;;AAAA,0DAIUrE,SAAS,CAACoC,SAAV,CAAoB,IAAI9C,KAAK,CAACyD,UAAV,CAAqB+B,CAAC,CAACJ,GAAvB,EAA4B,OAA5B,CAApB,CAJV;;AAAA;AAAA;AAAA,+BAOQ1E,SAAS,CAACmC,MAAV,CAAiB2C,CAAC,CAACJ,GAAnB,CAPR;;AAAA;AAOiC;AAC/B,0BAAEG,QAAF;AARF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7nBF;;AAAA,8BA6nBiBF,YA7nBjB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAyoBmBL,WAAW,EAzoB9B;;AAAA;AAyoBQS,YAAAA,EAzoBR;AAAA;AAAA,mBA0oBwBJ,YAAY,CAAC,CAAD,EAAII,EAAE,CAACL,GAAP,CA1oBpC;;AAAA;AA0oBQM,YAAAA,OA1oBR;AAAA,4BA4oBUA,OA5oBV;AAAA,gDA6oBQ,MA7oBR,2BAmpBQ,UAnpBR;AAAA;;AAAA;AAAA,+CA8oBW;AACN/C,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9oBX;;AAAA;AAAA,+CAopBW;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAppBX;;AAAA;AAAA;;AAAA;AAAA,iBA+pBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA/pBV;AAAA;AAAA;AAAA;;AAAA,iBAgqBMA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,EAAqB;AAACT,cAAAA,MAAM,EAAE;AAAT,aAArB,CAhqBX;AAAA;AAAA;AAAA;;AAAA,+CAiqBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAjqBV;;AAAA;AAAA,iBAuqBMT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAvqBX;AAAA;AAAA;AAAA;;AAAA,+CAwqBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAxqBV;;AAAA;AAAA,iBA+qBMT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CA/qBX;AAAA;AAAA;AAAA;;AAAA,+CAgrBU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhrBV;;AAAA;AAAA,iBAurBKR,WAAW,CAAC,MAAD,CAvrBhB;AAAA;AAAA;AAAA;;AAAA,+CAwrBS;AACNO,cAAAA,GAAG,EAAE,QADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAxrBT;;AAAA;AAAA,iBA8rBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA9rBV;AAAA;AAAA;AAAA;;AAAA,+CA+rBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/rBT;;AAAA;AAAA,iBAqsBKR,WAAW,CAAC,MAAD,CArsBhB;AAAA;AAAA;AAAA;;AAAA,+CAssBS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAtsBT;;AAAA;AAAA,kBA6sBER,WAAW,CAAC,MAAD,CAAX,IACAA,WAAW,CAAC,MAAD,CA9sBb;AAAA;AAAA;AAAA;;AAAA,+CAgtBS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhtBT;;AAAA;AAAA,iBAstBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAttBV;AAAA;AAAA;AAAA;;AAAA,+CAutBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvtBT;;AAAA;AAAA,iBA6tBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA7tBV;AAAA;AAAA;AAAA;;AAAA,+CA8tBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9tBT;;AAAA;AAAA,iBAouBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CApuBV;AAAA;AAAA;AAAA;;AAAA,+CAquBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAruBT;;AAAA;AAAA,iBA6uBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAD,CA7uBV;AAAA;AAAA;AAAA;;AAAA,+CA8uBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9uBT;;AAAA;AAAA,iBAovBKR,WAAW,CAAC,OAAD,CApvBhB;AAAA;AAAA;AAAA;;AAAA,+CAqvBS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aArvBT;;AAAA;AAAA,iBA2vBKR,WAAW,CAAC,QAAD,CA3vBhB;AAAA;AAAA;AAAA;;AAAA,+CA4vBS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA5vBT;;AAAA;AAAA,iBAkwBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAlwBV;AAAA;AAAA;AAAA;;AAAA,+CAmwBS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAnwBT;;AAAA;AAAA,iBAywBKR,WAAW,CAAC,MAAD,CAzwBhB;AAAA;AAAA;AAAA;;AAAA,+CA0wBS;AACNO,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1wBT;;AAAA;AAAA,kBAixBER,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAAX,IACAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CADX,IAEAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAFX,IAGAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAHX,IAIAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAJX,IAKAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CALX,IAMAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CANX,IAOAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAPX,IAQAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CARX,IASAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CATX,IAUAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAVX,IAWAU,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CA5xBb;AAAA;AAAA;AAAA;;AAAA,+CA8xBS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9xBT;;AAAA;AAAA,iBAqyBKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAryBV;AAAA;AAAA;AAAA;;AAAA,iBAuyBMA,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CAvyBX;AAAA;AAAA;AAAA;;AAAA,+CAwyBU;AACNa,cAAAA,GAAG,EAAE,KADC;AACM;AACZC,cAAAA,IAAI,EAAE;AAFA,aAxyBV;;AAAA;AAAA,iBA+yBMT,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CA/yBX;AAAA;AAAA;AAAA;;AAAA,+CAgzBU;AACNa,cAAAA,GAAG,EAAE,KADC;AACM;AACZC,cAAAA,IAAI,EAAE;AAFA,aAhzBV;;AAAA;AAAA,iBAuzBKR,WAAW,CAAC,MAAD,CAvzBhB;AAAA;AAAA;AAAA;;AAAA,+CAwzBS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAxzBT;;AAAA;AAAA,iBAg0BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAD,CAh0BV;AAAA;AAAA;AAAA;;AAAA,+CAi0BS;AACNQ,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAj0BT;;AAAA;AAAA,iBAu0BKR,WAAW,CAAC,QAAD,CAv0BhB;AAAA;AAAA;AAAA;;AAAA,+CAw0BS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAx0BT;;AAAA;AAAA,iBA80BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAD,CA90BV;AAAA;AAAA;AAAA;;AAAA,+CA+0BS;AACNQ,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/0BT;;AAAA;AAAA,kBAs1BET,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,GAA/B,CAAD,CAAL,KACCf,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAAC,CAAD,CAAN,KAAc,GADpC,CAt1BF;AAAA;AAAA;AAAA;;AAAA,+CAy1BS;AACNuB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAz1BT;;AAAA;AAAA,iBA+1BKR,WAAW,CAAC,QAAD,CA/1BhB;AAAA;AAAA;AAAA;;AAAA,+CAg2BS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAh2BT;;AAAA;AAAA,iBAw2BKR,WAAW,CAAC,SAAD,CAx2BhB;AAAA;AAAA;AAAA;;AAAA,+CAy2BS;AACNO,cAAAA,GAAG,EAAE,OADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAz2BT;;AAAA;AAAA,iBA+2BKR,WAAW,CAAC,SAAD,CA/2BhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAg3BQ1B,SAAS,CAACmC,MAAV,CAAiB,CAAjB,CAh3BR;;AAAA;AAAA;AAAA,mBAi3BoBnC,SAAS,CAACoC,SAAV,CAAoB,IAAI9C,KAAK,CAACyD,UAAV,CAAqB,EAArB,EAAyB,OAAzB,CAApB,CAj3BpB;;AAAA;AAi3BQkC,YAAAA,GAj3BR;;AAAA,kBAk3BMA,GAAG,KAAK,eAl3Bd;AAAA;AAAA;AAAA;;AAAA,+CAm3BU;AACNhD,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAn3BV;;AAAA;AAAA,+CAy3BS;AACND,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAz3BT;;AAAA;AAAA,iBAi4BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAD,CAj4BV;AAAA;AAAA;AAAA;;AA04B6B;AAEZyD,YAAAA,eA54BjB;AAAA,mFA44BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEgBlF,SAAS,CAACoC,SAAV,CAAoB9C,KAAK,CAAC6F,QAA1B,CAFhB;;AAAA;AAAA;AAAA;AAAA,+BAGcnF,SAAS,CAACoC,SAAV,CAAoB,IAAI9C,KAAK,CAACyD,UAAV,CAAqB,CAArB,EAAwB,QAAxB,CAApB,CAHd;;AAAA;AAAA;AAAA;AAEEnC,0BAAAA,MAFF;AAGEsC,0BAAAA,IAHF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA54BF;;AAAA,8BA44BiBgC,eA54BjB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA04BQlF,SAAS,CAACmC,MAAV,CAAiB,CAAjB,CA14BR;;AAAA;AAAA;AAAA,mBAo5BuB+C,eAAe,EAp5BtC;;AAAA;AAo5BSE,YAAAA,KAp5BT;;AAAA,kBAq5BOA,KAAK,CAACxE,MAAN,GAAe,CAr5BtB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,4BAy5BWwE,KAAK,CAAClC,IAz5BjB;AAAA,gDA05BS,MA15BT,2BA+5BS,MA/5BT;AAAA;;AAAA;AAAA,+CA25BY;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA35BZ;;AAAA;AAAA,+CAg6BY;AACND,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAh6BZ;;AAAA;AAAA;AAAA,mBAq6BWlC,SAAS,CAACmC,MAAV,CAAiBiD,KAAK,CAACxE,MAAN,GAAe,CAAhC,CAr6BX;;AAAA;AAAA,gBAu6BWZ,SAAS,CAACsC,QAAV,GAAqB,CAArB,GAAyBtC,SAAS,CAAC2B,QAAV,CAAmBC,IAv6BvD;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAy6BS;AACNK,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAz6BT;;AAAA;AAAA,iBA+6BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAD,CA/6BV;AAAA;AAAA;AAAA;;AAAA,+CAg7BS;AACNQ,cAAAA,GAAG,EAAE,OADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAh7BT;;AAAA;AAAA,iBAs7BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAD,CAt7BV;AAAA;AAAA;AAAA;;AAAA,+CAu7BS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAv7BT;;AAAA;AAAA,kBA+7BET,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAAL,IAAgD;AAChDS,YAAAA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CADL,IACgD;AAChDS,YAAAA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAFL,IAEgD;AAChDS,YAAAA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CAl8BP,CAk8B+C;AAl8B/C;AAAA;AAAA;AAAA;;AAAA,+CAo8BS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAp8BT;;AAAA;AAAA,iBA48BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CAAD,CA58BV;AAAA;AAAA;AAAA;;AAAA,+CA68BS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA78BT;;AAAA;AAAA,iBAm9BKR,WAAW,CAAC,WAAD,CAn9BhB;AAAA;AAAA;AAAA;;AAAA,+CAo9BS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAp9BT;;AAAA;AAAA,iBA49BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,CAAD,CA59BV;AAAA;AAAA;AAAA;;AAAA,+CA69BS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA79BT;;AAAA;AAAA,iBAo+BKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,CAAD,CAp+BV;AAAA;AAAA;AAAA;;AAq+BiB4D,YAAAA,UAr+BjB;AAAA,mFAq+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,wBAAAA,IADP,GACc/E,MAAM,CAACgB,KAAP,CAAa,EAAb,CADd;AAAA;AAAA,+BAEOvB,SAAS,CAACuC,UAAV,CAAqB+C,IAArB,CAFP;;AAAA;AAAA,uCAIMA,IAJN;AAAA,uCAKQzD,MALR;AAAA;AAAA,+BAKqB7B,SAAS,CAACoC,SAAV,CAAoB9C,KAAK,CAACiG,SAA1B,CALrB;;AAAA;AAAA;AAAA;AAAA;AAIElB,0BAAAA,EAJF;AAKEzC,0BAAAA,IALF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAr+BF;;AAAA,8BAq+BiByD,UAr+BjB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA8+BQrF,SAAS,CAACmC,MAAV,CAAiB,EAAjB,CA9+BR;;AAAA;AAAA,kBAg/BSnC,SAAS,CAACsC,QAAV,GAAqB,EAArB,GAA0BtC,SAAS,CAAC2B,QAAV,CAAmBC,IAh/BtD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAi/BwByD,UAAU,EAj/BlC;;AAAA;AAi/BSlE,YAAAA,MAj/BT;AAk/BOqE,YAAAA,OAl/BP,GAk/BiBrE,MAAM,CAACS,IAAP,GAAc,EAl/B/B;;AAAA,iBAm/BOf,MAAM,CAACM,MAAM,CAACkD,EAAR,EAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,CAAZ,CAn/Bb;AAAA;AAAA;AAAA;;AAo/BI;AACMoB,YAAAA,MAr/BV,GAq/BmBlF,MAAM,CAACgB,KAAP,CAAa,EAAb,CAr/BnB;AAAA,4BAs/BIiE,OAt/BJ;AAAA;AAAA,mBAs/BqBxF,SAAS,CAACuC,UAAV,CAAqBkD,MAArB,CAt/BrB;;AAAA;AAs/BID,YAAAA,OAt/BJ;;AAAA,iBAw/BQ3E,MAAM,CAAC4E,MAAD,EAAS,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,CAAT,CAx/Bd;AAAA;AAAA;AAAA;;AAAA,+CA0/BY;AACNxD,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1/BZ;;AAAA;AAAA,iBAggCQrB,MAAM,CAAC4E,MAAD,EAAS,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,CAAT,CAhgCd;AAAA;AAAA;AAAA;;AAAA,+CAkgCY;AACNxD,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAlgCZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBA2gCSlC,SAAS,CAACmC,MAAV,CAAiBqD,OAAjB,CA3gCT;;AAAA;AAAA;AAAA;;AAAA;AAAA,+CA+gCS;AACNvD,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/gCT;;AAAA;AAAA,iBAqhCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,CAAD,CArhCV;AAAA;AAAA;AAAA;;AAAA,+CAshCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAthCT;;AAAA;AAAA,kBA4hCK,CAACT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAAL,IAA6BA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAAnC,KAA4DA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CA5hCtE;AAAA;AAAA;AAAA;;AAAA,+CA6hCS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7hCT;;AAAA;AAAA,iBAmiCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,CAAD,EAA2E;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3E,CAniCV;AAAA;AAAA;AAAA;;AAAA,+CAoiCS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aApiCT;;AAAA;AAAA,iBA0iCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,CAAD,CA1iCV;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA6iCQzB,SAAS,CAACmC,MAAV,CAAiB,EAAjB,CA7iCR;;AAAA;AAAA;AAAA,mBA8iCqBnC,SAAS,CAACoC,SAAV,CAAoB,IAAI9C,KAAK,CAACyD,UAAV,CAAqB,CAArB,EAAwB,OAAxB,CAApB,CA9iCrB;;AAAA;AA8iCQG,YAAAA,MA9iCR;AAAA,4BA+iCUA,MA/iCV;AAAA,gDAgjCQ,MAhjCR,2BAqjCQ,MArjCR,2BA0jCQ,MA1jCR,2BA+jCQ,MA/jCR;AAAA;;AAAA;AAAA,+CAijCW;AACNjB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAjjCX;;AAAA;AAAA,+CAsjCW;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAtjCX;;AAAA;AAAA,+CA2jCW;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA3jCX;;AAAA;AAAA,+CAgkCW;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhkCX;;AAAA;AAAA;;AAAA;AAAA,kBA0kCET,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAAL,IACAA,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,CAAD,CA3kCP;AAAA;AAAA;AAAA;;AAAA,+CA6kCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7kCT;;AAAA;AAAA,kBAslCET,KAAK,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAD,CAAL,IACAA,KAAK,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAD,CAvlCP;AAAA;AAAA;AAAA;;AAAA,+CAylCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzlCT;;AAAA;AAAA,iBA+lCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAD,CA/lCV;AAAA;AAAA;AAAA;;AAAA,+CAgmCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAhmCT;;AAAA;AAAA,iBAsmCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAtmCV;AAAA;AAAA;AAAA;;AAAA,+CAumCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAvmCT;;AAAA;AAAA,iBA6mCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CA7mCV;AAAA;AAAA;AAAA;;AAAA,+CA8mCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA9mCT;;AAAA;AAAA,iBAonCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAD,CApnCV;AAAA;AAAA;AAAA;;AAAA,+CAsnCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAtnCT;;AAAA;AAAA;AAAA,mBA6nCOlC,SAAS,CAAC+B,UAAV,CAAqBrB,MAArB,EAA6B;AAACE,cAAAA,MAAM,EAAEiD,IAAI,CAACC,GAAL,CAAS,GAAT,EAAc9D,SAAS,CAAC2B,QAAV,CAAmBC,IAAjC,CAAT;AAAiDI,cAAAA,SAAS,EAAE;AAA5D,aAA7B,CA7nCP;;AAAA;AAAA,iBAioCKN,WAAW,CAAC,QAAD,CAjoChB;AAAA;AAAA;AAAA;;AAAA,iBAkoCMA,WAAW,CAAC,OAAD,EAAU;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAV,CAloCjB;AAAA;AAAA;AAAA;;AAAA,+CAmoCU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAnoCV;;AAAA;AAAA,iBAyoCMR,WAAW,CAAC,WAAD,EAAc;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAd,CAzoCjB;AAAA;AAAA;AAAA;;AAAA,+CA0oCU;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1oCV;;AAAA;AAAA,iBAkpCKR,WAAW,CAAC,iBAAD,CAlpChB;AAAA;AAAA;AAAA;;AAAA,+CAmpCS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAnpCT;;AAAA;AAAA,iBAypCKR,WAAW,CAAC,kBAAD,CAzpChB;AAAA;AAAA;AAAA;;AAAA,+CA0pCS;AACNO,cAAAA,GAAG,EAAE,IADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1pCT;;AAAA;AAAA,iBAgqCKR,WAAW,CAAC,qBAAD,CAhqChB;AAAA;AAAA;AAAA;;AAAA,+CAiqCS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAjqCT;;AAAA;AAAA,kBAuqCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,CAAL,IAAmCf,MAAM,CAACE,MAAP,IAAiB,EAvqCzD;AAAA;AAAA;AAAA;;AAuqC+D;AACvD8E,YAAAA,QAxqCR,GAwqCmBhF,MAAM,CAACgC,YAAP,CAAoB,EAApB,CAxqCnB;;AAAA,kBAyqCMgD,QAAQ,GAAG,EAAX,IAAiBhF,MAAM,CAACE,MAAP,IAAiB8E,QAAQ,GAAG,EAzqCnD;AAAA;AAAA;AAAA;;AAAA;AA2qCUvE,YAAAA,OA3qCV,GA2qCmBT,MAAM,CAACiF,KAAP,CAAa,EAAb,EAAiBD,QAAQ,GAAG,EAA5B,EAAgCjC,QAAhC,EA3qCnB;AA4qCUmC,YAAAA,IA5qCV,GA4qCiBC,IAAI,CAACC,KAAL,CAAW3E,OAAX,CA5qCjB,EA6qCI;;AA7qCJ,iBA8qCQyE,IAAI,CAACG,KA9qCb;AAAA;AAAA;AAAA;;AAAA,+CA+qCY;AACN9D,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/qCZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAyrCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,CAAD,CAzrCV;AAAA;AAAA;AAAA;;AAAA,+CA0rCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA1rCT;;AAAA;AAAA,iBAgsCKR,WAAW,CAAC,MAAD,EAAS;AAACV,cAAAA,MAAM,EAAE;AAAT,aAAT,CAhsChB;AAAA;AAAA;AAAA;;AAAA,+CAisCS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAjsCT;;AAAA;AAAA,kBAusCKT,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAT,CAAL,KAA+BS,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAT,CAAL,IAAgCS,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAT,CAApE,CAvsCL;AAAA;AAAA;AAAA;;AAAA,+CAwsCS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAxsCT;;AAAA;AAAA,iBA8sCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAD,EAAmD;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAnD,CA9sCV;AAAA;AAAA;AAAA;;AAAA,+CA+sCS;AACNiB,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA/sCT;;AAAA;AAAA,iBAqtCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B;AAACT,cAAAA,MAAM,EAAE;AAAT,aAA3B,CArtCV;AAAA;AAAA;AAAA;;AAAA,+CAstCS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAttCT;;AAAA;AAAA,iBA4tCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,EAAuG,IAAvG,EAA6G,IAA7G,EAAmH,IAAnH,CAAD,CA5tCV;AAAA;AAAA;AAAA;;AAAA,+CA6tCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE,2BAFA,CAE4B;;AAF5B,aA7tCT;;AAAA;AAAA,iBAmuCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,CAAD,CAnuCV;AAAA;AAAA;AAAA;;AAAA,+CAouCS;AACNQ,cAAAA,GAAG,EAAE,OADC;AAENC,cAAAA,IAAI,EAAE,2BAFA,CAE4B;;AAF5B,aApuCT;;AAAA;AAAA,kBA2uCET,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,EAAe;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAf,CAAL,KAECS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,EAAqB;AAACT,cAAAA,MAAM,EAAE;AAAT,aAArB,CAAL,IACAS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,EAAqB;AAACT,cAAAA,MAAM,EAAE;AAAT,aAArB,CADL,IAEAS,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,EAAqB;AAACT,cAAAA,MAAM,EAAE;AAAT,aAArB,CAJN,CA3uCF;AAAA;AAAA;AAAA;;AAAA,+CAkvCS;AACNiB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAlvCT;;AAAA;AAAA,iBAwvCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,CAAD,CAxvCV;AAAA;AAAA;AAAA;;AAAA,+CAyvCS;AACNQ,cAAAA,GAAG,EAAE,MADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAzvCT;;AAAA;AAAA;AAAA,mBAgwCOlC,SAAS,CAAC+B,UAAV,CAAqBrB,MAArB,EAA6B;AAACE,cAAAA,MAAM,EAAEiD,IAAI,CAACC,GAAL,CAAS,GAAT,EAAc9D,SAAS,CAAC2B,QAAV,CAAmBC,IAAjC,CAAT;AAAiDI,cAAAA,SAAS,EAAE;AAA5D,aAA7B,CAhwCP;;AAAA;AAAA,iBAmwCKtC,wBAAwB,CAACgB,MAAD,CAnwC7B;AAAA;AAAA;AAAA;;AAAA,+CAowCS;AACNuB,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aApwCT;;AAAA;AAAA,iBA0wCKT,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,EAAuG,IAAvG,EAA6G,IAA7G,EAAmH,IAAnH,EAAyH,IAAzH,EAA+H,IAA/H,EAAqI,IAArI,EAA2I,IAA3I,EAAiJ,IAAjJ,EAAuJ,IAAvJ,EAA6J,IAA7J,EAAmK,IAAnK,EAAyK,IAAzK,EAA+K,IAA/K,EAAqL,IAArL,EAA2L,IAA3L,CAAD,CA1wCV;AAAA;AAAA;AAAA;;AAAA,+CA2wCS;AACNQ,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA3wCT;;AAAA;AAAA,iBAixCKR,WAAW,CAAC,6BAAD,CAjxChB;AAAA;AAAA;AAAA;;AAAA,+CAkxCS;AACNO,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aAlxCT;;AAAA;AAAA,kBAyxCKxB,MAAM,CAACE,MAAP,IAAiB,CAAjB,IAAsBa,KAAK,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,EAAe;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP;AAAlB,aAAf,CAzxChC;AAAA;AAAA;AAAA;;AAAA,iBA0xCMK,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CA1xCX;AAAA;AAAA;AAAA;;AAAA,iBA4xCOK,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CA5xCZ;AAAA;AAAA;AAAA;;AAAA,+CA6xCW;AACNa,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7xCX;;AAAA;AAAA,+CAoyCU;AACND,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aApyCV;;AAAA;AAAA,iBA4yCMT,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CA5yCX;AAAA;AAAA;AAAA;;AAAA,+CA6yCU;AACNa,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7yCV;;AAAA;AAAA,iBAozCMT,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CApzCX;AAAA;AAAA;AAAA;;AAAA,+CAqzCU;AACNa,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aArzCV;;AAAA;AAAA,iBA4zCMT,KAAK,CAAC,CAAC,IAAD,CAAD,EAAS;AAACT,cAAAA,MAAM,EAAE,CAAT;AAAYI,cAAAA,IAAI,EAAE,CAAC,IAAD;AAAlB,aAAT,CA5zCX;AAAA;AAAA;AAAA;;AAAA,+CA6zCU;AACNa,cAAAA,GAAG,EAAE,KADC;AAENC,cAAAA,IAAI,EAAE;AAFA,aA7zCV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAq0CA,IAAMnC,MAAM,GAAG,SAATA,MAAS,CAAAiG,cAAc;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjE;AACA,QAAMpG,MAAM,GAAGqG,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAAf,CAFiE,CAEvB;;AAE1CJ,IAAAA,cAAc,CAACK,EAAf,CAAkB,OAAlB,EAA2BF,MAA3B;AACAH,IAAAA,cAAc,CAACM,IAAf,CAAoB,UAApB,wEAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/B;AACMC,cAAAA,IAFyB,GAElB,IAAIxG,MAAM,CAACyG,WAAX,EAFkB;;AAI/B,kBAAIzG,MAAM,CAAC0G,QAAX,EAAqB;AACpBC,gBAAAA,YAAY,GAAG3G,MAAM,CAAC0G,QAAP,CAAgBT,cAAhB,EAAgCO,IAAhC,EAAsC,YAAM,CAC1D,CADc,CAAf;AAEA,eAHD,MAGO;AACNG,gBAAAA,YAAY,GAAGV,cAAc,CAACW,IAAf,CAAoBJ,IAApB,CAAf;AACA,eAT8B,CAW/B;;;AACMnB,cAAAA,KAZyB,GAYjBY,cAAc,CAACY,IAAf,CAAoB/G,YAApB,KAAqCmG,cAAc,CAACY,IAAf,EAArC,IAA8DrG,MAAM,CAACgB,KAAP,CAAa,CAAb,CAZ7C;AAAA;AAAA;AAAA,qBAcPpB,UAAU,CAACiF,KAAD,CAdH;;AAAA;AAcxByB,cAAAA,SAdwB;AAe9BN,cAAAA,IAAI,CAACM,QAAL,GAAgBA,SAAhB;AAf8B;AAAA;;AAAA;AAAA;AAAA;AAiB9BV,cAAAA,MAAM,aAAN;;AAjB8B;AAoB/BD,cAAAA,OAAO,CAACQ,YAAD,CAAP;;AApB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;AAsBA,GA3BgC,CAAJ;AAAA,CAA7B;;AA6BA,IAAMG,QAAQ,GAAG;AAChB/G,EAAAA,UAAU,EAAVA,UADgB;AAEhBG,EAAAA,aAAa,EAAbA,aAFgB;AAGhBE,EAAAA,UAAU,EAAVA,UAHgB;AAIhBJ,EAAAA,MAAM,EAANA;AAJgB,CAAjB;AAOA+G,MAAM,CAACC,cAAP,CAAsBF,QAAtB,EAAgC,YAAhC,EAA8C;AAC7CG,EAAAA,GAD6C,iBACvC;AACL,WAAO,IAAIC,GAAJ,CAAQrH,SAAS,CAACsH,UAAlB,CAAP;AACA;AAH4C,CAA9C;AAMAJ,MAAM,CAACC,cAAP,CAAsBF,QAAtB,EAAgC,WAAhC,EAA6C;AAC5CG,EAAAA,GAD4C,iBACtC;AACL,WAAO,IAAIC,GAAJ,CAAQrH,SAAS,CAACuH,SAAlB,CAAP;AACA;AAH2C,CAA7C;AAMAC,MAAM,CAACC,OAAP,GAAiBR,QAAjB","sourcesContent":["'use strict';\nconst Token = require('token-types');\nconst strtok3 = require('strtok3/lib/core');\nconst {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken\n} = require('./util');\nconst supported = require('./supported');\n\nconst minimumBytes = 4100; // A fair amount of file-types are detectable within this range\n\nasync function fromStream(stream) {\n\tconst tokenizer = await strtok3.fromStream(stream);\n\ttry {\n\t\treturn await fromTokenizer(tokenizer);\n\t} finally {\n\t\tawait tokenizer.close();\n\t}\n}\n\nasync function fromBuffer(input) {\n\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t}\n\n\tconst buffer = input instanceof Buffer ? input : Buffer.from(input);\n\n\tif (!(buffer && buffer.length > 1)) {\n\t\treturn;\n\t}\n\n\tconst tokenizer = strtok3.fromBuffer(buffer);\n\treturn fromTokenizer(tokenizer);\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nasync function fromTokenizer(tokenizer) {\n\ttry {\n\t\treturn _fromTokenizer(tokenizer);\n\t} catch (error) {\n\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function _fromTokenizer(tokenizer) {\n\tlet buffer = Buffer.alloc(minimumBytes);\n\tconst bytesRead = 12;\n\tconst check = (header, options) => _check(buffer, header, options);\n\tconst checkString = (header, options) => check(stringToBytes(header), options);\n\n\t// Keep reading until EOF if the file size is unknown.\n\tif (!tokenizer.fileInfo.size) {\n\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t}\n\n\tawait tokenizer.peekBuffer(buffer, {length: bytesRead, mayBeLess: true});\n\n\t// -- 2-byte signatures --\n\n\tif (check([0x42, 0x4D])) {\n\t\treturn {\n\t\t\text: 'bmp',\n\t\t\tmime: 'image/bmp'\n\t\t};\n\t}\n\n\tif (check([0x0B, 0x77])) {\n\t\treturn {\n\t\t\text: 'ac3',\n\t\t\tmime: 'audio/vnd.dolby.dd-raw'\n\t\t};\n\t}\n\n\tif (check([0x78, 0x01])) {\n\t\treturn {\n\t\t\text: 'dmg',\n\t\t\tmime: 'application/x-apple-diskimage'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x5A])) {\n\t\treturn {\n\t\t\text: 'exe',\n\t\t\tmime: 'application/x-msdownload'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x21])) {\n\t\tawait tokenizer.peekBuffer(buffer, {length: 24, mayBeLess: true});\n\n\t\tif (checkString('PS-Adobe-', {offset: 2}) &&\n\t\t\tcheckString(' EPSF-', {offset: 14})) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps'\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\text: 'ps',\n\t\t\tmime: 'application/postscript'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x1F, 0xA0]) ||\n\t\tcheck([0x1F, 0x9D])\n\t) {\n\t\treturn {\n\t\t\text: 'Z',\n\t\t\tmime: 'application/x-compress'\n\t\t};\n\t}\n\n\t// -- 3-byte signatures --\n\n\tif (check([0xFF, 0xD8, 0xFF])) {\n\t\treturn {\n\t\t\text: 'jpg',\n\t\t\tmime: 'image/jpeg'\n\t\t};\n\t}\n\n\tif (check([0x49, 0x49, 0xBC])) {\n\t\treturn {\n\t\t\text: 'jxr',\n\t\t\tmime: 'image/vnd.ms-photo'\n\t\t};\n\t}\n\n\tif (check([0x1F, 0x8B, 0x8])) {\n\t\treturn {\n\t\t\text: 'gz',\n\t\t\tmime: 'application/gzip'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x5A, 0x68])) {\n\t\treturn {\n\t\t\text: 'bz2',\n\t\t\tmime: 'application/x-bzip2'\n\t\t};\n\t}\n\n\tif (checkString('ID3')) {\n\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\tconst id3HeaderLen = await tokenizer.readToken(uint32SyncSafeToken);\n\t\tif (tokenizer.position + id3HeaderLen > tokenizer.fileInfo.size) {\n\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\treturn {\n\t\t\t\text: 'mp3',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tawait tokenizer.ignore(id3HeaderLen);\n\t\treturn fromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t}\n\n\t// Musepack, SV7\n\tif (checkString('MP+')) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\tif (\n\t\t(buffer[0] === 0x43 || buffer[0] === 0x46) &&\n\t\tcheck([0x57, 0x53], {offset: 1})\n\t) {\n\t\treturn {\n\t\t\text: 'swf',\n\t\t\tmime: 'application/x-shockwave-flash'\n\t\t};\n\t}\n\n\t// -- 4-byte signatures --\n\n\tif (check([0x47, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'gif',\n\t\t\tmime: 'image/gif'\n\t\t};\n\t}\n\n\tif (checkString('FLIF')) {\n\t\treturn {\n\t\t\text: 'flif',\n\t\t\tmime: 'image/flif'\n\t\t};\n\t}\n\n\tif (checkString('8BPS')) {\n\t\treturn {\n\t\t\text: 'psd',\n\t\t\tmime: 'image/vnd.adobe.photoshop'\n\t\t};\n\t}\n\n\tif (checkString('WEBP', {offset: 8})) {\n\t\treturn {\n\t\t\text: 'webp',\n\t\t\tmime: 'image/webp'\n\t\t};\n\t}\n\n\t// Musepack, SV8\n\tif (checkString('MPCK')) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\tif (checkString('FORM')) {\n\t\treturn {\n\t\t\text: 'aif',\n\t\t\tmime: 'audio/aiff'\n\t\t};\n\t}\n\n\tif (checkString('icns', {offset: 0})) {\n\t\treturn {\n\t\t\text: 'icns',\n\t\t\tmime: 'image/icns'\n\t\t};\n\t}\n\n\t// Zip-based file formats\n\t// Need to be before the `zip` check\n\tif (check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\ttry {\n\t\t\twhile (tokenizer.position + 30 < tokenizer.fileInfo.size) {\n\t\t\t\tawait tokenizer.readBuffer(buffer, {length: 30});\n\n\t\t\t\t// https://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\n\t\t\t\tconst zipHeader = {\n\t\t\t\t\tcompressedSize: buffer.readUInt32LE(18),\n\t\t\t\t\tuncompressedSize: buffer.readUInt32LE(22),\n\t\t\t\t\tfilenameLength: buffer.readUInt16LE(26),\n\t\t\t\t\textraFieldLength: buffer.readUInt16LE(28)\n\t\t\t\t};\n\n\t\t\t\tzipHeader.filename = await tokenizer.readToken(new Token.StringType(zipHeader.filenameLength, 'utf-8'));\n\t\t\t\tawait tokenizer.ignore(zipHeader.extraFieldLength);\n\n\t\t\t\t// Assumes signed `.xpi` from addons.mozilla.org\n\t\t\t\tif (zipHeader.filename === 'META-INF/mozilla.rsa') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\tmime: 'application/x-xpinstall'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (zipHeader.filename.endsWith('.rels') || zipHeader.filename.endsWith('.xml')) {\n\t\t\t\t\tconst type = zipHeader.filename.split('/')[0];\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase '_rels':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'word':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'docx',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'ppt':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'pptx',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'xl':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (zipHeader.filename.startsWith('xl/')) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (zipHeader.filename.startsWith('3D/') && zipHeader.filename.endsWith('.model')) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: '3mf',\n\t\t\t\t\t\tmime: 'model/3mf'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// The docx, xlsx and pptx file types extend the Office Open XML file format:\n\t\t\t\t// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n\t\t\t\t// We look for:\n\t\t\t\t// - one entry named '[Content_Types].xml' or '_rels/.rels',\n\t\t\t\t// - one entry indicating specific type of file.\n\t\t\t\t// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\t\t\t\tif (zipHeader.filename === 'mimetype' && zipHeader.compressedSize === zipHeader.uncompressedSize) {\n\t\t\t\t\tconst mimeType = await tokenizer.readToken(new Token.StringType(zipHeader.compressedSize, 'utf-8'));\n\n\t\t\t\t\tswitch (mimeType) {\n\t\t\t\t\t\tcase 'application/epub+zip':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'epub',\n\t\t\t\t\t\t\t\tmime: 'application/epub+zip'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'odt',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.text'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'ods',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\text: 'odp',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Try to find next header manually when current one is corrupted\n\t\t\t\tif (zipHeader.compressedSize === 0) {\n\t\t\t\t\tlet nextHeaderIndex = -1;\n\n\t\t\t\t\twhile (nextHeaderIndex < 0 && (tokenizer.position < tokenizer.fileInfo.size)) {\n\t\t\t\t\t\tawait tokenizer.peekBuffer(buffer, {mayBeLess: true});\n\n\t\t\t\t\t\tnextHeaderIndex = buffer.indexOf('504B0304', 0, 'hex');\n\t\t\t\t\t\t// Move position to the next header if found, skip the whole buffer otherwise\n\t\t\t\t\t\tawait tokenizer.ignore(nextHeaderIndex >= 0 ? nextHeaderIndex : buffer.length);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait tokenizer.ignore(zipHeader.compressedSize);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\text: 'zip',\n\t\t\tmime: 'application/zip'\n\t\t};\n\t}\n\n\tif (checkString('OggS')) {\n\t\t// This is an OGG container\n\t\tawait tokenizer.ignore(28);\n\t\tconst type = Buffer.alloc(8);\n\t\tawait tokenizer.readBuffer(type);\n\n\t\t// Needs to be before `ogg` check\n\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\treturn {\n\t\t\t\text: 'opus',\n\t\t\t\tmime: 'audio/opus'\n\t\t\t};\n\t\t}\n\n\t\t// If ' theora' in header.\n\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\treturn {\n\t\t\t\text: 'ogv',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01video' in header.\n\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ogm',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\treturn {\n\t\t\t\text: 'oga',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\treturn {\n\t\t\t\text: 'spx',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01vorbis' in header\n\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\treturn {\n\t\t\t\text: 'ogg',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\treturn {\n\t\t\text: 'ogx',\n\t\t\tmime: 'application/ogg'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x50, 0x4B]) &&\n\t\t(buffer[2] === 0x3 || buffer[2] === 0x5 || buffer[2] === 0x7) &&\n\t\t(buffer[3] === 0x4 || buffer[3] === 0x6 || buffer[3] === 0x8)\n\t) {\n\t\treturn {\n\t\t\text: 'zip',\n\t\t\tmime: 'application/zip'\n\t\t};\n\t}\n\n\t//\n\n\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\tif (\n\t\tcheckString('ftyp', {offset: 4}) &&\n\t\t(buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t) {\n\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\tconst brandMajor = buffer.toString('binary', 8, 12).replace('\\0', ' ').trim();\n\t\tswitch (brandMajor) {\n\t\t\tcase 'avif':\n\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\tcase 'mif1':\n\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\tcase 'msf1':\n\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\tcase 'heic':\n\t\t\tcase 'heix':\n\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\tcase 'hevc':\n\t\t\tcase 'hevx':\n\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\tcase 'qt':\n\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\tcase 'M4V':\n\t\t\tcase 'M4VH':\n\t\t\tcase 'M4VP':\n\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\tcase 'M4P':\n\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\tcase 'M4B':\n\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\tcase 'M4A':\n\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\tcase 'F4V':\n\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\tcase 'F4P':\n\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\tcase 'F4A':\n\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\tcase 'F4B':\n\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\tcase 'crx':\n\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\tdefault:\n\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t}\n\n\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t}\n\t}\n\n\tif (checkString('MThd')) {\n\t\treturn {\n\t\t\text: 'mid',\n\t\t\tmime: 'audio/midi'\n\t\t};\n\t}\n\n\tif (\n\t\tcheckString('wOFF') &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheckString('OTTO', {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff',\n\t\t\tmime: 'font/woff'\n\t\t};\n\t}\n\n\tif (\n\t\tcheckString('wOF2') &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheckString('OTTO', {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff2',\n\t\t\tmime: 'font/woff2'\n\t\t};\n\t}\n\n\tif (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\treturn {\n\t\t\text: 'pcap',\n\t\t\tmime: 'application/vnd.tcpdump.pcap'\n\t\t};\n\t}\n\n\t// Sony DSD Stream File (DSF)\n\tif (checkString('DSD ')) {\n\t\treturn {\n\t\t\text: 'dsf',\n\t\t\tmime: 'audio/x-dsf' // Non-standard\n\t\t};\n\t}\n\n\tif (checkString('LZIP')) {\n\t\treturn {\n\t\t\text: 'lz',\n\t\t\tmime: 'application/x-lzip'\n\t\t};\n\t}\n\n\tif (checkString('fLaC')) {\n\t\treturn {\n\t\t\text: 'flac',\n\t\t\tmime: 'audio/x-flac'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x50, 0x47, 0xFB])) {\n\t\treturn {\n\t\t\text: 'bpg',\n\t\t\tmime: 'image/bpg'\n\t\t};\n\t}\n\n\tif (checkString('wvpk')) {\n\t\treturn {\n\t\t\text: 'wv',\n\t\t\tmime: 'audio/wavpack'\n\t\t};\n\t}\n\n\tif (checkString('%PDF')) {\n\t\tawait tokenizer.ignore(1350);\n\t\tconst maxBufferSize = 10 * 1024 * 1024;\n\t\tconst buffer = Buffer.alloc(Math.min(maxBufferSize, tokenizer.fileInfo.size));\n\t\tawait tokenizer.readBuffer(buffer, {mayBeLess: true});\n\n\t\t// Check if this is an Adobe Illustrator file\n\t\tif (buffer.includes(Buffer.from('AIPrivateData'))) {\n\t\t\treturn {\n\t\t\t\text: 'ai',\n\t\t\t\tmime: 'application/postscript'\n\t\t\t};\n\t\t}\n\n\t\t// Assume this is just a normal PDF\n\t\treturn {\n\t\t\text: 'pdf',\n\t\t\tmime: 'application/pdf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x61, 0x73, 0x6D])) {\n\t\treturn {\n\t\t\text: 'wasm',\n\t\t\tmime: 'application/wasm'\n\t\t};\n\t}\n\n\t// TIFF, little-endian type\n\tif (check([0x49, 0x49, 0x2A, 0x0])) {\n\t\tif (checkString('CR', {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'cr2',\n\t\t\t\tmime: 'image/x-canon-cr2'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x1C, 0x00, 0xFE, 0x00], {offset: 8}) || check([0x1F, 0x00, 0x0B, 0x00], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'nef',\n\t\t\t\tmime: 'image/x-nikon-nef'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0x08, 0x00, 0x00, 0x00], {offset: 4}) &&\n\t\t\t(check([0x2D, 0x00, 0xFE, 0x00], {offset: 8}) ||\n\t\t\t\tcheck([0x27, 0x00, 0xFE, 0x00], {offset: 8}))\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'dng',\n\t\t\t\tmime: 'image/x-adobe-dng'\n\t\t\t};\n\t\t}\n\n\t\tbuffer = Buffer.alloc(24);\n\t\tawait tokenizer.peekBuffer(buffer);\n\t\tif (\n\t\t\t(check([0x10, 0xFB, 0x86, 0x01], {offset: 4}) || check([0x08, 0x00, 0x00, 0x00], {offset: 4})) &&\n\t\t\t// This pattern differentiates ARW from other TIFF-ish file types:\n\t\t\tcheck([0x00, 0xFE, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01], {offset: 9})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'arw',\n\t\t\t\tmime: 'image/x-sony-arw'\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\text: 'tif',\n\t\t\tmime: 'image/tiff'\n\t\t};\n\t}\n\n\t// TIFF, big-endian type\n\tif (check([0x4D, 0x4D, 0x0, 0x2A])) {\n\t\treturn {\n\t\t\text: 'tif',\n\t\t\tmime: 'image/tiff'\n\t\t};\n\t}\n\n\tif (checkString('MAC ')) {\n\t\treturn {\n\t\t\text: 'ape',\n\t\t\tmime: 'audio/ape'\n\t\t};\n\t}\n\n\t// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\tif (check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\tasync function readField() {\n\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\tlet mask = 0x80;\n\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n\t\t\twhile ((msb & mask) === 0) {\n\t\t\t\t++ic;\n\t\t\t\tmask >>= 1;\n\t\t\t}\n\n\t\t\tconst id = Buffer.alloc(ic + 1);\n\t\t\tawait tokenizer.readBuffer(id);\n\t\t\treturn id;\n\t\t}\n\n\t\tasync function readElement() {\n\t\t\tconst id = await readField();\n\t\t\tconst lenField = await readField();\n\t\t\tlenField[0] ^= 0x80 >> (lenField.length - 1);\n\t\t\tconst nrLen = Math.min(6, lenField.length); // JavaScript can max read 6 bytes integer\n\t\t\treturn {\n\t\t\t\tid: id.readUIntBE(0, id.length),\n\t\t\t\tlen: lenField.readUIntBE(lenField.length - nrLen, nrLen)\n\t\t\t};\n\t\t}\n\n\t\tasync function readChildren(level, children) {\n\t\t\twhile (children > 0) {\n\t\t\t\tconst e = await readElement();\n\t\t\t\tif (e.id === 0x4282) {\n\t\t\t\t\treturn tokenizer.readToken(new Token.StringType(e.len, 'utf-8')); // Return DocType\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(e.len); // ignore payload\n\t\t\t\t--children;\n\t\t\t}\n\t\t}\n\n\t\tconst re = await readElement();\n\t\tconst docType = await readChildren(1, re.len);\n\n\t\tswitch (docType) {\n\t\t\tcase 'webm':\n\t\t\t\treturn {\n\t\t\t\t\text: 'webm',\n\t\t\t\t\tmime: 'video/webm'\n\t\t\t\t};\n\n\t\t\tcase 'matroska':\n\t\t\t\treturn {\n\t\t\t\t\text: 'mkv',\n\t\t\t\t\tmime: 'video/x-matroska'\n\t\t\t\t};\n\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\t// RIFF file format which might be AVI, WAV, QCP, etc\n\tif (check([0x52, 0x49, 0x46, 0x46])) {\n\t\tif (check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'avi',\n\t\t\t\tmime: 'video/vnd.avi'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'wav',\n\t\t\t\tmime: 'audio/vnd.wave'\n\t\t\t};\n\t\t}\n\n\t\t// QLCM, QCP file\n\t\tif (check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'qcp',\n\t\t\t\tmime: 'audio/qcelp'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (checkString('SQLi')) {\n\t\treturn {\n\t\t\text: 'sqlite',\n\t\t\tmime: 'application/x-sqlite3'\n\t\t};\n\t}\n\n\tif (check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\treturn {\n\t\t\text: 'nes',\n\t\t\tmime: 'application/x-nintendo-nes-rom'\n\t\t};\n\t}\n\n\tif (checkString('Cr24')) {\n\t\treturn {\n\t\t\text: 'crx',\n\t\t\tmime: 'application/x-google-chrome-extension'\n\t\t};\n\t}\n\n\tif (\n\t\tcheckString('MSCF') ||\n\t\tcheckString('ISc(')\n\t) {\n\t\treturn {\n\t\t\text: 'cab',\n\t\t\tmime: 'application/vnd.ms-cab-compressed'\n\t\t};\n\t}\n\n\tif (check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\treturn {\n\t\t\text: 'rpm',\n\t\t\tmime: 'application/x-rpm'\n\t\t};\n\t}\n\n\tif (check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\treturn {\n\t\t\text: 'eps',\n\t\t\tmime: 'application/eps'\n\t\t};\n\t}\n\n\tif (check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\treturn {\n\t\t\text: 'zst',\n\t\t\tmime: 'application/zstd'\n\t\t};\n\t}\n\n\t// -- 5-byte signatures --\n\n\tif (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\treturn {\n\t\t\text: 'otf',\n\t\t\tmime: 'font/otf'\n\t\t};\n\t}\n\n\tif (checkString('#!AMR')) {\n\t\treturn {\n\t\t\text: 'amr',\n\t\t\tmime: 'audio/amr'\n\t\t};\n\t}\n\n\tif (checkString('{\\\\rtf')) {\n\t\treturn {\n\t\t\text: 'rtf',\n\t\t\tmime: 'application/rtf'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x56, 0x01])) {\n\t\treturn {\n\t\t\text: 'flv',\n\t\t\tmime: 'video/x-flv'\n\t\t};\n\t}\n\n\tif (checkString('IMPM')) {\n\t\treturn {\n\t\t\text: 'it',\n\t\t\tmime: 'audio/x-it'\n\t\t};\n\t}\n\n\tif (\n\t\tcheckString('-lh0-', {offset: 2}) ||\n\t\tcheckString('-lh1-', {offset: 2}) ||\n\t\tcheckString('-lh2-', {offset: 2}) ||\n\t\tcheckString('-lh3-', {offset: 2}) ||\n\t\tcheckString('-lh4-', {offset: 2}) ||\n\t\tcheckString('-lh5-', {offset: 2}) ||\n\t\tcheckString('-lh6-', {offset: 2}) ||\n\t\tcheckString('-lh7-', {offset: 2}) ||\n\t\tcheckString('-lzs-', {offset: 2}) ||\n\t\tcheckString('-lz4-', {offset: 2}) ||\n\t\tcheckString('-lz5-', {offset: 2}) ||\n\t\tcheckString('-lhd-', {offset: 2})\n\t) {\n\t\treturn {\n\t\t\text: 'lzh',\n\t\t\tmime: 'application/x-lzh-compressed'\n\t\t};\n\t}\n\n\t// MPEG program stream (PS or MPEG-PS)\n\tif (check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\tif (check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\treturn {\n\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\tmime: 'video/MP1S'\n\t\t\t};\n\t\t}\n\n\t\t// MPEG-PS, MPEG-2 Part 1\n\t\tif (check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\treturn {\n\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\tmime: 'video/MP2P'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (checkString('ITSF')) {\n\t\treturn {\n\t\t\text: 'chm',\n\t\t\tmime: 'application/vnd.ms-htmlhelp'\n\t\t};\n\t}\n\n\t// -- 6-byte signatures --\n\n\tif (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\treturn {\n\t\t\text: 'xz',\n\t\t\tmime: 'application/x-xz'\n\t\t};\n\t}\n\n\tif (checkString('<?xml ')) {\n\t\treturn {\n\t\t\text: 'xml',\n\t\t\tmime: 'application/xml'\n\t\t};\n\t}\n\n\tif (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\treturn {\n\t\t\text: '7z',\n\t\t\tmime: 'application/x-7z-compressed'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) &&\n\t\t(buffer[6] === 0x0 || buffer[6] === 0x1)\n\t) {\n\t\treturn {\n\t\t\text: 'rar',\n\t\t\tmime: 'application/x-rar-compressed'\n\t\t};\n\t}\n\n\tif (checkString('solid ')) {\n\t\treturn {\n\t\t\text: 'stl',\n\t\t\tmime: 'model/stl'\n\t\t};\n\t}\n\n\t// -- 7-byte signatures --\n\n\tif (checkString('BLENDER')) {\n\t\treturn {\n\t\t\text: 'blend',\n\t\t\tmime: 'application/x-blender'\n\t\t};\n\t}\n\n\tif (checkString('!<arch>')) {\n\t\tawait tokenizer.ignore(8);\n\t\tconst str = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\tif (str === 'debian-binary') {\n\t\t\treturn {\n\t\t\t\text: 'deb',\n\t\t\t\tmime: 'application/x-deb'\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\text: 'ar',\n\t\t\tmime: 'application/x-unix-archive'\n\t\t};\n\t}\n\n\t// -- 8-byte signatures --\n\n\tif (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t// Offset calculated as follows:\n\t\t// - 8 bytes: PNG signature\n\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\tasync function readChunkHeader() {\n\t\t\treturn {\n\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'binary'))\n\t\t\t};\n\t\t}\n\n\t\tdo {\n\t\t\tconst chunk = await readChunkHeader();\n\t\t\tif (chunk.length < 0) {\n\t\t\t\treturn; // Invalid chunk length\n\t\t\t}\n\n\t\t\tswitch (chunk.type) {\n\t\t\t\tcase 'IDAT':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\tmime: 'image/png'\n\t\t\t\t\t};\n\t\t\t\tcase 'acTL':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\tmime: 'image/apng'\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t}\n\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\treturn {\n\t\t\text: 'png',\n\t\t\tmime: 'image/png'\n\t\t};\n\t}\n\n\tif (check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'arrow',\n\t\t\tmime: 'application/x-apache-arrow'\n\t\t};\n\t}\n\n\tif (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'glb',\n\t\t\tmime: 'model/gltf-binary'\n\t\t};\n\t}\n\n\t// `mov` format variants\n\tif (\n\t\tcheck([0x66, 0x72, 0x65, 0x65], {offset: 4}) || // `free`\n\t\tcheck([0x6D, 0x64, 0x61, 0x74], {offset: 4}) || // `mdat` MJPEG\n\t\tcheck([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) || // `moov`\n\t\tcheck([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t) {\n\t\treturn {\n\t\t\text: 'mov',\n\t\t\tmime: 'video/quicktime'\n\t\t};\n\t}\n\n\t// -- 9-byte signatures --\n\n\tif (check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\treturn {\n\t\t\text: 'orf',\n\t\t\tmime: 'image/x-olympus-orf'\n\t\t};\n\t}\n\n\tif (checkString('gimp xcf ')) {\n\t\treturn {\n\t\t\text: 'xcf',\n\t\t\tmime: 'image/x-xcf'\n\t\t};\n\t}\n\n\t// -- 12-byte signatures --\n\n\tif (check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\treturn {\n\t\t\text: 'rw2',\n\t\t\tmime: 'image/x-panasonic-rw2'\n\t\t};\n\t}\n\n\t// ASF_Header_Object first 80 bytes\n\tif (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\tasync function readHeader() {\n\t\t\tconst guid = Buffer.alloc(16);\n\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\treturn {\n\t\t\t\tid: guid,\n\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE))\n\t\t\t};\n\t\t}\n\n\t\tawait tokenizer.ignore(30);\n\t\t// Search for header should be in first 1KB of file.\n\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\tconst header = await readHeader();\n\t\t\tlet payload = header.size - 24;\n\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\tconst typeId = Buffer.alloc(16);\n\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t// Found audio:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\tmime: 'audio/x-ms-asf'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t// Found video:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\tmime: 'video/x-ms-asf'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(payload);\n\t\t}\n\n\t\t// Default to ASF generic extension\n\t\treturn {\n\t\t\text: 'asf',\n\t\t\tmime: 'application/vnd.ms-asf'\n\t\t};\n\t}\n\n\tif (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'ktx',\n\t\t\tmime: 'image/ktx'\n\t\t};\n\t}\n\n\tif ((check([0x7E, 0x10, 0x04]) || check([0x7E, 0x18, 0x04])) && check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\treturn {\n\t\t\text: 'mie',\n\t\t\tmime: 'application/x-mie'\n\t\t};\n\t}\n\n\tif (check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\treturn {\n\t\t\text: 'shp',\n\t\t\tmime: 'application/x-esri-shape'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t// JPEG-2000 family\n\n\t\tawait tokenizer.ignore(20);\n\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\tswitch (type) {\n\t\t\tcase 'jp2 ':\n\t\t\t\treturn {\n\t\t\t\t\text: 'jp2',\n\t\t\t\t\tmime: 'image/jp2'\n\t\t\t\t};\n\t\t\tcase 'jpx ':\n\t\t\t\treturn {\n\t\t\t\t\text: 'jpx',\n\t\t\t\t\tmime: 'image/jpx'\n\t\t\t\t};\n\t\t\tcase 'jpm ':\n\t\t\t\treturn {\n\t\t\t\t\text: 'jpm',\n\t\t\t\t\tmime: 'image/jpm'\n\t\t\t\t};\n\t\t\tcase 'mjp2':\n\t\t\t\treturn {\n\t\t\t\t\text: 'mj2',\n\t\t\t\t\tmime: 'image/mj2'\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0xFF, 0x0A]) ||\n\t\tcheck([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t) {\n\t\treturn {\n\t\t\text: 'jxl',\n\t\t\tmime: 'image/jxl'\n\t\t};\n\t}\n\n\t// -- Unsafe signatures --\n\n\tif (\n\t\tcheck([0x0, 0x0, 0x1, 0xBA]) ||\n\t\tcheck([0x0, 0x0, 0x1, 0xB3])\n\t) {\n\t\treturn {\n\t\t\text: 'mpg',\n\t\t\tmime: 'video/mpeg'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'ttf',\n\t\t\tmime: 'font/ttf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x01, 0x00])) {\n\t\treturn {\n\t\t\text: 'ico',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x02, 0x00])) {\n\t\treturn {\n\t\t\text: 'cur',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\treturn {\n\t\t\text: 'cfb',\n\t\t\tmime: 'application/x-cfb'\n\t\t};\n\t}\n\n\t// Increase sample size from 12 to 256.\n\tawait tokenizer.peekBuffer(buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t// -- 15-byte signatures --\n\n\tif (checkString('BEGIN:')) {\n\t\tif (checkString('VCARD', {offset: 6})) {\n\t\t\treturn {\n\t\t\t\text: 'vcf',\n\t\t\t\tmime: 'text/vcard'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('VCALENDAR', {offset: 6})) {\n\t\t\treturn {\n\t\t\t\text: 'ics',\n\t\t\t\tmime: 'text/calendar'\n\t\t\t};\n\t\t}\n\t}\n\n\t// `raf` is here just to keep all the raw image detectors together.\n\tif (checkString('FUJIFILMCCD-RAW')) {\n\t\treturn {\n\t\t\text: 'raf',\n\t\t\tmime: 'image/x-fujifilm-raf'\n\t\t};\n\t}\n\n\tif (checkString('Extended Module:')) {\n\t\treturn {\n\t\t\text: 'xm',\n\t\t\tmime: 'audio/x-xm'\n\t\t};\n\t}\n\n\tif (checkString('Creative Voice File')) {\n\t\treturn {\n\t\t\text: 'voc',\n\t\t\tmime: 'audio/x-voc'\n\t\t};\n\t}\n\n\tif (check([0x04, 0x00, 0x00, 0x00]) && buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\tconst jsonSize = buffer.readUInt32LE(12);\n\t\tif (jsonSize > 12 && buffer.length >= jsonSize + 16) {\n\t\t\ttry {\n\t\t\t\tconst header = buffer.slice(16, jsonSize + 16).toString();\n\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\tmime: 'application/x-asar'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t}\n\t\t}\n\t}\n\n\tif (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\treturn {\n\t\t\text: 'mxf',\n\t\t\tmime: 'application/mxf'\n\t\t};\n\t}\n\n\tif (checkString('SCRM', {offset: 44})) {\n\t\treturn {\n\t\t\text: 's3m',\n\t\t\tmime: 'audio/x-s3m'\n\t\t};\n\t}\n\n\tif (check([0x47], {offset: 4}) && (check([0x47], {offset: 192}) || check([0x47], {offset: 196}))) {\n\t\treturn {\n\t\t\text: 'mts',\n\t\t\tmime: 'video/mp2t'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\treturn {\n\t\t\text: 'mobi',\n\t\t\tmime: 'application/x-mobipocket-ebook'\n\t\t};\n\t}\n\n\tif (check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\treturn {\n\t\t\text: 'dcm',\n\t\t\tmime: 'application/dicom'\n\t\t};\n\t}\n\n\tif (check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\treturn {\n\t\t\text: 'lnk',\n\t\t\tmime: 'application/x.ms.shortcut' // Invented by us\n\t\t};\n\t}\n\n\tif (check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'alias',\n\t\t\tmime: 'application/x.apple.alias' // Invented by us\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4C, 0x50], {offset: 34}) &&\n\t\t(\n\t\t\tcheck([0x00, 0x00, 0x01], {offset: 8}) ||\n\t\t\tcheck([0x01, 0x00, 0x02], {offset: 8}) ||\n\t\t\tcheck([0x02, 0x00, 0x02], {offset: 8})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'eot',\n\t\t\tmime: 'application/vnd.ms-fontobject'\n\t\t};\n\t}\n\n\tif (check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\treturn {\n\t\t\text: 'indd',\n\t\t\tmime: 'application/x-indesign'\n\t\t};\n\t}\n\n\t// Increase sample size from 256 to 512\n\tawait tokenizer.peekBuffer(buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t// Requires a buffer size of 512 bytes\n\tif (tarHeaderChecksumMatches(buffer)) {\n\t\treturn {\n\t\t\text: 'tar',\n\t\t\tmime: 'application/x-tar'\n\t\t};\n\t}\n\n\tif (check([0xFF, 0xFE, 0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00])) {\n\t\treturn {\n\t\t\text: 'skp',\n\t\t\tmime: 'application/vnd.sketchup.skp'\n\t\t};\n\t}\n\n\tif (checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\treturn {\n\t\t\text: 'pgp',\n\t\t\tmime: 'application/pgp-encrypted'\n\t\t};\n\t}\n\n\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\tif (buffer.length >= 2 && check([0xFF, 0xE0], {offset: 0, mask: [0xFF, 0xE0]})) {\n\t\tif (check([0x10], {offset: 1, mask: [0x16]})) {\n\t\t\t// Check for (ADTS) MPEG-2\n\t\t\tif (check([0x08], {offset: 1, mask: [0x08]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Must be (ADTS) MPEG-4\n\t\t\treturn {\n\t\t\t\text: 'aac',\n\t\t\t\tmime: 'audio/aac'\n\t\t\t};\n\t\t}\n\n\t\t// MPEG 1 or 2 Layer 3 header\n\t\t// Check for MPEG layer 3\n\t\tif (check([0x02], {offset: 1, mask: [0x06]})) {\n\t\t\treturn {\n\t\t\t\text: 'mp3',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\t// Check for MPEG layer 2\n\t\tif (check([0x04], {offset: 1, mask: [0x06]})) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\t// Check for MPEG layer 1\n\t\tif (check([0x06], {offset: 1, mask: [0x06]})) {\n\t\t\treturn {\n\t\t\t\text: 'mp1',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\t}\n}\n\nconst stream = readableStream => new Promise((resolve, reject) => {\n\t// Using `eval` to work around issues when bundling with Webpack\n\tconst stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n\treadableStream.on('error', reject);\n\treadableStream.once('readable', async () => {\n\t\t// Set up output stream\n\t\tconst pass = new stream.PassThrough();\n\t\tlet outputStream;\n\t\tif (stream.pipeline) {\n\t\t\toutputStream = stream.pipeline(readableStream, pass, () => {\n\t\t\t});\n\t\t} else {\n\t\t\toutputStream = readableStream.pipe(pass);\n\t\t}\n\n\t\t// Read the input stream and detect the filetype\n\t\tconst chunk = readableStream.read(minimumBytes) || readableStream.read() || Buffer.alloc(0);\n\t\ttry {\n\t\t\tconst fileType = await fromBuffer(chunk);\n\t\t\tpass.fileType = fileType;\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\n\t\tresolve(outputStream);\n\t});\n});\n\nconst fileType = {\n\tfromStream,\n\tfromTokenizer,\n\tfromBuffer,\n\tstream\n};\n\nObject.defineProperty(fileType, 'extensions', {\n\tget() {\n\t\treturn new Set(supported.extensions);\n\t}\n});\n\nObject.defineProperty(fileType, 'mimeTypes', {\n\tget() {\n\t\treturn new Set(supported.mimeTypes);\n\t}\n});\n\nmodule.exports = fileType;\n"]},"metadata":{},"sourceType":"script"}