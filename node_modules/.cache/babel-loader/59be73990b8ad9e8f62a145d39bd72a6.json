{"ast":null,"code":"import * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\"; //**************************************************************************************\n//region Additional asn1js schema elements existing inside GeneralName schema\n//**************************************************************************************\n\n/**\n * Schema for \"builtInStandardAttributes\" of \"ORAddress\"\n * @param {Object} parameters\n * @property {Object} [names]\n * @param {boolean} optional\n * @returns {Sequence}\n */\n\nfunction builtInStandardAttributes() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let optional = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  //builtInStandardAttributes ::= Sequence {\n  //    country-name                  CountryName OPTIONAL,\n  //    administration-domain-name    AdministrationDomainName OPTIONAL,\n  //    network-address           [0] IMPLICIT NetworkAddress OPTIONAL,\n  //    terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,\n  //    private-domain-name       [2] PrivateDomainName OPTIONAL,\n  //    organization-name         [3] IMPLICIT OrganizationName OPTIONAL,\n  //    numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier OPTIONAL,\n  //    personal-name             [5] IMPLICIT PersonalName OPTIONAL,\n  //    organizational-unit-names [6] IMPLICIT OrganizationalUnitNames OPTIONAL }\n\n  /**\n   * @type {Object}\n   * @property {string} [country_name]\n   * @property {string} [administration_domain_name]\n   * @property {string} [network_address]\n   * @property {string} [terminal_identifier]\n   * @property {string} [private_domain_name]\n   * @property {string} [organization_name]\n   * @property {string} [numeric_user_identifier]\n   * @property {string} [personal_name]\n   * @property {string} [organizational_unit_names]\n   */\n  const names = getParametersValue(parameters, \"names\", {});\n  return new asn1js.Sequence({\n    optional,\n    value: [new asn1js.Constructed({\n      optional: true,\n      idBlock: {\n        tagClass: 2,\n        // APPLICATION-SPECIFIC\n        tagNumber: 1 // [1]\n\n      },\n      name: names.country_name || \"\",\n      value: [new asn1js.Choice({\n        value: [new asn1js.NumericString(), new asn1js.PrintableString()]\n      })]\n    }), new asn1js.Constructed({\n      optional: true,\n      idBlock: {\n        tagClass: 2,\n        // APPLICATION-SPECIFIC\n        tagNumber: 2 // [2]\n\n      },\n      name: names.administration_domain_name || \"\",\n      value: [new asn1js.Choice({\n        value: [new asn1js.NumericString(), new asn1js.PrintableString()]\n      })]\n    }), new asn1js.Primitive({\n      optional: true,\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 0 // [0]\n\n      },\n      name: names.network_address || \"\",\n      isHexOnly: true\n    }), new asn1js.Primitive({\n      optional: true,\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 1 // [1]\n\n      },\n      name: names.terminal_identifier || \"\",\n      isHexOnly: true\n    }), new asn1js.Constructed({\n      optional: true,\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 2 // [2]\n\n      },\n      name: names.private_domain_name || \"\",\n      value: [new asn1js.Choice({\n        value: [new asn1js.NumericString(), new asn1js.PrintableString()]\n      })]\n    }), new asn1js.Primitive({\n      optional: true,\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 3 // [3]\n\n      },\n      name: names.organization_name || \"\",\n      isHexOnly: true\n    }), new asn1js.Primitive({\n      optional: true,\n      name: names.numeric_user_identifier || \"\",\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 4 // [4]\n\n      },\n      isHexOnly: true\n    }), new asn1js.Constructed({\n      optional: true,\n      name: names.personal_name || \"\",\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 5 // [5]\n\n      },\n      value: [new asn1js.Primitive({\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 0 // [0]\n\n        },\n        isHexOnly: true\n      }), new asn1js.Primitive({\n        optional: true,\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 1 // [1]\n\n        },\n        isHexOnly: true\n      }), new asn1js.Primitive({\n        optional: true,\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 2 // [2]\n\n        },\n        isHexOnly: true\n      }), new asn1js.Primitive({\n        optional: true,\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 3 // [3]\n\n        },\n        isHexOnly: true\n      })]\n    }), new asn1js.Constructed({\n      optional: true,\n      name: names.organizational_unit_names || \"\",\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 6 // [6]\n\n      },\n      value: [new asn1js.Repeated({\n        value: new asn1js.PrintableString()\n      })]\n    })]\n  });\n} //**************************************************************************************\n\n/**\n * Schema for \"builtInDomainDefinedAttributes\" of \"ORAddress\"\n * @param {boolean} optional\n * @returns {Sequence}\n */\n\n\nfunction builtInDomainDefinedAttributes() {\n  let optional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return new asn1js.Sequence({\n    optional,\n    value: [new asn1js.PrintableString(), new asn1js.PrintableString()]\n  });\n} //**************************************************************************************\n\n/**\n * Schema for \"builtInDomainDefinedAttributes\" of \"ORAddress\"\n * @param {boolean} optional\n * @returns {Set}\n */\n\n\nfunction extensionAttributes() {\n  let optional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return new asn1js.Set({\n    optional,\n    value: [new asn1js.Primitive({\n      optional: true,\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 0 // [0]\n\n      },\n      isHexOnly: true\n    }), new asn1js.Constructed({\n      optional: true,\n      idBlock: {\n        tagClass: 3,\n        // CONTEXT-SPECIFIC\n        tagNumber: 1 // [1]\n\n      },\n      value: [new asn1js.Any()]\n    })]\n  });\n} //**************************************************************************************\n//endregion\n//**************************************************************************************\n\n/**\n * Class from RFC5280\n */\n\n\nexport default class GeneralName {\n  //**********************************************************************************\n\n  /**\n   * Constructor for GeneralName class\n   * @param {Object} [parameters={}]\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\n   * @property {number} [type] value type - from a tagged value (0 for \"otherName\", 1 for \"rfc822Name\" etc.)\n   * @property {Object} [value] asn1js object having GeneralName value (type depends on \"type\" value)\n   */\n  constructor() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    //region Internal properties of the object\n\n    /**\n     * @type {number}\n     * @desc value type - from a tagged value (0 for \"otherName\", 1 for \"rfc822Name\" etc.)\n     */\n    this.type = getParametersValue(parameters, \"type\", GeneralName.defaultValues(\"type\"));\n    /**\n     * @type {Object}\n     * @desc asn1js object having GeneralName value (type depends on \"type\" value)\n     */\n\n    this.value = getParametersValue(parameters, \"value\", GeneralName.defaultValues(\"value\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\n   * Return default values for all class members\n   * @param {string} memberName String name for a class member\n   */\n\n\n  static defaultValues(memberName) {\n    switch (memberName) {\n      case \"type\":\n        return 9;\n\n      case \"value\":\n        return {};\n\n      default:\n        throw new Error(`Invalid member name for GeneralName class: ${memberName}`);\n    }\n  } //**********************************************************************************\n\n  /**\n   * Compare values with default values for all class members\n   * @param {string} memberName String name for a class member\n   * @param {*} memberValue Value to compare with default value\n   */\n\n\n  static compareWithDefault(memberName, memberValue) {\n    switch (memberName) {\n      case \"type\":\n        return memberValue === GeneralName.defaultValues(memberName);\n\n      case \"value\":\n        return Object.keys(memberValue).length === 0;\n\n      default:\n        throw new Error(`Invalid member name for GeneralName class: ${memberName}`);\n    }\n  } //**********************************************************************************\n\n  /**\n   * Return value of pre-defined ASN.1 schema for current class\n   *\n   * ASN.1 schema:\n   * ```asn1\n   * GeneralName ::= Choice {\n   *    otherName                       [0]     OtherName,\n   *    rfc822Name                      [1]     IA5String,\n   *    dNSName                         [2]     IA5String,\n   *    x400Address                     [3]     ORAddress,\n   *    directoryName                   [4]     value,\n   *    ediPartyName                    [5]     EDIPartyName,\n   *    uniformResourceIdentifier       [6]     IA5String,\n   *    iPAddress                       [7]     OCTET STRING,\n   *    registeredID                    [8]     OBJECT IDENTIFIER }\n   * ```\n   *\n   * @param {Object} parameters Input parameters for the schema\n   * @returns {Object} asn1js schema object\n   */\n\n\n  static schema() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * @type {Object}\n     * @property {string} [blockName]\n     * @property {Object} [directoryName]\n     * @property {Object} [builtInStandardAttributes]\n     */\n    const names = getParametersValue(parameters, \"names\", {});\n    return new asn1js.Choice({\n      value: [new asn1js.Constructed({\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 0 // [0]\n\n        },\n        name: names.blockName || \"\",\n        value: [new asn1js.ObjectIdentifier(), new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          value: [new asn1js.Any()]\n        })]\n      }), new asn1js.Primitive({\n        name: names.blockName || \"\",\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 1 // [1]\n\n        }\n      }), new asn1js.Primitive({\n        name: names.blockName || \"\",\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 2 // [2]\n\n        }\n      }), new asn1js.Constructed({\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 3 // [3]\n\n        },\n        name: names.blockName || \"\",\n        value: [builtInStandardAttributes(names.builtInStandardAttributes || {}, false), builtInDomainDefinedAttributes(true), extensionAttributes(true)]\n      }), new asn1js.Constructed({\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 4 // [4]\n\n        },\n        name: names.blockName || \"\",\n        value: [RelativeDistinguishedNames.schema(names.directoryName || {})]\n      }), new asn1js.Constructed({\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 5 // [5]\n\n        },\n        name: names.blockName || \"\",\n        value: [new asn1js.Constructed({\n          optional: true,\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          value: [new asn1js.Choice({\n            value: [new asn1js.TeletexString(), new asn1js.PrintableString(), new asn1js.UniversalString(), new asn1js.Utf8String(), new asn1js.BmpString()]\n          })]\n        }), new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          },\n          value: [new asn1js.Choice({\n            value: [new asn1js.TeletexString(), new asn1js.PrintableString(), new asn1js.UniversalString(), new asn1js.Utf8String(), new asn1js.BmpString()]\n          })]\n        })]\n      }), new asn1js.Primitive({\n        name: names.blockName || \"\",\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 6 // [6]\n\n        }\n      }), new asn1js.Primitive({\n        name: names.blockName || \"\",\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 7 // [7]\n\n        }\n      }), new asn1js.Primitive({\n        name: names.blockName || \"\",\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 8 // [8]\n\n        }\n      })]\n    });\n  } //**********************************************************************************\n\n  /**\n   * Convert parsed asn1js object into current class\n   * @param {!Object} schema\n   */\n\n\n  fromSchema(schema) {\n    //region Clear input data first\n    clearProps(schema, [\"blockName\", \"otherName\", \"rfc822Name\", \"dNSName\", \"x400Address\", \"directoryName\", \"ediPartyName\", \"uniformResourceIdentifier\", \"iPAddress\", \"registeredID\"]); //endregion\n    //region Check the schema is valid\n\n    const asn1 = asn1js.compareSchema(schema, schema, GeneralName.schema({\n      names: {\n        blockName: \"blockName\",\n        otherName: \"otherName\",\n        rfc822Name: \"rfc822Name\",\n        dNSName: \"dNSName\",\n        x400Address: \"x400Address\",\n        directoryName: {\n          names: {\n            blockName: \"directoryName\"\n          }\n        },\n        ediPartyName: \"ediPartyName\",\n        uniformResourceIdentifier: \"uniformResourceIdentifier\",\n        iPAddress: \"iPAddress\",\n        registeredID: \"registeredID\"\n      }\n    }));\n    if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for GeneralName\"); //endregion\n    //region Get internal properties from parsed schema\n\n    this.type = asn1.result.blockName.idBlock.tagNumber;\n\n    switch (this.type) {\n      case 0:\n        // otherName\n        this.value = asn1.result.blockName;\n        break;\n\n      case 1: // rfc822Name + dNSName + uniformResourceIdentifier\n\n      case 2:\n      case 6:\n        {\n          const value = asn1.result.blockName;\n          value.idBlock.tagClass = 1; // UNIVERSAL\n\n          value.idBlock.tagNumber = 22; // IA5STRING\n\n          const valueBER = value.toBER(false);\n          this.value = asn1js.fromBER(valueBER).result.valueBlock.value;\n        }\n        break;\n\n      case 3:\n        // x400Address\n        this.value = asn1.result.blockName;\n        break;\n\n      case 4:\n        // directoryName\n        this.value = new RelativeDistinguishedNames({\n          schema: asn1.result.directoryName\n        });\n        break;\n\n      case 5:\n        // ediPartyName\n        this.value = asn1.result.ediPartyName;\n        break;\n\n      case 7:\n        // iPAddress\n        this.value = new asn1js.OctetString({\n          valueHex: asn1.result.blockName.valueBlock.valueHex\n        });\n        break;\n\n      case 8:\n        // registeredID\n        {\n          const value = asn1.result.blockName;\n          value.idBlock.tagClass = 1; // UNIVERSAL\n\n          value.idBlock.tagNumber = 6; // ObjectIdentifier\n\n          const valueBER = value.toBER(false);\n          this.value = asn1js.fromBER(valueBER).result.valueBlock.toString(); // Getting a string representation of the ObjectIdentifier\n        }\n        break;\n\n      default:\n    } //endregion\n\n  } //**********************************************************************************\n\n  /**\n   * Convert current object to asn1js object and set correct values\n   * @returns {Object} asn1js object\n   */\n\n\n  toSchema() {\n    //region Construct and return new ASN.1 schema for this object\n    switch (this.type) {\n      case 0:\n      case 3:\n      case 5:\n        return new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: this.type\n          },\n          value: [this.value]\n        });\n\n      case 1:\n      case 2:\n      case 6:\n        {\n          const value = new asn1js.IA5String({\n            value: this.value\n          });\n          value.idBlock.tagClass = 3;\n          value.idBlock.tagNumber = this.type;\n          return value;\n        }\n\n      case 4:\n        return new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 4\n          },\n          value: [this.value.toSchema()]\n        });\n\n      case 7:\n        {\n          const value = this.value;\n          value.idBlock.tagClass = 3;\n          value.idBlock.tagNumber = this.type;\n          return value;\n        }\n\n      case 8:\n        {\n          const value = new asn1js.ObjectIdentifier({\n            value: this.value\n          });\n          value.idBlock.tagClass = 3;\n          value.idBlock.tagNumber = this.type;\n          return value;\n        }\n\n      default:\n        return GeneralName.schema();\n    } //endregion\n\n  } //**********************************************************************************\n\n  /**\n   * Convertion for the class to JSON object\n   * @returns {Object}\n   */\n\n\n  toJSON() {\n    const _object = {\n      type: this.type,\n      value: \"\"\n    };\n    if (typeof this.value === \"string\") _object.value = this.value;else {\n      try {\n        _object.value = this.value.toJSON();\n      } catch (ex) {}\n    }\n    return _object;\n  } //**********************************************************************************\n\n\n} //**************************************************************************************","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/GeneralName.js"],"names":["asn1js","getParametersValue","clearProps","RelativeDistinguishedNames","builtInStandardAttributes","parameters","optional","names","Sequence","value","Constructed","idBlock","tagClass","tagNumber","name","country_name","Choice","NumericString","PrintableString","administration_domain_name","Primitive","network_address","isHexOnly","terminal_identifier","private_domain_name","organization_name","numeric_user_identifier","personal_name","organizational_unit_names","Repeated","builtInDomainDefinedAttributes","extensionAttributes","Set","Any","GeneralName","constructor","type","defaultValues","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","Object","keys","length","blockName","ObjectIdentifier","directoryName","TeletexString","UniversalString","Utf8String","BmpString","asn1","compareSchema","otherName","rfc822Name","dNSName","x400Address","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID","verified","result","valueBER","toBER","fromBER","valueBlock","OctetString","valueHex","toString","toSchema","IA5String","toJSON","_object","ex"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\n//**************************************************************************************\n//region Additional asn1js schema elements existing inside GeneralName schema\n//**************************************************************************************\n/**\n * Schema for \"builtInStandardAttributes\" of \"ORAddress\"\n * @param {Object} parameters\n * @property {Object} [names]\n * @param {boolean} optional\n * @returns {Sequence}\n */\nfunction builtInStandardAttributes(parameters = {}, optional = false)\n{\n\t//builtInStandardAttributes ::= Sequence {\n\t//    country-name                  CountryName OPTIONAL,\n\t//    administration-domain-name    AdministrationDomainName OPTIONAL,\n\t//    network-address           [0] IMPLICIT NetworkAddress OPTIONAL,\n\t//    terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,\n\t//    private-domain-name       [2] PrivateDomainName OPTIONAL,\n\t//    organization-name         [3] IMPLICIT OrganizationName OPTIONAL,\n\t//    numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier OPTIONAL,\n\t//    personal-name             [5] IMPLICIT PersonalName OPTIONAL,\n\t//    organizational-unit-names [6] IMPLICIT OrganizationalUnitNames OPTIONAL }\n\n\t/**\n\t * @type {Object}\n\t * @property {string} [country_name]\n\t * @property {string} [administration_domain_name]\n\t * @property {string} [network_address]\n\t * @property {string} [terminal_identifier]\n\t * @property {string} [private_domain_name]\n\t * @property {string} [organization_name]\n\t * @property {string} [numeric_user_identifier]\n\t * @property {string} [personal_name]\n\t * @property {string} [organizational_unit_names]\n\t */\n\tconst names = getParametersValue(parameters, \"names\", {});\n\n\treturn (new asn1js.Sequence({\n\t\toptional,\n\t\tvalue: [\n\t\t\tnew asn1js.Constructed({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 2, // APPLICATION-SPECIFIC\n\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t},\n\t\t\t\tname: (names.country_name || \"\"),\n\t\t\t\tvalue: [\n\t\t\t\t\tnew asn1js.Choice({\n\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\tnew asn1js.NumericString(),\n\t\t\t\t\t\t\tnew asn1js.PrintableString()\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}),\n\t\t\tnew asn1js.Constructed({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 2, // APPLICATION-SPECIFIC\n\t\t\t\t\ttagNumber: 2 // [2]\n\t\t\t\t},\n\t\t\t\tname: (names.administration_domain_name || \"\"),\n\t\t\t\tvalue: [\n\t\t\t\t\tnew asn1js.Choice({\n\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\tnew asn1js.NumericString(),\n\t\t\t\t\t\t\tnew asn1js.PrintableString()\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}),\n\t\t\tnew asn1js.Primitive({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t},\n\t\t\t\tname: (names.network_address || \"\"),\n\t\t\t\tisHexOnly: true\n\t\t\t}),\n\t\t\tnew asn1js.Primitive({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t},\n\t\t\t\tname: (names.terminal_identifier || \"\"),\n\t\t\t\tisHexOnly: true\n\t\t\t}),\n\t\t\tnew asn1js.Constructed({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 2 // [2]\n\t\t\t\t},\n\t\t\t\tname: (names.private_domain_name || \"\"),\n\t\t\t\tvalue: [\n\t\t\t\t\tnew asn1js.Choice({\n\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\tnew asn1js.NumericString(),\n\t\t\t\t\t\t\tnew asn1js.PrintableString()\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}),\n\t\t\tnew asn1js.Primitive({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 3 // [3]\n\t\t\t\t},\n\t\t\t\tname: (names.organization_name || \"\"),\n\t\t\t\tisHexOnly: true\n\t\t\t}),\n\t\t\tnew asn1js.Primitive({\n\t\t\t\toptional: true,\n\t\t\t\tname: (names.numeric_user_identifier || \"\"),\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 4 // [4]\n\t\t\t\t},\n\t\t\t\tisHexOnly: true\n\t\t\t}),\n\t\t\tnew asn1js.Constructed({\n\t\t\t\toptional: true,\n\t\t\t\tname: (names.personal_name || \"\"),\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 5 // [5]\n\t\t\t\t},\n\t\t\t\tvalue: [\n\t\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisHexOnly: true\n\t\t\t\t\t}),\n\t\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisHexOnly: true\n\t\t\t\t\t}),\n\t\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\ttagNumber: 2 // [2]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisHexOnly: true\n\t\t\t\t\t}),\n\t\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\ttagNumber: 3 // [3]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisHexOnly: true\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}),\n\t\t\tnew asn1js.Constructed({\n\t\t\t\toptional: true,\n\t\t\t\tname: (names.organizational_unit_names || \"\"),\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 6 // [6]\n\t\t\t\t},\n\t\t\t\tvalue: [\n\t\t\t\t\tnew asn1js.Repeated({\n\t\t\t\t\t\tvalue: new asn1js.PrintableString()\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t]\n\t}));\n}\n//**************************************************************************************\n/**\n * Schema for \"builtInDomainDefinedAttributes\" of \"ORAddress\"\n * @param {boolean} optional\n * @returns {Sequence}\n */\nfunction builtInDomainDefinedAttributes(optional = false)\n{\n\treturn (new asn1js.Sequence({\n\t\toptional,\n\t\tvalue: [\n\t\t\tnew asn1js.PrintableString(),\n\t\t\tnew asn1js.PrintableString()\n\t\t]\n\t}));\n}\n//**************************************************************************************\n/**\n * Schema for \"builtInDomainDefinedAttributes\" of \"ORAddress\"\n * @param {boolean} optional\n * @returns {Set}\n */\nfunction extensionAttributes(optional = false)\n{\n\treturn (new asn1js.Set({\n\t\toptional,\n\t\tvalue: [\n\t\t\tnew asn1js.Primitive({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t},\n\t\t\t\tisHexOnly: true\n\t\t\t}),\n\t\t\tnew asn1js.Constructed({\n\t\t\t\toptional: true,\n\t\t\t\tidBlock: {\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t},\n\t\t\t\tvalue: [new asn1js.Any()]\n\t\t\t})\n\t\t]\n\t}));\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n/**\n * Class from RFC5280\n */\nexport default class GeneralName\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for GeneralName class\n\t * @param {Object} [parameters={}]\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\n\t * @property {number} [type] value type - from a tagged value (0 for \"otherName\", 1 for \"rfc822Name\" etc.)\n\t * @property {Object} [value] asn1js object having GeneralName value (type depends on \"type\" value)\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\t//region Internal properties of the object\n\t\t/**\n\t\t * @type {number}\n\t\t * @desc value type - from a tagged value (0 for \"otherName\", 1 for \"rfc822Name\" etc.)\n\t\t */\n\t\tthis.type = getParametersValue(parameters, \"type\", GeneralName.defaultValues(\"type\"));\n\t\t/**\n\t\t * @type {Object}\n\t\t * @desc asn1js object having GeneralName value (type depends on \"type\" value)\n\t\t */\n\t\tthis.value = getParametersValue(parameters, \"value\", GeneralName.defaultValues(\"value\"));\n\t\t//endregion\n\n\t\t//region If input argument array contains \"schema\" for this object\n\t\tif(\"schema\" in parameters)\n\t\t\tthis.fromSchema(parameters.schema);\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Return default values for all class members\n\t * @param {string} memberName String name for a class member\n\t */\n\tstatic defaultValues(memberName)\n\t{\n\t\tswitch(memberName)\n\t\t{\n\t\t\tcase \"type\":\n\t\t\t\treturn 9;\n\t\t\tcase \"value\":\n\t\t\t\treturn {};\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid member name for GeneralName class: ${memberName}`);\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Compare values with default values for all class members\n\t * @param {string} memberName String name for a class member\n\t * @param {*} memberValue Value to compare with default value\n\t */\n\tstatic compareWithDefault(memberName, memberValue)\n\t{\n\t\tswitch(memberName)\n\t\t{\n\t\t\tcase \"type\":\n\t\t\t\treturn (memberValue === GeneralName.defaultValues(memberName));\n\t\t\tcase \"value\":\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid member name for GeneralName class: ${memberName}`);\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Return value of pre-defined ASN.1 schema for current class\n\t *\n\t * ASN.1 schema:\n\t * ```asn1\n\t * GeneralName ::= Choice {\n\t *    otherName                       [0]     OtherName,\n\t *    rfc822Name                      [1]     IA5String,\n\t *    dNSName                         [2]     IA5String,\n\t *    x400Address                     [3]     ORAddress,\n\t *    directoryName                   [4]     value,\n\t *    ediPartyName                    [5]     EDIPartyName,\n\t *    uniformResourceIdentifier       [6]     IA5String,\n\t *    iPAddress                       [7]     OCTET STRING,\n\t *    registeredID                    [8]     OBJECT IDENTIFIER }\n\t * ```\n\t *\n\t * @param {Object} parameters Input parameters for the schema\n\t * @returns {Object} asn1js schema object\n\t */\n\tstatic schema(parameters = {})\n\t{\n\t\t/**\n\t\t * @type {Object}\n\t\t * @property {string} [blockName]\n\t\t * @property {Object} [directoryName]\n\t\t * @property {Object} [builtInStandardAttributes]\n\t\t */\n\t\tconst names = getParametersValue(parameters, \"names\", {});\n\n\t\treturn (new asn1js.Choice({\n\t\t\tvalue: [\n\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t\t},\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\tnew asn1js.ObjectIdentifier(),\n\t\t\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: [new asn1js.Any()]\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 2 // [2]\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 3 // [3]\n\t\t\t\t\t},\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\tbuiltInStandardAttributes((names.builtInStandardAttributes || {}), false),\n\t\t\t\t\t\tbuiltInDomainDefinedAttributes(true),\n\t\t\t\t\t\textensionAttributes(true)\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 4 // [4]\n\t\t\t\t\t},\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.directoryName || {})]\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 5 // [5]\n\t\t\t\t\t},\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\t\tnew asn1js.Choice({\n\t\t\t\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\t\t\t\tnew asn1js.TeletexString(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.PrintableString(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.UniversalString(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Utf8String(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.BmpString()\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\t\t\tidBlock: {\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\t\tnew asn1js.Choice({\n\t\t\t\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\t\t\t\tnew asn1js.TeletexString(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.PrintableString(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.UniversalString(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Utf8String(),\n\t\t\t\t\t\t\t\t\t\tnew asn1js.BmpString()\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 6 // [6]\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 7 // [7]\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 8 // [8]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]\n\t\t}));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert parsed asn1js object into current class\n\t * @param {!Object} schema\n\t */\n\tfromSchema(schema)\n\t{\n\t\t//region Clear input data first\n\t\tclearProps(schema, [\n\t\t\t\"blockName\",\n\t\t\t\"otherName\",\n\t\t\t\"rfc822Name\",\n\t\t\t\"dNSName\",\n\t\t\t\"x400Address\",\n\t\t\t\"directoryName\",\n\t\t\t\"ediPartyName\",\n\t\t\t\"uniformResourceIdentifier\",\n\t\t\t\"iPAddress\",\n\t\t\t\"registeredID\"\n\t\t]);\n\t\t//endregion\n\t\t\n\t\t//region Check the schema is valid\n\t\tconst asn1 = asn1js.compareSchema(schema,\n\t\t\tschema,\n\t\t\tGeneralName.schema({\n\t\t\t\tnames: {\n\t\t\t\t\tblockName: \"blockName\",\n\t\t\t\t\totherName: \"otherName\",\n\t\t\t\t\trfc822Name: \"rfc822Name\",\n\t\t\t\t\tdNSName: \"dNSName\",\n\t\t\t\t\tx400Address: \"x400Address\",\n\t\t\t\t\tdirectoryName: {\n\t\t\t\t\t\tnames: {\n\t\t\t\t\t\t\tblockName: \"directoryName\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tediPartyName: \"ediPartyName\",\n\t\t\t\t\tuniformResourceIdentifier: \"uniformResourceIdentifier\",\n\t\t\t\t\tiPAddress: \"iPAddress\",\n\t\t\t\t\tregisteredID: \"registeredID\"\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tif(asn1.verified === false)\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for GeneralName\");\n\t\t//endregion\n\n\t\t//region Get internal properties from parsed schema\n\t\tthis.type = asn1.result.blockName.idBlock.tagNumber;\n\n\t\tswitch(this.type)\n\t\t{\n\t\t\tcase 0: // otherName\n\t\t\t\tthis.value = asn1.result.blockName;\n\t\t\t\tbreak;\n\t\t\tcase 1: // rfc822Name + dNSName + uniformResourceIdentifier\n\t\t\tcase 2:\n\t\t\tcase 6:\n\t\t\t\t{\n\t\t\t\t\tconst value = asn1.result.blockName;\n\n\t\t\t\t\tvalue.idBlock.tagClass = 1; // UNIVERSAL\n\t\t\t\t\tvalue.idBlock.tagNumber = 22; // IA5STRING\n\n\t\t\t\t\tconst valueBER = value.toBER(false);\n\n\t\t\t\t\tthis.value = asn1js.fromBER(valueBER).result.valueBlock.value;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3: // x400Address\n\t\t\t\tthis.value = asn1.result.blockName;\n\t\t\t\tbreak;\n\t\t\tcase 4: // directoryName\n\t\t\t\tthis.value = new RelativeDistinguishedNames({ schema: asn1.result.directoryName });\n\t\t\t\tbreak;\n\t\t\tcase 5: // ediPartyName\n\t\t\t\tthis.value = asn1.result.ediPartyName;\n\t\t\t\tbreak;\n\t\t\tcase 7: // iPAddress\n\t\t\t\tthis.value = new asn1js.OctetString({ valueHex: asn1.result.blockName.valueBlock.valueHex });\n\t\t\t\tbreak;\n\t\t\tcase 8: // registeredID\n\t\t\t\t{\n\t\t\t\t\tconst value = asn1.result.blockName;\n\n\t\t\t\t\tvalue.idBlock.tagClass = 1; // UNIVERSAL\n\t\t\t\t\tvalue.idBlock.tagNumber = 6; // ObjectIdentifier\n\n\t\t\t\t\tconst valueBER = value.toBER(false);\n\n\t\t\t\t\tthis.value = asn1js.fromBER(valueBER).result.valueBlock.toString(); // Getting a string representation of the ObjectIdentifier\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert current object to asn1js object and set correct values\n\t * @returns {Object} asn1js object\n\t */\n\ttoSchema()\n\t{\n\t\t//region Construct and return new ASN.1 schema for this object\n\t\tswitch(this.type)\n\t\t{\n\t\t\tcase 0:\n\t\t\tcase 3:\n\t\t\tcase 5:\n\t\t\t\treturn new asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: this.type\n\t\t\t\t\t},\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\tthis.value\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 6:\n\t\t\t\t{\n\t\t\t\t\tconst value = new asn1js.IA5String({ value: this.value });\n\n\t\t\t\t\tvalue.idBlock.tagClass = 3;\n\t\t\t\t\tvalue.idBlock.tagNumber = this.type;\n\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\tcase 4:\n\t\t\t\treturn new asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 4\n\t\t\t\t\t},\n\t\t\t\t\tvalue: [this.value.toSchema()]\n\t\t\t\t});\n\t\t\tcase 7:\n\t\t\t\t{\n\t\t\t\t\tconst value = this.value;\n\n\t\t\t\t\tvalue.idBlock.tagClass = 3;\n\t\t\t\t\tvalue.idBlock.tagNumber = this.type;\n\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\tcase 8:\n\t\t\t\t{\n\t\t\t\t\tconst value = new asn1js.ObjectIdentifier({ value: this.value });\n\n\t\t\t\t\tvalue.idBlock.tagClass = 3;\n\t\t\t\t\tvalue.idBlock.tagNumber = this.type;\n\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn GeneralName.schema();\n\t\t}\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the class to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tconst _object = {\n\t\t\ttype: this.type,\n\t\t\tvalue: \"\"\n\t\t};\n\n\t\tif((typeof this.value) === \"string\")\n\t\t\t_object.value = this.value;\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t_object.value = this.value.toJSON();\n\t\t\t}\n\t\t\tcatch(ex){}\n\t\t}\n\n\t\treturn _object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n"]},"metadata":{},"sourceType":"module"}