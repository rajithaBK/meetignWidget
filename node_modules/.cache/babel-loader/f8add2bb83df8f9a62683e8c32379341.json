{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar trailingSlashes = /(?:^\\/)|(?:\\/$)/;\n/**\n * @class\n */\n\nvar ServiceInterceptor = /*#__PURE__*/function (_Interceptor) {\n  (0, _inherits2.default)(ServiceInterceptor, _Interceptor);\n\n  var _super = _createSuper(ServiceInterceptor);\n\n  function ServiceInterceptor() {\n    (0, _classCallCheck2.default)(this, ServiceInterceptor);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ServiceInterceptor, [{\n    key: \"onRequest\",\n    value:\n    /* eslint-disable no-param-reassign */\n\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options - The request PTO.\n     * @returns {Object} - The mutated request PTO.\n     */\n    function onRequest(options) {\n      var _this = this; // Validate that the PTO includes a uri property.\n\n\n      if (options.uri) {\n        return options;\n      } // Normalize and validate the PTO.\n\n\n      this.normalizeOptions(options);\n      this.validateOptions(options); // Destructure commonly referenced namespaces.\n\n      var services = this.webex.internal.services;\n      var service = options.service,\n          resource = options.resource; // Attempt to collect the service url.\n\n      return services.waitForService({\n        name: service\n      }).then(function (serviceUrl) {\n        // Generate the combined service url and resource.\n        options.uri = _this.generateUri(serviceUrl, resource);\n        return options;\n      }).catch(function () {\n        return _promise.default.reject(new Error(\"service-interceptor: '\".concat(service, \"' is not a known service\")));\n      });\n    }\n    /* eslint-disable class-methods-use-this */\n\n    /**\n     * Generate a usable request uri string from a service url and a resouce.\n     *\n     * @param {string} serviceUrl - The service url.\n     * @param {string} [resource] - The resouce to be appended to the service url.\n     * @returns {string} - The combined service url and resource.\n     */\n\n  }, {\n    key: \"generateUri\",\n    value: function generateUri(serviceUrl) {\n      var resource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var formattedService = serviceUrl.replace(trailingSlashes, '');\n      var formattedResource = resource.replace(trailingSlashes, '');\n      return \"\".concat(formattedService, \"/\").concat(formattedResource);\n    }\n    /**\n     * Normalizes request options relative to service identification.\n     *\n     * @param {Object} options - The request PTO.\n     * @returns {Object} - The mutated request PTO.\n     */\n\n  }, {\n    key: \"normalizeOptions\",\n    value: function normalizeOptions(options) {\n      // Validate if the api property is used.\n      if (options.api) {\n        // Assign the service property the value of the api property if necessary.\n        options.service = options.service || options.api;\n        delete options.api;\n      }\n    }\n    /**\n     * Validates that the appropriate options for this interceptor are present.\n     *\n     * @param {Object} options - The request PTO.\n     * @returns {Object} - The mutated request PTO.\n     */\n\n  }, {\n    key: \"validateOptions\",\n    value: function validateOptions(options) {\n      if (!options.resource) {\n        throw new Error('a `resource` parameter is required');\n      }\n\n      if (!options.service) {\n        throw new Error('a valid \\'service\\' parameter is required');\n      }\n    }\n    /* eslint-enable class-methods-use-this no-param-reassign */\n\n  }], [{\n    key: \"create\",\n    value:\n    /**\n     * @returns {ServiceInterceptor}\n     */\n    function create() {\n      /* eslint no-invalid-this: [0] */\n      return new ServiceInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return ServiceInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = ServiceInterceptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAG,iBAAxB;AAEA;AACA;AACA;;IACqBC,kB;;;;;;;;;;;;;AASnB;;AACA;AACF;AACA;AACA;AACA;AACE,uBAAUC,OAAV,EAAmB;AAAA,wBACjB;;;AACA,UAAIA,OAAO,CAACC,GAAZ,EAAiB;AACf,eAAOD,OAAP;AAHe,QAMjB;;;AACA,WAAKE,gBAAL,CAAsBF,OAAtB;AACA,WAAKG,eAAL,CAAqBH,OAArB,EARiB,CAUjB;;AACA,UAAOI,QAAP,GAAmB,KAAKC,KAAL,CAAWC,QAAX,CAAZF,QAAP;AACA,UAAOG,OAAP,GAA4BP,OAA5B,CAAOO,OAAP;AAAA,UAAgBC,QAAhB,GAA4BR,OAA5B,CAAgBQ,QAAhB,CAZiB,CAcjB;;AACA,aAAOJ,QAAQ,CAACK,cAATL,CAAwB;AAACM,YAAI,EAAEH;AAAP,OAAxBH,EACJO,IADIP,CACC,UAACQ,UAAD,EAAgB;AACpB;AACAZ,eAAO,CAACC,GAARD,GAAca,KAAI,CAACC,WAAL,CAAiBF,UAAjB,EAA6BJ,QAA7B,CAAdR;AAEA,eAAOA,OAAP;AALG,SAOJe,KAPIX,CAOE;AAAA,eAAMY,iBAAQC,MAAR,CAAe,IAAIC,KAAJ,iCACDX,OADC,8BAAf,CAAN;AAPF,QAAP;AAUD;AAED;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,qBAAYK,UAAZ,EAAuC;AAAA,UAAfJ,QAAe,uEAAJ,EAAI;AACrC,UAAMW,gBAAgB,GAAGP,UAAU,CAACQ,OAAXR,CAAmBd,eAAnBc,EAAoC,EAApCA,CAAzB;AACA,UAAMS,iBAAiB,GAAGb,QAAQ,CAACY,OAATZ,CAAiBV,eAAjBU,EAAkC,EAAlCA,CAA1B;AAEA,uBAAUW,gBAAV,cAA8BE,iBAA9B;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,0BAAiBrB,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACsB,GAAZ,EAAiB;AACf;AACAtB,eAAO,CAACO,OAARP,GAAkBA,OAAO,CAACO,OAARP,IAAmBA,OAAO,CAACsB,GAA7CtB;AACA,eAAOA,OAAO,CAACsB,GAAf;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,yBAAgBtB,OAAhB,EAAyB;AACvB,UAAI,CAACA,OAAO,CAACQ,QAAb,EAAuB;AACrB,cAAM,IAAIU,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,UAAI,CAAClB,OAAO,CAACO,OAAb,EAAsB;AACpB,cAAM,IAAIW,KAAJ,CAAU,2CAAV,CAAN;AACD;AACF;AACD;;;;;AAtFA;AACF;AACA;AACE,sBAAgB;AACd;AACA,aAAO,IAAInB,kBAAJ,CAAuB;AAACM,aAAK,EAAE;AAAR,OAAvB,CAAP;AACD;;;EAP6CkB,qB","names":["trailingSlashes","ServiceInterceptor","options","uri","normalizeOptions","validateOptions","services","webex","internal","service","resource","waitForService","name","then","serviceUrl","_this","generateUri","catch","_promise","reject","Error","formattedService","replace","formattedResource","api","Interceptor"],"sources":["service.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\nconst trailingSlashes = /(?:^\\/)|(?:\\/$)/;\n\n/**\n * @class\n */\nexport default class ServiceInterceptor extends Interceptor {\n  /**\n   * @returns {ServiceInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new ServiceInterceptor({webex: this});\n  }\n\n  /* eslint-disable no-param-reassign */\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options - The request PTO.\n   * @returns {Object} - The mutated request PTO.\n   */\n  onRequest(options) {\n    // Validate that the PTO includes a uri property.\n    if (options.uri) {\n      return options;\n    }\n\n    // Normalize and validate the PTO.\n    this.normalizeOptions(options);\n    this.validateOptions(options);\n\n    // Destructure commonly referenced namespaces.\n    const {services} = this.webex.internal;\n    const {service, resource} = options;\n\n    // Attempt to collect the service url.\n    return services.waitForService({name: service})\n      .then((serviceUrl) => {\n        // Generate the combined service url and resource.\n        options.uri = this.generateUri(serviceUrl, resource);\n\n        return options;\n      })\n      .catch(() => Promise.reject(new Error(\n        `service-interceptor: '${service}' is not a known service`\n      )));\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * Generate a usable request uri string from a service url and a resouce.\n   *\n   * @param {string} serviceUrl - The service url.\n   * @param {string} [resource] - The resouce to be appended to the service url.\n   * @returns {string} - The combined service url and resource.\n   */\n  generateUri(serviceUrl, resource = '') {\n    const formattedService = serviceUrl.replace(trailingSlashes, '');\n    const formattedResource = resource.replace(trailingSlashes, '');\n\n    return `${formattedService}/${formattedResource}`;\n  }\n\n  /**\n   * Normalizes request options relative to service identification.\n   *\n   * @param {Object} options - The request PTO.\n   * @returns {Object} - The mutated request PTO.\n   */\n  normalizeOptions(options) {\n    // Validate if the api property is used.\n    if (options.api) {\n      // Assign the service property the value of the api property if necessary.\n      options.service = options.service || options.api;\n      delete options.api;\n    }\n  }\n\n  /**\n   * Validates that the appropriate options for this interceptor are present.\n   *\n   * @param {Object} options - The request PTO.\n   * @returns {Object} - The mutated request PTO.\n   */\n  validateOptions(options) {\n    if (!options.resource) {\n      throw new Error('a `resource` parameter is required');\n    }\n\n    if (!options.service) {\n      throw new Error('a valid \\'service\\' parameter is required');\n    }\n  }\n  /* eslint-enable class-methods-use-this no-param-reassign */\n}\n"]},"metadata":{},"sourceType":"script"}