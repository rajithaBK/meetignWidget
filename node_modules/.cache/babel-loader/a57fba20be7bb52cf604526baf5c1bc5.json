{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = mixinWebexInternalCorePlugins;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/define-property\"));\n\nvar _union2 = _interopRequireDefault(require(\"lodash/union\"));\n\nvar _merge2 = _interopRequireDefault(require(\"lodash/merge\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _has2 = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n/**\n * Mixes a plugin system into an AmpState object (specifically, into WebexCore)\n * @param {AmpState} State\n * @param {Object} config\n * @param {Object} interceptors\n * @returns {AmpState}\n */\n\n\nfunction mixinWebexInternalCorePlugins(State, config, interceptors) {\n  // eslint-disable-next-line complexity\n  State.registerPlugin = function registerPlugin(name, constructor) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (State.prototype._children[name] && !options.replace) {\n      return;\n    }\n\n    State.prototype._children[name] = constructor;\n\n    if (options.proxies) {\n      throw new Error('Proxies are not currently supported for private plugins');\n    }\n\n    if (options.interceptors) {\n      (0, _keys.default)(options.interceptors).forEach(function (key) {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      (0, _merge2.default)(config, options.config);\n    }\n\n    if ((0, _has2.default)(options, 'payloadTransformer.predicates')) {\n      config.payloadTransformer.predicates = config.payloadTransformer.predicates.concat((0, _get2.default)(options, 'payloadTransformer.predicates'));\n    }\n\n    if ((0, _has2.default)(options, 'payloadTransformer.transforms')) {\n      config.payloadTransformer.transforms = config.payloadTransformer.transforms.concat((0, _get2.default)(options, 'payloadTransformer.transforms'));\n    }\n\n    if (options.onBeforeLogout) {\n      config.onBeforeLogout = config.onBeforeLogout || [];\n      var onBeforeLogout = (0, _isArray2.default)(options.onBeforeLogout) ? options.onBeforeLogout : [options.onBeforeLogout];\n      onBeforeLogout.forEach(function (fn) {\n        return config.onBeforeLogout.push({\n          plugin: name,\n          fn: fn\n        });\n      });\n    } // Only mess with the plugin's derived properties if it's an amp-state plugin\n\n\n    if (constructor.prototype._definition && constructor.prototype._definition.ready) {\n      var _State$prototype$_der = State.prototype._derived.ready,\n          fn = _State$prototype$_der.fn,\n          depList = _State$prototype$_der.depList;\n      var def = {\n        deps: depList.concat(\"\".concat(name, \".ready\")),\n        fn: fn\n      };\n      createDerivedProperty(State.prototype, 'ready', def);\n    }\n  };\n\n  return State;\n}\n/**\n * Extracted from ampersand-state\n * @param {Object} modelProto\n * @param {string} name\n * @param {Object} definition\n * @private\n * @returns {undefined}\n */\n\n\nfunction createDerivedProperty(modelProto, name, definition) {\n  var def = modelProto._derived[name] = {\n    fn: (0, _isFunction2.default)(definition) ? definition : definition.fn,\n    cache: definition.cache !== false,\n    depList: definition.deps || []\n  }; // add to our shared dependency list\n\n  def.depList.forEach(function (dep) {\n    modelProto._deps[dep] = (0, _union2.default)(modelProto._deps[dep] || [], [name]);\n  }); // defined a top-level getter for derived names\n\n  (0, _defineProperty.default)(modelProto, name, {\n    get: function get() {\n      return this._getDerivedProperty(name);\n    },\n    set: function set() {\n      throw new TypeError(\"`\".concat(name, \"` is a derived property, it can't be set directly.\"));\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["mixinWebexInternalCorePlugins","State","config","interceptors","registerPlugin","name","constructor","options","prototype","_children","replace","proxies","Error","forEach","key","payloadTransformer","predicates","concat","transforms","onBeforeLogout","fn","push","plugin","_definition","ready","_derived","depList","def","deps","createDerivedProperty","modelProto","definition","cache","dep","_deps","get","_getDerivedProperty","set","TypeError"],"sources":["webex-internal-core-plugin-mixin.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {get, has, isArray, isFunction, merge, union} from 'lodash';\n\n/**\n * Mixes a plugin system into an AmpState object (specifically, into WebexCore)\n * @param {AmpState} State\n * @param {Object} config\n * @param {Object} interceptors\n * @returns {AmpState}\n */\nexport default function mixinWebexInternalCorePlugins(State, config, interceptors) {\n  // eslint-disable-next-line complexity\n  State.registerPlugin = function registerPlugin(name, constructor, options = {}) {\n    if (State.prototype._children[name] && !options.replace) {\n      return;\n    }\n\n    State.prototype._children[name] = constructor;\n\n    if (options.proxies) {\n      throw new Error('Proxies are not currently supported for private plugins');\n    }\n\n    if (options.interceptors) {\n      Object.keys(options.interceptors).forEach((key) => {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      merge(config, options.config);\n    }\n\n    if (has(options, 'payloadTransformer.predicates')) {\n      config.payloadTransformer.predicates = config.payloadTransformer.predicates.concat(\n        get(options, 'payloadTransformer.predicates')\n      );\n    }\n\n    if (has(options, 'payloadTransformer.transforms')) {\n      config.payloadTransformer.transforms = config.payloadTransformer.transforms.concat(\n        get(options, 'payloadTransformer.transforms')\n      );\n    }\n\n    if (options.onBeforeLogout) {\n      config.onBeforeLogout = config.onBeforeLogout || [];\n      const onBeforeLogout = isArray(options.onBeforeLogout) ? options.onBeforeLogout : [options.onBeforeLogout];\n\n      onBeforeLogout.forEach((fn) =>\n        config.onBeforeLogout.push({\n          plugin: name,\n          fn\n        }));\n    }\n\n    // Only mess with the plugin's derived properties if it's an amp-state plugin\n    if (constructor.prototype._definition && constructor.prototype._definition.ready) {\n      const {fn, depList} = State.prototype._derived.ready;\n      const def = {\n        deps: depList.concat(`${name}.ready`),\n        fn\n      };\n\n      createDerivedProperty(State.prototype, 'ready', def);\n    }\n  };\n\n  return State;\n}\n\n/**\n * Extracted from ampersand-state\n * @param {Object} modelProto\n * @param {string} name\n * @param {Object} definition\n * @private\n * @returns {undefined}\n */\nfunction createDerivedProperty(modelProto, name, definition) {\n  const def = (modelProto._derived[name] = {\n    fn: isFunction(definition) ? definition : definition.fn,\n    cache: definition.cache !== false,\n    depList: definition.deps || []\n  });\n\n  // add to our shared dependency list\n  def.depList.forEach((dep) => {\n    modelProto._deps[dep] = union(modelProto._deps[dep] || [], [name]);\n  });\n\n  // defined a top-level getter for derived names\n  Reflect.defineProperty(modelProto, name, {\n    get() {\n      return this._getDerivedProperty(name);\n    },\n    set() {\n      throw new TypeError(`\\`${name}\\` is a derived property, it can't be set directly.`);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}