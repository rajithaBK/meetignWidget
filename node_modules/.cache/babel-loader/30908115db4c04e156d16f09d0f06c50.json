{"ast":null,"code":"/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n// Need to fork xhr to support environments with full object freezing; namely,\n// SalesForce's Aura and Locker environment.\n// See https://github.com/naugtur/xhr for license information\n// Maintain the original code style of https://github.com/naugtur/xhr since\n// we're trying to diverge as little as possible.\n\n/* eslint-disable */\n\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i += 1) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = options.uri || options.url;\n  var method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = (0, _stringify.default)(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  if (xhr.responseType === \"document\") {\n    return xhr.responseXML;\n  }\n\n  var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n  if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n    return xhr.responseXML;\n  }\n\n  return null;\n}\n\nfunction noop() {}\n\nvar _default = createXHR;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["window","require","isFunction","parseHeaders","xtend","createXHR","XMLHttpRequest","noop","XDomainRequest","forEachArray","method","uri","options","callback","initParams","toUpperCase","_createXHR","array","iterator","i","length","isEmpty","obj","hasOwnProperty","params","Error","called","cbOnce","err","response","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","e","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","headers","url","rawRequest","getAllResponseHeaders","cors","key","data","sync","json","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName"],"sources":["xhr.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n// Need to fork xhr to support environments with full object freezing; namely,\n// SalesForce's Aura and Locker environment.\n\n// See https://github.com/naugtur/xhr for license information\n\n// Maintain the original code style of https://github.com/naugtur/xhr since\n// we're trying to diverge as little as possible.\n/* eslint-disable */\n\n\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i+= 1) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = options.uri || options.url\n    var method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\nexport default createXHR;\n"]},"metadata":{},"sourceType":"script"}