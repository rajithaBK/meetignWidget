{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * @class\n */\n\n\nvar EmbargoInterceptor = /*#__PURE__*/function (_Interceptor) {\n  (0, _inherits2.default)(EmbargoInterceptor, _Interceptor);\n\n  var _super = _createSuper(EmbargoInterceptor);\n\n  function EmbargoInterceptor() {\n    (0, _classCallCheck2.default)(this, EmbargoInterceptor);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(EmbargoInterceptor, [{\n    key: \"onResponseError\",\n    value:\n    /**\n     * @see Interceptor#onResponseError\n     * @param {Object} options\n     * @param {Error} reason\n     * @returns {Promise}\n     */\n    function onResponseError(options, reason) {\n      if (reason.statusCode === 451) {\n        var device = this.webex.internal.device;\n        var loggerMessage = ['Received `HTTP 451 Unavailable For Legal Reasons`, ', 'discarding credentials and device registration'].join('');\n\n        if (device) {\n          this.webex.internal.device.clear();\n        }\n\n        this.webex.credentials.clear();\n        this.webex.logger.info(loggerMessage);\n      }\n\n      return _promise.default.reject(reason);\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\n     * @returns {EmbargoInterceptor}\n     */\n    function create() {\n      /* eslint no-invalid-this: [0] */\n      return new EmbargoInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return EmbargoInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = EmbargoInterceptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;IACqBA,kB;;;;;;;;;;;;;AASnB;AACF;AACA;AACA;AACA;AACA;AACE,6BAAgBC,OAAhB,EAAyBC,MAAzB,EAAiC;AAC/B,UAAIA,MAAM,CAACC,UAAPD,KAAsB,GAA1B,EAA+B;AAC7B,YAAOE,MAAP,GAAiB,KAAKC,KAAL,CAAWC,QAAX,CAAVF,MAAP;AACA,YAAMG,aAAa,GAAG,CACpB,qDADoB,EAEpB,gDAFoB,EAGpBC,IAHoB,CAGf,EAHe,CAAtB;;AAKA,YAAIJ,MAAJ,EAAY;AACV,eAAKC,KAAL,CAAWC,QAAX,CAAoBF,MAApB,CAA2BK,KAA3B;AACD;;AAED,aAAKJ,KAAL,CAAWK,WAAX,CAAuBD,KAAvB;AACA,aAAKJ,KAAL,CAAWM,MAAX,CAAkBC,IAAlB,CAAuBL,aAAvB;AACD;;AAED,aAAOM,iBAAQC,MAAR,CAAeZ,MAAf,CAAP;AACD;;;;AA/BD;AACF;AACA;AACE,sBAAgB;AACd;AACA,aAAO,IAAIF,kBAAJ,CAAuB;AAACK,aAAK,EAAE;AAAR,OAAvB,CAAP;AACD;;;EAP6CU,qB","names":["EmbargoInterceptor","options","reason","statusCode","device","webex","internal","loggerMessage","join","clear","credentials","logger","info","_promise","reject","Interceptor"],"sources":["embargo.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class EmbargoInterceptor extends Interceptor {\n  /**\n   * @returns {EmbargoInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new EmbargoInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Promise}\n   */\n  onResponseError(options, reason) {\n    if (reason.statusCode === 451) {\n      const {device} = this.webex.internal;\n      const loggerMessage = [\n        'Received `HTTP 451 Unavailable For Legal Reasons`, ',\n        'discarding credentials and device registration'\n      ].join('');\n\n      if (device) {\n        this.webex.internal.device.clear();\n      }\n\n      this.webex.credentials.clear();\n      this.webex.logger.info(loggerMessage);\n    }\n\n    return Promise.reject(reason);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}