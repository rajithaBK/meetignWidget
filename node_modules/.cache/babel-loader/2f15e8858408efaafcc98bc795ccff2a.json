{"ast":null,"code":"import _classCallCheck from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber.js\";\nimport OriginatorPublicKey from \"./OriginatorPublicKey.js\"; //**************************************************************************************\n\n/**\n * Class from RFC5652\n */\n\nvar OriginatorIdentifierOrKey = /*#__PURE__*/function () {\n  //**********************************************************************************\n\n  /**\n   * Constructor for OriginatorIdentifierOrKey class\n   * @param {Object} [parameters={}]\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\n   */\n  function OriginatorIdentifierOrKey() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, OriginatorIdentifierOrKey);\n\n    //region Internal properties of the object\n\n    /**\n     * @type {number}\n     * @desc variant\n     */\n    this.variant = getParametersValue(parameters, \"variant\", OriginatorIdentifierOrKey.defaultValues(\"variant\"));\n    if (\"value\" in parameters)\n      /**\n       * @type {IssuerAndSerialNumber|OctetString|OriginatorPublicKey}\n       * @desc value\n       */\n      this.value = getParametersValue(parameters, \"value\", OriginatorIdentifierOrKey.defaultValues(\"value\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\n   * Return default values for all class members\n   * @param {string} memberName String name for a class member\n   */\n\n\n  _createClass(OriginatorIdentifierOrKey, [{\n    key: \"fromSchema\",\n    value: //**********************************************************************************\n\n    /**\n     * Convert parsed asn1js object into current class\n     * @param {!Object} schema\n     */\n    function fromSchema(schema) {\n      //region Clear input data first\n      clearProps(schema, [\"blockName\"]); //endregion\n      //region Check the schema is valid\n\n      var asn1 = asn1js.compareSchema(schema, schema, OriginatorIdentifierOrKey.schema({\n        names: {\n          blockName: \"blockName\"\n        }\n      }));\n      if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for OriginatorIdentifierOrKey\"); //endregion\n      //region Get internal properties from parsed schema\n\n      if (asn1.result.blockName.idBlock.tagClass === 1) {\n        this.variant = 1;\n        this.value = new IssuerAndSerialNumber({\n          schema: asn1.result.blockName\n        });\n      } else {\n        if (asn1.result.blockName.idBlock.tagNumber === 0) {\n          //region Create \"OCTETSTRING\" from \"ASN1_PRIMITIVE\"\n          asn1.result.blockName.idBlock.tagClass = 1; // UNIVERSAL\n\n          asn1.result.blockName.idBlock.tagNumber = 4; // OCTETSTRING\n          //endregion\n\n          this.variant = 2;\n          this.value = asn1.result.blockName;\n        } else {\n          this.variant = 3;\n          this.value = new OriginatorPublicKey({\n            schema: new asn1js.Sequence({\n              value: asn1.result.blockName.valueBlock.value\n            })\n          });\n        }\n      } //endregion\n\n    } //**********************************************************************************\n\n    /**\n     * Convert current object to asn1js object and set correct values\n     * @returns {Object} asn1js object\n     */\n\n  }, {\n    key: \"toSchema\",\n    value: function toSchema() {\n      //region Construct and return new ASN.1 schema for this object\n      switch (this.variant) {\n        case 1:\n          return this.value.toSchema();\n\n        case 2:\n          this.value.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\n\n          this.value.idBlock.tagNumber = 0; // [0]\n\n          return this.value;\n\n        case 3:\n          {\n            var _schema = this.value.toSchema();\n\n            _schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\n\n            _schema.idBlock.tagNumber = 1; // [1]\n\n            return _schema;\n          }\n\n        default:\n          return new asn1js.Any();\n      } //endregion\n\n    } //**********************************************************************************\n\n    /**\n     * Convertion for the class to JSON object\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _object = {\n        variant: this.variant\n      };\n      if (this.variant === 1 || this.variant === 2 || this.variant === 3) _object.value = this.value.toJSON();\n      return _object;\n    } //**********************************************************************************\n\n  }], [{\n    key: \"defaultValues\",\n    value: function defaultValues(memberName) {\n      switch (memberName) {\n        case \"variant\":\n          return -1;\n\n        case \"value\":\n          return {};\n\n        default:\n          throw new Error(\"Invalid member name for OriginatorIdentifierOrKey class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\n     * Compare values with default values for all class members\n     * @param {string} memberName String name for a class member\n     * @param {*} memberValue Value to compare with default value\n     */\n\n  }, {\n    key: \"compareWithDefault\",\n    value: function compareWithDefault(memberName, memberValue) {\n      switch (memberName) {\n        case \"variant\":\n          return memberValue === -1;\n\n        case \"value\":\n          return Object.keys(memberValue).length === 0;\n\n        default:\n          throw new Error(\"Invalid member name for OriginatorIdentifierOrKey class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\n     * Return value of pre-defined ASN.1 schema for current class\n     *\n     * ASN.1 schema:\n     * ```asn1\n     * OriginatorIdentifierOrKey ::= CHOICE {\n     *    issuerAndSerialNumber IssuerAndSerialNumber,\n     *    subjectKeyIdentifier [0] SubjectKeyIdentifier,\n     *    originatorKey [1] OriginatorPublicKey }\n     * ```\n     *\n     * @param {Object} parameters Input parameters for the schema\n     * @returns {Object} asn1js schema object\n     */\n\n  }, {\n    key: \"schema\",\n    value: function schema() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\n       * @type {Object}\n       * @property {string} [blockName]\n       */\n      var names = getParametersValue(parameters, \"names\", {});\n      return new asn1js.Choice({\n        value: [IssuerAndSerialNumber.schema({\n          names: {\n            blockName: names.blockName || \"\"\n          }\n        }), new asn1js.Primitive({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          name: names.blockName || \"\"\n        }), new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          },\n          name: names.blockName || \"\",\n          value: OriginatorPublicKey.schema().valueBlock.value\n        })]\n      });\n    }\n  }]);\n\n  return OriginatorIdentifierOrKey;\n}(); //**************************************************************************************\n\n\nexport { OriginatorIdentifierOrKey as default };","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/OriginatorIdentifierOrKey.js"],"names":["asn1js","getParametersValue","clearProps","IssuerAndSerialNumber","OriginatorPublicKey","OriginatorIdentifierOrKey","parameters","variant","defaultValues","value","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","idBlock","tagClass","tagNumber","Sequence","valueBlock","toSchema","_schema","Any","_object","toJSON","memberName","memberValue","Object","keys","length","Choice","Primitive","name","Constructed"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber.js\";\nimport OriginatorPublicKey from \"./OriginatorPublicKey.js\";\n//**************************************************************************************\n/**\n * Class from RFC5652\n */\nexport default class OriginatorIdentifierOrKey \n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for OriginatorIdentifierOrKey class\n\t * @param {Object} [parameters={}]\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\t//region Internal properties of the object\n\t\t/**\n\t\t * @type {number}\n\t\t * @desc variant\n\t\t */\n\t\tthis.variant = getParametersValue(parameters, \"variant\", OriginatorIdentifierOrKey.defaultValues(\"variant\"));\n\n\t\tif(\"value\" in parameters)\n\t\t\t/**\n\t\t\t * @type {IssuerAndSerialNumber|OctetString|OriginatorPublicKey}\n\t\t\t * @desc value\n\t\t\t */\n\t\t\tthis.value = getParametersValue(parameters, \"value\", OriginatorIdentifierOrKey.defaultValues(\"value\"));\n\t\t//endregion\n\t\t\n\t\t//region If input argument array contains \"schema\" for this object\n\t\tif(\"schema\" in parameters)\n\t\t\tthis.fromSchema(parameters.schema);\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Return default values for all class members\n\t * @param {string} memberName String name for a class member\n\t */\n\tstatic defaultValues(memberName)\n\t{\n\t\tswitch(memberName)\n\t\t{\n\t\t\tcase \"variant\":\n\t\t\t\treturn (-1);\n\t\t\tcase \"value\":\n\t\t\t\treturn {};\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorIdentifierOrKey class: ${memberName}`);\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Compare values with default values for all class members\n\t * @param {string} memberName String name for a class member\n\t * @param {*} memberValue Value to compare with default value\n\t */\n\tstatic compareWithDefault(memberName, memberValue)\n\t{\n\t\tswitch(memberName)\n\t\t{\n\t\t\tcase \"variant\":\n\t\t\t\treturn (memberValue === (-1));\n\t\t\tcase \"value\":\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorIdentifierOrKey class: ${memberName}`);\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Return value of pre-defined ASN.1 schema for current class\n\t *\n\t * ASN.1 schema:\n\t * ```asn1\n\t * OriginatorIdentifierOrKey ::= CHOICE {\n\t *    issuerAndSerialNumber IssuerAndSerialNumber,\n\t *    subjectKeyIdentifier [0] SubjectKeyIdentifier,\n\t *    originatorKey [1] OriginatorPublicKey }\n\t * ```\n\t *\n\t * @param {Object} parameters Input parameters for the schema\n\t * @returns {Object} asn1js schema object\n\t */\n\tstatic schema(parameters = {})\n\t{\n\t\t/**\n\t\t * @type {Object}\n\t\t * @property {string} [blockName]\n\t\t */\n\t\tconst names = getParametersValue(parameters, \"names\", {});\n\t\t\n\t\treturn (new asn1js.Choice({\n\t\t\tvalue: [\n\t\t\t\tIssuerAndSerialNumber.schema({\n\t\t\t\t\tnames: {\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Primitive({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 0 // [0]\n\t\t\t\t\t},\n\t\t\t\t\tname: (names.blockName || \"\")\n\t\t\t\t}),\n\t\t\t\tnew asn1js.Constructed({\n\t\t\t\t\tidBlock: {\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\n\t\t\t\t\t\ttagNumber: 1 // [1]\n\t\t\t\t\t},\n\t\t\t\t\tname: (names.blockName || \"\"),\n\t\t\t\t\tvalue: OriginatorPublicKey.schema().valueBlock.value\n\t\t\t\t})\n\t\t\t]\n\t\t}));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert parsed asn1js object into current class\n\t * @param {!Object} schema\n\t */\n\tfromSchema(schema)\n\t{\n\t\t//region Clear input data first\n\t\tclearProps(schema, [\n\t\t\t\"blockName\"\n\t\t]);\n\t\t//endregion\n\t\t\n\t\t//region Check the schema is valid\n\t\tconst asn1 = asn1js.compareSchema(schema,\n\t\t\tschema,\n\t\t\tOriginatorIdentifierOrKey.schema({\n\t\t\t\tnames: {\n\t\t\t\t\tblockName: \"blockName\"\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tif(asn1.verified === false)\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OriginatorIdentifierOrKey\");\n\t\t//endregion\n\n\t\t//region Get internal properties from parsed schema\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\n\t\t{\n\t\t\tthis.variant = 1;\n\t\t\tthis.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(asn1.result.blockName.idBlock.tagNumber === 0)\n\t\t\t{\n\t\t\t\t//region Create \"OCTETSTRING\" from \"ASN1_PRIMITIVE\"\n\t\t\t\tasn1.result.blockName.idBlock.tagClass = 1; // UNIVERSAL\n\t\t\t\tasn1.result.blockName.idBlock.tagNumber = 4; // OCTETSTRING\n\t\t\t\t//endregion\n\n\t\t\t\tthis.variant = 2;\n\t\t\t\tthis.value = asn1.result.blockName;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.variant = 3;\n\t\t\t\tthis.value = new OriginatorPublicKey({\n\t\t\t\t\tschema: new asn1js.Sequence({\n\t\t\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert current object to asn1js object and set correct values\n\t * @returns {Object} asn1js object\n\t */\n\ttoSchema()\n\t{\n\t\t//region Construct and return new ASN.1 schema for this object\n\t\tswitch(this.variant)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\treturn this.value.toSchema();\n\t\t\tcase 2:\n\t\t\t\tthis.value.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\n\t\t\t\tthis.value.idBlock.tagNumber = 0; // [0]\n\n\t\t\t\treturn this.value;\n\t\t\tcase 3:\n\t\t\t\t{\n\t\t\t\t\tconst _schema = this.value.toSchema();\n\n\t\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\n\t\t\t\t\t_schema.idBlock.tagNumber = 1; // [1]\n\n\t\t\t\t\treturn _schema;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn new asn1js.Any();\n\t\t}\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the class to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tconst _object = {\n\t\t\tvariant: this.variant\n\t\t};\n\n\t\tif((this.variant === 1) || (this.variant === 2) || (this.variant === 3))\n\t\t\t_object.value = this.value.toJSON();\n\n\t\treturn _object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n"]},"metadata":{},"sourceType":"module"}