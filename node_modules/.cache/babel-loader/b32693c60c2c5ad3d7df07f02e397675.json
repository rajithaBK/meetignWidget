{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _loggerProxy = _interopRequireDefault(require(\"../common/logs/logger-proxy\"));\n\nvar _constants = require(\"../constants\");\n\nvar _metrics = _interopRequireDefault(require(\"../metrics\"));\n\nvar _config = require(\"../metrics/config\");\n\nvar _parameter = _interopRequireDefault(require(\"../common/errors/parameter\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * @class RoapRequest\n */\n\n\nvar RoapRequest = /*#__PURE__*/function (_StatelessWebexPlugin) {\n  (0, _inherits2.default)(RoapRequest, _StatelessWebexPlugin);\n\n  var _super = _createSuper(RoapRequest);\n\n  function RoapRequest() {\n    (0, _classCallCheck2.default)(this, RoapRequest);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(RoapRequest, [{\n    key: \"attachRechabilityData\",\n    value:\n    /**\n     * Joins a meeting via ROAP\n     * @param {Object} options\n     * @returns {Promise} returns a promise that resolves/rejects whatever the request does\n     */\n    function attachRechabilityData(localSdp) {\n      var reachabilityData = window.localStorage.getItem(_constants.REACHABILITY.localStorage);\n\n      if (reachabilityData) {\n        try {\n          var reachabilityResult = JSON.parse(reachabilityData);\n          /* istanbul ignore else */\n\n          if (reachabilityResult && (0, _keys.default)(reachabilityResult).length) {\n            localSdp.reachability = reachabilityResult;\n          }\n        } catch (e) {\n          _loggerProxy.default.logger.error(\"Roap:request#attachReachabilityData --> Error in parsing reachability data: \".concat(e));\n        }\n      }\n\n      return localSdp;\n    }\n  }, {\n    key: \"joinMeetingWithRoap\",\n    value: function joinMeetingWithRoap(options) {\n      var _this = this;\n\n      _loggerProxy.default.logger.info('Roap:request#joinMeetingWithRoap --> Join locus with roap');\n\n      _loggerProxy.default.logger.info(\"Roap:request#joinMeetingWithRoap --> Local SDP: \".concat(options.roapMessage));\n\n      return _promise.default.resolve().then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _options$preferTransc;\n\n        var deviceUrl, url, body;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                deviceUrl = _this.webex.internal.device.url;\n                url = '';\n                body = {\n                  deviceUrl: deviceUrl,\n                  usingResource: options.resourceId || null,\n                  correlationId: options.correlationId,\n                  localMedias: [{\n                    localSdp: (0, _stringify.default)(_this.attachRechabilityData({\n                      roapMessage: options.roapMessage,\n                      audioMuted: false,\n                      videoMuted: false\n                    }))\n                  }],\n                  clientMediaPreferences: {\n                    preferTranscoding: (_options$preferTransc = options.preferTranscoding) !== null && _options$preferTransc !== void 0 ? _options$preferTransc : true\n                  }\n                };\n\n                if (!options.locusUrl) {\n                  _context.next = 7;\n                  break;\n                }\n\n                url = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT);\n                _context.next = 22;\n                break;\n\n              case 7:\n                if (!options.sipUrl) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.prev = 8;\n                _context.next = 11;\n                return _this.webex.internal.services.waitForCatalog('postauth');\n\n              case 11:\n                url = \"\".concat(_this.webex.internal.services.get('locus'), \"/\").concat(_constants.LOCI, \"/\").concat(_constants.CALL);\n                body.invitee = {\n                  address: options.sipTarget\n                };\n                _context.next = 19;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](8);\n\n                _loggerProxy.default.logger.error(\"Roap:request#joinMeetingWithRoap --> \".concat(_context.t0));\n\n                throw _context.t0;\n\n              case 19:\n                _context.next = 22;\n                break;\n\n              case 21:\n                throw new _parameter.default('Must provide a locusUrl or sipTarget');\n\n              case 22:\n                return _context.abrupt(\"return\", _this.webex.request({\n                  method: _constants.HTTP_VERBS.POST,\n                  uri: url,\n                  body: body\n                }).then(function (res) {\n                  var locus = res.body.locus;\n                  locus.roapSeq = options.roapMessage.seq;\n                  locus.id = locus.url.split('/').pop();\n\n                  _loggerProxy.default.logger.info(\"Roap:request#joinMeetingWithRoap --> Joined locus [\".concat(locus.id, \"][\").concat(locus.fullState.lastActive, \"]\"));\n\n                  return locus;\n                }).catch(function (err) {\n                  _loggerProxy.default.logger.error(\"Roap:request#joinMeetingWithRoap --> failed with error: \".concat(err));\n\n                  throw err;\n                }));\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 15]]);\n      })));\n    }\n    /**\n     * Sends a ROAP message\n     * @param {Object} options\n     * @param {String} options.roapMessage\n     * @param {String} options.locusId\n     * @param {String} options.locusSelfId\n     * @param {String} options.mediaId\n     * @param {String} options.correlationId\n     * @returns {Promise} returns the response/failure of the request\n     */\n\n  }, {\n    key: \"sendRoap\",\n    value: function sendRoap(options) {\n      var _options$preferTransc2;\n\n      var roapMessage = options.roapMessage,\n          locusSelfUrl = options.locusSelfUrl,\n          mediaId = options.mediaId,\n          correlationId = options.correlationId,\n          meetingId = options.meetingId;\n\n      if (!mediaId) {\n        _loggerProxy.default.logger.info('Roap:request#sendRoap --> Race Condition /call mediaID not present');\n      }\n\n      var mediaUrl = \"\".concat(locusSelfUrl, \"/\").concat(_constants.MEDIA);\n      var deviceUrl = this.webex.internal.device.url;\n\n      _loggerProxy.default.logger.info(\"Roap:request#sendRoap --> \".concat(mediaUrl, \" \\n \").concat(roapMessage.messageType, \" \\n seq:\").concat(roapMessage.seq));\n\n      _metrics.default.postEvent({\n        event: _config.eventType.MEDIA_REQUEST,\n        meetingId: meetingId\n      });\n\n      return this.webex.request({\n        uri: mediaUrl,\n        method: _constants.HTTP_VERBS.PUT,\n        body: {\n          device: {\n            url: deviceUrl,\n            deviceType: this.config.meetings.deviceType\n          },\n          correlationId: correlationId,\n          localMedias: [{\n            localSdp: (0, _stringify.default)(this.attachRechabilityData({\n              roapMessage: roapMessage,\n              // eslint-disable-next-line no-warning-comments\n              // TODO: check whats the need for video and audiomute\n              audioMuted: !!options.audioMuted,\n              videoMuted: !!options.videoMuted\n            })),\n            mediaId: options.mediaId\n          }],\n          clientMediaPreferences: {\n            preferTranscoding: (_options$preferTransc2 = options.preferTranscoding) !== null && _options$preferTransc2 !== void 0 ? _options$preferTransc2 : true\n          }\n        }\n      }).then(function (res) {\n        _metrics.default.postEvent({\n          event: _config.eventType.MEDIA_RESPONSE,\n          meetingId: meetingId\n        }); // always it will be the first mediaConnection Object\n\n\n        var mediaConnections = res.body.mediaConnections && res.body.mediaConnections.length > 0 && res.body.mediaConnections[0];\n\n        _loggerProxy.default.logger.info(\"Roap:request#sendRoap --> response:\".concat((0, _stringify.default)(mediaConnections, null, 2), \"'\\n StatusCode:'\").concat(res.statusCode));\n\n        var locus = res.body.locus;\n        locus.roapSeq = options.roapMessage.seq;\n        return _objectSpread({\n          locus: locus\n        }, mediaConnections && {\n          mediaConnections: res.body.mediaConnections\n        });\n      }).catch(function (err) {\n        _metrics.default.postEvent({\n          event: _config.eventType.MEDIA_RESPONSE,\n          meetingId: meetingId,\n          data: {\n            error: _metrics.default.parseLocusError(err, true)\n          }\n        });\n\n        _loggerProxy.default.logger.error(\"Roap:request#sendRoap --> Error:\".concat((0, _stringify.default)(err, null, 2)));\n\n        _loggerProxy.default.logger.error(\"Roap:request#sendRoapRequest --> errorBody:\".concat((0, _stringify.default)(roapMessage, null, 2), \" + '\\\\n mediaId:'\").concat(options.mediaId));\n\n        throw err;\n      });\n    }\n  }]);\n  return RoapRequest;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = RoapRequest;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAEA;;AACA;;AAQA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;IACqBA,W;;;;;;;;;;;;;AACnB;AACF;AACA;AACA;AACA;AAGE,mCAAsBC,QAAtB,EAAgC;AAC9B,UAAMC,gBAAgB,GAAGC,MAAM,CAACC,YAAPD,CAAoBE,OAApBF,CAA4BG,wBAAaF,YAAzCD,CAAzB;;AAEA,UAAID,gBAAJ,EAAsB;AACpB,YAAI;AACF,cAAMK,kBAAkB,GAAGC,IAAI,CAACC,KAALD,CAAWN,gBAAXM,CAA3B;AAEA;;AACA,cAAID,kBAAkB,IAAI,mBAAYA,kBAAZ,EAAgCG,MAA1D,EAAkE;AAChET,oBAAQ,CAACU,YAATV,GAAwBM,kBAAxBN;AACD;AANH,UAQA,OAAOW,CAAP,EAAU;AACRC,+BAAYC,MAAZD,CAAmBE,KAAnBF,uFAAwGD,CAAxG;AACD;AACF;;AAED,aAAOX,QAAP;AACD;;;WAED,6BAAoBe,OAApB,EAA6B;AAAA;;AAC3BH,2BAAYC,MAAZD,CAAmBI,IAAnBJ,CAAwB,2DAAxBA;;AACAA,2BAAYC,MAAZD,CAAmBI,IAAnBJ,2DAA2EG,OAAO,CAACE,WAAnF;;AAEA,aAAOC,iBAAQC,OAAR,GAAkBC,IAAlB,uFAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,yBADsB,GACVC,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAAvCL;AACFK,mBAFwB,GAElB,EAANA;AAEEC,oBAJsB,GAIf;AACXN,2BAAS,EAATA,SADW;AAEXO,+BAAa,EAAEb,OAAO,CAACc,UAARd,IAAsB,IAF1B;AAGXe,+BAAa,EAAEf,OAAO,CAACe,aAHZ;AAIXC,6BAAW,EAAE,CACX;AACE/B,4BAAQ,EAAE,wBAAesB,KAAI,CAACU,qBAAL,CAA2B;AAClDf,iCAAW,EAAEF,OAAO,CAACE,WAD6B;AAElDgB,gCAAU,EAAE,KAFsC;AAGlDC,gCAAU,EAAE;AAHsC,qBAA3B,CAAf;AADZ,mBADW,CAJF;AAaXC,wCAAsB,EAAE;AACtBC,qCAAiB,2BAAErB,OAAO,CAACqB,iBAAV,yEAA+B;AAD1B;AAbb,iBAAPT;;AAJsB,qBAsBxBZ,OAAO,CAACsB,QAtBgB;AAAAC;AAAA;AAAA;;AAuB1BZ,mBAAG,aAAMX,OAAO,CAACsB,QAAd,cAA0BE,sBAA1B,CAAHb;AAvB0BY;AAAA;;AAAA;AAAA,qBAyBnBvB,OAAO,CAACyB,MAzBW;AAAAF;AAAA;AAAA;;AAAAA;AAAAA;AAAA,uBA2BlBhB,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBiB,QAApB,CAA6BC,cAA7B,CAA4C,UAA5C,CA3BkB;;AAAA;AA4BxBhB,mBAAG,aAAMJ,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBiB,QAApB,CAA6BE,GAA7B,CAAiC,OAAjC,CAAN,cAAmDC,eAAnD,cAA2DC,eAA3D,CAAHnB;AACAC,oBAAI,CAACmB,OAALnB,GAAe;AACboB,yBAAO,EAAEhC,OAAO,CAACiC;AADJ,iBAAfrB;AA7BwBW;AAAA;;AAAA;AAAAA;AAAAA;;AAkCxB1B,qCAAYC,MAAZD,CAAmBE,KAAnBF;;AAlCwB;;AAAA;AAAA0B;AAAA;;AAAA;AAAA,sBAuCpB,IAAIW,kBAAJ,CAAmB,sCAAnB,CAvCoB;;AAAA;AAAA,iDA0CrB3B,KAAI,CAACC,KAAL,CACJ2B,OADI,CACI;AACPC,wBAAM,EAAEC,sBAAWC,IADZ;AAEPC,qBAAG,EAAE5B,GAFE;AAGPC,sBAAI,EAAJA;AAHO,iBADJ,EAMJP,IANI,CAMC,UAACmC,GAAD,EAAS;AACb,sBAAOC,KAAP,GAAgBD,GAAG,CAAC5B,IAAJ4B,CAATC,KAAP;AAEAA,uBAAK,CAACC,OAAND,GAAgBzC,OAAO,CAACE,WAARF,CAAoB2C,GAApCF;AACAA,uBAAK,CAACG,EAANH,GAAWA,KAAK,CAAC9B,GAAN8B,CAAUI,KAAVJ,CAAgB,GAAhBA,EAAqBK,GAArBL,EAAXA;;AACA5C,uCAAYC,MAAZD,CAAmBI,IAAnBJ,8DAA8E4C,KAAK,CAACG,EAApF,eAA2FH,KAAK,CAACM,SAANN,CAAgBO,UAA3G;;AAEA,yBAAOP,KAAP;AAbG,mBAeJQ,KAfI,CAeE,UAACC,GAAD,EAAS;AACdrD,uCAAYC,MAAZD,CAAmBE,KAAnBF,mEAAoFqD,GAApF;;AACA,wBAAMA,GAAN;AAjBG,kBA1CqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB,UAAP;AA8DD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,kBAASlD,OAAT,EAAkB;AAAA;;AAChB,UACEE,WADF,GAEIF,OAFJ,CACEE,WADF;AAAA,UACeiD,YADf,GAEInD,OAFJ,CACemD,YADf;AAAA,UAC6BC,OAD7B,GAEIpD,OAFJ,CAC6BoD,OAD7B;AAAA,UACsCrC,aADtC,GAEIf,OAFJ,CACsCe,aADtC;AAAA,UACqDsC,SADrD,GAEIrD,OAFJ,CACqDqD,SADrD;;AAIA,UAAI,CAACD,OAAL,EAAc;AACZvD,6BAAYC,MAAZD,CAAmBI,IAAnBJ,CAAwB,oEAAxBA;AACD;;AAED,UAAMyD,QAAQ,aAAMH,YAAN,cAAsBI,gBAAtB,CAAd;AACA,UAAMjD,SAAS,GAAG,KAAKE,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA7C;;AAEAd,2BAAYC,MAAZD,CAAmBI,IAAnBJ,qCAAqDyD,QAArD,iBAAoEpD,WAAW,CAACsD,WAAhF,qBAAsGtD,WAAW,CAACyC,GAAlH;;AAEAc,uBAAQC,SAARD,CAAkB;AAACE,aAAK,EAAEC,kBAAUC,aAAlB;AAAiCR,iBAAS,EAATA;AAAjC,OAAlBI;;AAEA,aAAO,KAAKjD,KAAL,CACJ2B,OADI,CACI;AACPI,WAAG,EAAEe,QADE;AAEPlB,cAAM,EAAEC,sBAAWyB,GAFZ;AAGPlD,YAAI,EAAE;AACJF,gBAAM,EAAE;AACNC,eAAG,EAAEL,SADC;AAENyD,sBAAU,EAAE,KAAKC,MAAL,CAAYC,QAAZ,CAAqBF;AAF3B,WADJ;AAKJhD,uBAAa,EAAbA,aALI;AAMJC,qBAAW,EAAE,CACX;AACE/B,oBAAQ,EAAE,wBAAe,KAAKgC,qBAAL,CAA2B;AAClDf,yBAAW,EAAXA,WADkD;AAElD;AACA;AACAgB,wBAAU,EAAE,CAAC,CAAClB,OAAO,CAACkB,UAJ4B;AAKlDC,wBAAU,EAAE,CAAC,CAACnB,OAAO,CAACmB;AAL4B,aAA3B,CAAf,CADZ;AAQEiC,mBAAO,EAAEpD,OAAO,CAACoD;AARnB,WADW,CANT;AAkBJhC,gCAAsB,EAAE;AACtBC,6BAAiB,4BAAErB,OAAO,CAACqB,iBAAV,2EAA+B;AAD1B;AAlBpB;AAHC,OADJ,EA2BJhB,IA3BI,CA2BC,UAACmC,GAAD,EAAS;AACbiB,yBAAQC,SAARD,CAAkB;AAACE,eAAK,EAAEC,kBAAUM,cAAlB;AAAkCb,mBAAS,EAATA;AAAlC,SAAlBI,EADa,CAGb;;;AACA,YAAMU,gBAAgB,GAAG3B,GAAG,CAAC5B,IAAJ4B,CAAS2B,gBAAT3B,IAA6BA,GAAG,CAAC5B,IAAJ4B,CAAS2B,gBAAT3B,CAA0B9C,MAA1B8C,GAAmC,CAAhEA,IAAqEA,GAAG,CAAC5B,IAAJ4B,CAAS2B,gBAAT3B,CAA0B,CAA1BA,CAA9F;;AAEA3C,6BAAYC,MAAZD,CAAmBI,IAAnBJ,8CACwC,wBAAesE,gBAAf,EAAiC,IAAjC,EAAuC,CAAvC,CADxC,6BACoG3B,GAAG,CAAC4B,UADxG;;AAGA,YAAO3B,KAAP,GAAgBD,GAAG,CAAC5B,IAAJ4B,CAATC,KAAP;AAEAA,aAAK,CAACC,OAAND,GAAgBzC,OAAO,CAACE,WAARF,CAAoB2C,GAApCF;AAEA;AACEA,eAAK,EAALA;AADF,WAEM0B,gBAAgB,IAAI;AAACA,0BAAgB,EAAE3B,GAAG,CAAC5B,IAAJ4B,CAAS2B;AAA5B,SAF1B;AAxCG,SA6CJlB,KA7CI,CA6CE,UAACC,GAAD,EAAS;AACdO,yBAAQC,SAARD,CAAkB;AAACE,eAAK,EAAEC,kBAAUM,cAAlB;AAAkCb,mBAAS,EAATA,SAAlC;AAA6CgB,cAAI,EAAE;AAACtE,iBAAK,EAAE0D,iBAAQa,eAARb,CAAwBP,GAAxBO,EAA6B,IAA7BA;AAAR;AAAnD,SAAlBA;;AACA5D,6BAAYC,MAAZD,CAAmBE,KAAnBF,2CAA4D,wBAAeqD,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAA5D;;AACArD,6BAAYC,MAAZD,CAAmBE,KAAnBF,sDACgD,wBAAeK,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CADhD,8BACwGF,OAAO,CAACoD,OADhH;;AAGA,cAAMF,GAAN;AAnDG,QAAP;AAqDD;;;EA/KsCqB,+B","names":["RoapRequest","localSdp","reachabilityData","window","localStorage","getItem","REACHABILITY","reachabilityResult","JSON","parse","length","reachability","e","LoggerProxy","logger","error","options","info","roapMessage","_promise","resolve","then","deviceUrl","_this","webex","internal","device","url","body","usingResource","resourceId","correlationId","localMedias","attachRechabilityData","audioMuted","videoMuted","clientMediaPreferences","preferTranscoding","locusUrl","_context","PARTICIPANT","sipUrl","services","waitForCatalog","get","LOCI","CALL","invitee","address","sipTarget","ParameterError","request","method","HTTP_VERBS","POST","uri","res","locus","roapSeq","seq","id","split","pop","fullState","lastActive","catch","err","locusSelfUrl","mediaId","meetingId","mediaUrl","MEDIA","messageType","Metrics","postEvent","event","eventType","MEDIA_REQUEST","PUT","deviceType","config","meetings","MEDIA_RESPONSE","mediaConnections","statusCode","data","parseLocusError","StatelessWebexPlugin"],"sources":["request.js"],"sourcesContent":["\n/* global window */\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  PARTICIPANT,\n  LOCI,\n  CALL,\n  MEDIA,\n  HTTP_VERBS,\n  REACHABILITY\n} from '../constants';\nimport Metrics from '../metrics';\nimport {eventType} from '../metrics/config';\nimport ParameterError from '../common/errors/parameter';\n/**\n * @class RoapRequest\n */\nexport default class RoapRequest extends StatelessWebexPlugin {\n  /**\n   * Joins a meeting via ROAP\n   * @param {Object} options\n   * @returns {Promise} returns a promise that resolves/rejects whatever the request does\n   */\n\n\n  attachRechabilityData(localSdp) {\n    const reachabilityData = window.localStorage.getItem(REACHABILITY.localStorage);\n\n    if (reachabilityData) {\n      try {\n        const reachabilityResult = JSON.parse(reachabilityData);\n\n        /* istanbul ignore else */\n        if (reachabilityResult && Object.keys(reachabilityResult).length) {\n          localSdp.reachability = reachabilityResult;\n        }\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`Roap:request#attachReachabilityData --> Error in parsing reachability data: ${e}`);\n      }\n    }\n\n    return localSdp;\n  }\n\n  joinMeetingWithRoap(options) {\n    LoggerProxy.logger.info('Roap:request#joinMeetingWithRoap --> Join locus with roap');\n    LoggerProxy.logger.info(`Roap:request#joinMeetingWithRoap --> Local SDP: ${options.roapMessage}`);\n\n    return Promise.resolve().then(async () => {\n      const deviceUrl = this.webex.internal.device.url;\n      let url = '';\n\n      const body = {\n        deviceUrl,\n        usingResource: options.resourceId || null,\n        correlationId: options.correlationId,\n        localMedias: [\n          {\n            localSdp: JSON.stringify(this.attachRechabilityData({\n              roapMessage: options.roapMessage,\n              audioMuted: false,\n              videoMuted: false\n            }))\n          }\n        ],\n        clientMediaPreferences: {\n          preferTranscoding: options.preferTranscoding ?? true\n        }\n      };\n\n      if (options.locusUrl) {\n        url = `${options.locusUrl}/${PARTICIPANT}`;\n      }\n      else if (options.sipUrl) {\n        try {\n          await this.webex.internal.services.waitForCatalog('postauth');\n          url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n          body.invitee = {\n            address: options.sipTarget\n          };\n        }\n        catch (e) {\n          LoggerProxy.logger.error(`Roap:request#joinMeetingWithRoap --> ${e}`);\n          throw (e);\n        }\n      }\n      else {\n        throw new ParameterError('Must provide a locusUrl or sipTarget');\n      }\n\n      return this.webex\n        .request({\n          method: HTTP_VERBS.POST,\n          uri: url,\n          body\n        })\n        .then((res) => {\n          const {locus} = res.body;\n\n          locus.roapSeq = options.roapMessage.seq;\n          locus.id = locus.url.split('/').pop();\n          LoggerProxy.logger.info(`Roap:request#joinMeetingWithRoap --> Joined locus [${locus.id}][${locus.fullState.lastActive}]`);\n\n          return locus;\n        })\n        .catch((err) => {\n          LoggerProxy.logger.error(`Roap:request#joinMeetingWithRoap --> failed with error: ${err}`);\n          throw err;\n        });\n    });\n  }\n\n  /**\n   * Sends a ROAP message\n   * @param {Object} options\n   * @param {String} options.roapMessage\n   * @param {String} options.locusId\n   * @param {String} options.locusSelfId\n   * @param {String} options.mediaId\n   * @param {String} options.correlationId\n   * @returns {Promise} returns the response/failure of the request\n   */\n  sendRoap(options) {\n    const {\n      roapMessage, locusSelfUrl, mediaId, correlationId, meetingId\n    } = options;\n\n    if (!mediaId) {\n      LoggerProxy.logger.info('Roap:request#sendRoap --> Race Condition /call mediaID not present');\n    }\n\n    const mediaUrl = `${locusSelfUrl}/${MEDIA}`;\n    const deviceUrl = this.webex.internal.device.url;\n\n    LoggerProxy.logger.info(`Roap:request#sendRoap --> ${mediaUrl} \\n ${roapMessage.messageType} \\n seq:${roapMessage.seq}`);\n\n    Metrics.postEvent({event: eventType.MEDIA_REQUEST, meetingId});\n\n    return this.webex\n      .request({\n        uri: mediaUrl,\n        method: HTTP_VERBS.PUT,\n        body: {\n          device: {\n            url: deviceUrl,\n            deviceType: this.config.meetings.deviceType\n          },\n          correlationId,\n          localMedias: [\n            {\n              localSdp: JSON.stringify(this.attachRechabilityData({\n                roapMessage,\n                // eslint-disable-next-line no-warning-comments\n                // TODO: check whats the need for video and audiomute\n                audioMuted: !!options.audioMuted,\n                videoMuted: !!options.videoMuted\n              })),\n              mediaId: options.mediaId\n            }\n          ],\n          clientMediaPreferences: {\n            preferTranscoding: options.preferTranscoding ?? true\n          }\n        }\n      })\n      .then((res) => {\n        Metrics.postEvent({event: eventType.MEDIA_RESPONSE, meetingId});\n\n        // always it will be the first mediaConnection Object\n        const mediaConnections = res.body.mediaConnections && res.body.mediaConnections.length > 0 && res.body.mediaConnections[0];\n\n        LoggerProxy.logger.info(\n          `Roap:request#sendRoap --> response:${JSON.stringify(mediaConnections, null, 2)}'\\n StatusCode:'${res.statusCode}`\n        );\n        const {locus} = res.body;\n\n        locus.roapSeq = options.roapMessage.seq;\n\n        return {\n          locus,\n          ...(mediaConnections && {mediaConnections: res.body.mediaConnections})\n        };\n      })\n      .catch((err) => {\n        Metrics.postEvent({event: eventType.MEDIA_RESPONSE, meetingId, data: {error: Metrics.parseLocusError(err, true)}});\n        LoggerProxy.logger.error(`Roap:request#sendRoap --> Error:${JSON.stringify(err, null, 2)}`);\n        LoggerProxy.logger.error(\n          `Roap:request#sendRoapRequest --> errorBody:${JSON.stringify(roapMessage, null, 2)} + '\\\\n mediaId:'${options.mediaId}`\n        );\n        throw err;\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}