{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = mixinWebexCorePlugins;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/define-property\"));\n\nvar _union2 = _interopRequireDefault(require(\"lodash/union\"));\n\nvar _merge2 = _interopRequireDefault(require(\"lodash/merge\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _has2 = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n/**\n * Mixes a plugin system into an AmpState object (specifically, into WebexCore)\n * @param {AmpState} State\n * @param {Object} config\n * @param {Object} interceptors\n * @returns {AmpState}\n */\n\n\nfunction mixinWebexCorePlugins(State, config, interceptors) {\n  // eslint-disable-next-line complexity\n  State.registerPlugin = function registerPlugin(name, constructor) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (State.prototype._children[name] && !options.replace) {\n      return;\n    }\n\n    State.prototype._children[name] = constructor;\n\n    if (options.proxies) {\n      options.proxies.forEach(function (key) {\n        createDerivedProperty(State.prototype, key, {\n          deps: [\"\".concat(name, \".\").concat(key)],\n          fn: function fn() {\n            return this[name][key];\n          }\n        });\n      });\n    }\n\n    if (options.interceptors) {\n      (0, _keys.default)(options.interceptors).forEach(function (key) {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      (0, _merge2.default)(config, options.config);\n    }\n\n    if ((0, _has2.default)(options, 'payloadTransformer.predicates')) {\n      config.payloadTransformer.predicates = config.payloadTransformer.predicates.concat((0, _get2.default)(options, 'payloadTransformer.predicates'));\n    }\n\n    if ((0, _has2.default)(options, 'payloadTransformer.transforms')) {\n      config.payloadTransformer.transforms = config.payloadTransformer.transforms.concat((0, _get2.default)(options, 'payloadTransformer.transforms'));\n    }\n\n    if (options.onBeforeLogout) {\n      config.onBeforeLogout = config.onBeforeLogout || [];\n      var onBeforeLogout = (0, _isArray2.default)(options.onBeforeLogout) ? options.onBeforeLogout : [options.onBeforeLogout];\n      onBeforeLogout.forEach(function (fn) {\n        return config.onBeforeLogout.push({\n          plugin: name,\n          fn: fn\n        });\n      });\n    } // Only mess with the plugin's derived properties if it's an amp-state plugin\n\n\n    if (constructor.prototype._definition && constructor.prototype._definition.ready) {\n      var _State$prototype$_der = State.prototype._derived.ready,\n          fn = _State$prototype$_der.fn,\n          depList = _State$prototype$_der.depList;\n      var def = {\n        deps: depList.concat(\"\".concat(name, \".ready\")),\n        fn: fn\n      };\n      createDerivedProperty(State.prototype, 'ready', def);\n    }\n  };\n\n  return State;\n}\n/**\n * Extracted from ampersand-state\n * @param {Object} modelProto\n * @param {string} name\n * @param {Object} definition\n * @private\n * @returns {undefined}\n */\n\n\nfunction createDerivedProperty(modelProto, name, definition) {\n  var def = modelProto._derived[name] = {\n    fn: (0, _isFunction2.default)(definition) ? definition : definition.fn,\n    cache: definition.cache !== false,\n    depList: definition.deps || []\n  }; // add to our shared dependency list\n\n  def.depList.forEach(function (dep) {\n    modelProto._deps[dep] = (0, _union2.default)(modelProto._deps[dep] || [], [name]);\n  }); // defined a top-level getter for derived names\n\n  (0, _defineProperty.default)(modelProto, name, {\n    get: function get() {\n      return this._getDerivedProperty(name);\n    },\n    set: function set() {\n      throw new TypeError(\"`\".concat(name, \"` is a derived property, it can't be set directly.\"));\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["mixinWebexCorePlugins","State","config","interceptors","registerPlugin","name","constructor","options","prototype","_children","replace","proxies","forEach","key","createDerivedProperty","deps","fn","payloadTransformer","predicates","concat","transforms","onBeforeLogout","push","plugin","_definition","ready","_derived","depList","def","modelProto","definition","cache","dep","_deps","get","_getDerivedProperty","set","TypeError"],"sources":["webex-core-plugin-mixin.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {get, has, isArray, isFunction, merge, union} from 'lodash';\n\n/**\n * Mixes a plugin system into an AmpState object (specifically, into WebexCore)\n * @param {AmpState} State\n * @param {Object} config\n * @param {Object} interceptors\n * @returns {AmpState}\n */\nexport default function mixinWebexCorePlugins(State, config, interceptors) {\n  // eslint-disable-next-line complexity\n  State.registerPlugin = function registerPlugin(name, constructor, options = {}) {\n    if (State.prototype._children[name] && !options.replace) {\n      return;\n    }\n\n    State.prototype._children[name] = constructor;\n\n    if (options.proxies) {\n      options.proxies.forEach((key) => {\n        createDerivedProperty(State.prototype, key, {\n          deps: [`${name}.${key}`],\n          fn() {\n            return this[name][key];\n          }\n        });\n      });\n    }\n\n    if (options.interceptors) {\n      Object.keys(options.interceptors).forEach((key) => {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      merge(config, options.config);\n    }\n\n    if (has(options, 'payloadTransformer.predicates')) {\n      config.payloadTransformer.predicates = config.payloadTransformer.predicates.concat(\n        get(options, 'payloadTransformer.predicates')\n      );\n    }\n\n    if (has(options, 'payloadTransformer.transforms')) {\n      config.payloadTransformer.transforms = config.payloadTransformer.transforms.concat(\n        get(options, 'payloadTransformer.transforms')\n      );\n    }\n\n    if (options.onBeforeLogout) {\n      config.onBeforeLogout = config.onBeforeLogout || [];\n      const onBeforeLogout = isArray(options.onBeforeLogout) ? options.onBeforeLogout : [options.onBeforeLogout];\n\n      onBeforeLogout.forEach((fn) =>\n        config.onBeforeLogout.push({\n          plugin: name,\n          fn\n        }));\n    }\n\n    // Only mess with the plugin's derived properties if it's an amp-state plugin\n    if (constructor.prototype._definition && constructor.prototype._definition.ready) {\n      const {fn, depList} = State.prototype._derived.ready;\n      const def = {\n        deps: depList.concat(`${name}.ready`),\n        fn\n      };\n\n      createDerivedProperty(State.prototype, 'ready', def);\n    }\n  };\n\n  return State;\n}\n\n/**\n * Extracted from ampersand-state\n * @param {Object} modelProto\n * @param {string} name\n * @param {Object} definition\n * @private\n * @returns {undefined}\n */\nfunction createDerivedProperty(modelProto, name, definition) {\n  const def = (modelProto._derived[name] = {\n    fn: isFunction(definition) ? definition : definition.fn,\n    cache: definition.cache !== false,\n    depList: definition.deps || []\n  });\n\n  // add to our shared dependency list\n  def.depList.forEach((dep) => {\n    modelProto._deps[dep] = union(modelProto._deps[dep] || [], [name]);\n  });\n\n  // defined a top-level getter for derived names\n  Reflect.defineProperty(modelProto, name, {\n    get() {\n      return this._getDerivedProperty(name);\n    },\n    set() {\n      throw new TypeError(`\\`${name}\\` is a derived property, it can't be set directly.`);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}