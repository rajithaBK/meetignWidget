{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _forEach2 = _interopRequireDefault(require(\"lodash/forEach\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _constants = require(\"../constants\");\n\nvar _stats = _interopRequireDefault(require(\"../stats/stats\"));\n\nvar _util = _interopRequireDefault(require(\"../stats/util\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * @class WebRTCStats\n */\n\n\nvar WebRTCStats = /*#__PURE__*/function (_StatelessWebexPlugin) {\n  (0, _inherits2.default)(WebRTCStats, _StatelessWebexPlugin);\n\n  var _super = _createSuper(WebRTCStats);\n  /**\n  *\n  * @param {Object} attrs\n  * @param {Object} options\n  * @param {Object} [optionalCreateOptions]\n  */\n\n\n  function WebRTCStats(attrs, options, optionalCreateOptions) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, WebRTCStats);\n    _this = _super.call(this, {}, options);\n    /**\n    * @instance\n    * @type {Object}\n    * @private\n    * @memberof WebRTCStats\n    */\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"namespace\", _constants.MEETINGS);\n    _this.attrs = attrs;\n    /**\n    * @instance\n    * @type {Object}\n    * @private\n    * @memberof WebRTCStats\n    */\n\n    _this.options = options;\n    /**\n    * @instance\n    * @type {Object}\n    * @public\n    * @memberof WebRTCStats\n    */\n\n    _this.senders = {};\n    /**\n    * @instance\n    * @type {Object}\n    * @public\n    * @memberof WebRTCStats\n    */\n\n    _this.receivers = {};\n    /**\n    * @instance\n    * @type {Meeting}\n    * @private\n    * @memberof WebRTCStats\n    */\n\n    _this.meetingRef = null;\n    /**\n    * @instance\n    * @type {Object}\n    * @public\n    * @memberof WebRTCStats\n    */\n\n    _this.statsConfig = null;\n\n    _this.populate(optionalCreateOptions);\n\n    return _this;\n  }\n  /**\n   * @param {Object} [optionalCreateOptions]\n   * @param {Object} optionalCreateOptions.config\n   * @param {Meeting} optionalCreateOptions.meeting\n   * @param {Object} optionalCreateOptions.senders\n   * @param {Object} optionalCreateOptions.receivers\n   * @returns {WebRTCStats}\n   * @private\n   * @memberof WebRTCStats\n   */\n\n\n  (0, _createClass2.default)(WebRTCStats, [{\n    key: \"populate\",\n    value: function populate(optionalCreateOptions) {\n      if (optionalCreateOptions) {\n        if (optionalCreateOptions.config) {\n          this.setConfig(optionalCreateOptions.config);\n        }\n\n        if (optionalCreateOptions.meeting) {\n          this.associateMeeting(optionalCreateOptions.meeting);\n        }\n\n        if (optionalCreateOptions.senders) {\n          this.addSenders(optionalCreateOptions.senders);\n        }\n\n        if (optionalCreateOptions.receivers) {\n          this.addReceivers(optionalCreateOptions.receivers);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * @param {Object} config\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.statsConfig = config;\n    }\n    /**\n     * @param {Meeting} meeting\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"associateMeeting\",\n    value: function associateMeeting(meeting) {\n      this.meetingRef = meeting;\n      return this;\n    }\n    /**\n     * @param {Object} senders\n     * @param {Boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"addSenders\",\n    value: function addSenders(senders) {\n      var _this2 = this;\n\n      var useConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!senders.forEach) {\n        throw new TypeError('Stats senders must be created with an iterable array of senders to act on.');\n      }\n\n      senders.forEach(function (sender) {\n        _this2.addSender(sender, useConfig);\n      });\n      return this;\n    }\n    /**\n     * @param {Object} sender\n     * @param {Boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"addSender\",\n    value: function addSender(sender) {\n      var useConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (sender) {\n        if (useConfig) {\n          _util.default.generateSingularOptions(sender, this.statsConfig, this.meetingRef, _constants.STATS.SENDERS);\n        }\n\n        sender.type = _constants.STATS.SENDER;\n        this.senders[sender.id] = new _stats.default(this.attrs, this.options, sender);\n      }\n\n      return this;\n    }\n    /**\n     *\n     * @param {String} id\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"addSenderStats\",\n    value: function addSenderStats(id) {\n      var newSender = new _stats.default(this.attrs, this.options);\n      this.senders[id] = newSender;\n      return newSender;\n    }\n    /**\n     *\n     * @param {String} id\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"addReceiverStats\",\n    value: function addReceiverStats(id) {\n      var newReceiver = new _stats.default(this.attrs, this.options);\n      this.receivers[id] = newReceiver;\n      return newReceiver;\n    }\n    /**\n     * @param {Object} receivers\n     * @param {boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"addReceivers\",\n    value: function addReceivers(receivers) {\n      var _this3 = this;\n\n      var useConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!receivers.forEach) {\n        throw new TypeError('Stats receivers must be created with an iterable array of receivers to act on.');\n      }\n\n      receivers.forEach(function (receiver) {\n        _this3.addReceiver(receiver, useConfig);\n      });\n      return this;\n    }\n    /**\n     * @param {Object} receiver\n     * @param {boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"addReceiver\",\n    value: function addReceiver(receiver) {\n      var useConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (receiver) {\n        if (useConfig) {\n          _util.default.generateSingularOptions(receiver, this.statsConfig, this.meetingRef, _constants.STATS.RECEIVERS);\n        }\n\n        receiver.type = _constants.STATS.RECEIVER;\n        this.receivers[receiver.id] = new _stats.default(this.attrs, this.options, receiver);\n      }\n\n      return this;\n    }\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"getReceivers\",\n    value: function getReceivers() {\n      return this.receivers;\n    }\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"getSenders\",\n    value: function getSenders() {\n      return this.senders;\n    }\n    /**\n     * @param {String} id\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"getSender\",\n    value: function getSender(id) {\n      return this.senders[id];\n    }\n    /**\n     * @param {String} id\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"getReceiver\",\n    value: function getReceiver(id) {\n      return this.receivers[id];\n    }\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"destroySenders\",\n    value: function destroySenders() {\n      var _this4 = this;\n\n      (0, _forEach2.default)(this.senders, function (v, k) {\n        _this4.destroySender(k);\n      });\n    }\n    /**\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"destroyReceivers\",\n    value: function destroyReceivers() {\n      var _this5 = this;\n\n      (0, _forEach2.default)(this.receivers, function (v, k) {\n        _this5.destroyReceiver(k);\n      });\n    }\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"destroySender\",\n    value: function destroySender(id) {\n      var sender = this.getSender(id);\n\n      if (sender) {\n        if (sender.stream) {\n          sender.stream.destroy();\n        }\n      }\n\n      sender = null;\n      delete this.receivers[id];\n    }\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n\n  }, {\n    key: \"destroyReceiver\",\n    value: function destroyReceiver(id) {\n      var receiver = this.getReceiver(id);\n\n      if (receiver) {\n        if (receiver.stream) {\n          receiver.stream.destroy();\n        }\n      }\n\n      receiver = null;\n      delete this.receivers[id];\n    }\n  }]);\n  return WebRTCStats;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = WebRTCStats;","map":{"version":3,"mappings":"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","names":["WebRTCStats","attrs","options","optionalCreateOptions","_this","MEETINGS","senders","receivers","meetingRef","statsConfig","populate","config","setConfig","meeting","associateMeeting","addSenders","addReceivers","useConfig","forEach","TypeError","sender","_this2","addSender","StatsUtil","generateSingularOptions","STATS","SENDERS","type","SENDER","id","MeetingStats","newSender","newReceiver","receiver","_this3","addReceiver","RECEIVERS","RECEIVER","v","k","_this4","destroySender","_this5","destroyReceiver","getSender","stream","destroy","getReceiver","StatelessWebexPlugin"],"sources":["index.js"],"sourcesContent":["import {forEach} from 'lodash';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {\n  MEETINGS,\n  STATS\n} from '../constants';\nimport MeetingStats from '../stats/stats';\nimport StatsUtil from '../stats/util';\n\n/**\n * @class WebRTCStats\n */\nexport default class WebRTCStats extends StatelessWebexPlugin {\n    namespace = MEETINGS;\n\n    /**\n    *\n    * @param {Object} attrs\n    * @param {Object} options\n    * @param {Object} [optionalCreateOptions]\n   */\n    constructor(attrs, options, optionalCreateOptions) {\n      super({}, options);\n      /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof WebRTCStats\n     */\n      this.attrs = attrs;\n      /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof WebRTCStats\n     */\n      this.options = options;\n      /**\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n      this.senders = {};\n      /**\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n      this.receivers = {};\n      /**\n     * @instance\n     * @type {Meeting}\n     * @private\n     * @memberof WebRTCStats\n     */\n      this.meetingRef = null;\n      /**\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n      this.statsConfig = null;\n      this.populate(optionalCreateOptions);\n    }\n\n    /**\n     * @param {Object} [optionalCreateOptions]\n     * @param {Object} optionalCreateOptions.config\n     * @param {Meeting} optionalCreateOptions.meeting\n     * @param {Object} optionalCreateOptions.senders\n     * @param {Object} optionalCreateOptions.receivers\n     * @returns {WebRTCStats}\n     * @private\n     * @memberof WebRTCStats\n     */\n    populate(optionalCreateOptions) {\n      if (optionalCreateOptions) {\n        if (optionalCreateOptions.config) {\n          this.setConfig(optionalCreateOptions.config);\n        }\n        if (optionalCreateOptions.meeting) {\n          this.associateMeeting(optionalCreateOptions.meeting);\n        }\n        if (optionalCreateOptions.senders) {\n          this.addSenders(optionalCreateOptions.senders);\n        }\n        if (optionalCreateOptions.receivers) {\n          this.addReceivers(optionalCreateOptions.receivers);\n        }\n      }\n\n      return this;\n    }\n\n    /**\n     * @param {Object} config\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    setConfig(config) {\n      this.statsConfig = config;\n    }\n\n    /**\n     * @param {Meeting} meeting\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    associateMeeting(meeting) {\n      this.meetingRef = meeting;\n\n      return this;\n    }\n\n    /**\n     * @param {Object} senders\n     * @param {Boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addSenders(senders, useConfig = false) {\n      if (!senders.forEach) {\n        throw new TypeError('Stats senders must be created with an iterable array of senders to act on.');\n      }\n      senders.forEach((sender) => {\n        this.addSender(sender, useConfig);\n      });\n\n      return this;\n    }\n\n    /**\n     * @param {Object} sender\n     * @param {Boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addSender(sender, useConfig = false) {\n      if (sender) {\n        if (useConfig) {\n          StatsUtil.generateSingularOptions(sender, this.statsConfig, this.meetingRef, STATS.SENDERS);\n        }\n        sender.type = STATS.SENDER;\n        this.senders[sender.id] = new MeetingStats(this.attrs, this.options, sender);\n      }\n\n      return this;\n    }\n\n    /**\n     *\n     * @param {String} id\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addSenderStats(id) {\n      const newSender = new MeetingStats(this.attrs, this.options);\n\n      this.senders[id] = newSender;\n\n      return newSender;\n    }\n\n    /**\n     *\n     * @param {String} id\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addReceiverStats(id) {\n      const newReceiver = new MeetingStats(this.attrs, this.options);\n\n      this.receivers[id] = newReceiver;\n\n      return newReceiver;\n    }\n\n    /**\n     * @param {Object} receivers\n     * @param {boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addReceivers(receivers, useConfig = false) {\n      if (!receivers.forEach) {\n        throw new TypeError('Stats receivers must be created with an iterable array of receivers to act on.');\n      }\n      receivers.forEach((receiver) => {\n        this.addReceiver(receiver, useConfig);\n      });\n\n      return this;\n    }\n\n    /**\n     * @param {Object} receiver\n     * @param {boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addReceiver(receiver, useConfig = false) {\n      if (receiver) {\n        if (useConfig) {\n          StatsUtil.generateSingularOptions(receiver, this.statsConfig, this.meetingRef, STATS.RECEIVERS);\n        }\n        receiver.type = STATS.RECEIVER;\n        this.receivers[receiver.id] = new MeetingStats(this.attrs, this.options, receiver);\n      }\n\n      return this;\n    }\n\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getReceivers() {\n      return this.receivers;\n    }\n\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getSenders() {\n      return this.senders;\n    }\n\n    /**\n     * @param {String} id\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getSender(id) {\n      return this.senders[id];\n    }\n\n    /**\n     * @param {String} id\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getReceiver(id) {\n      return this.receivers[id];\n    }\n\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroySenders() {\n      forEach(this.senders, (v, k) => {\n        this.destroySender(k);\n      });\n    }\n\n    /**\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroyReceivers() {\n      forEach(this.receivers, (v, k) => {\n        this.destroyReceiver(k);\n      });\n    }\n\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroySender(id) {\n      let sender = this.getSender(id);\n\n      if (sender) {\n        if (sender.stream) {\n          sender.stream.destroy();\n        }\n      }\n      sender = null;\n      delete this.receivers[id];\n    }\n\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroyReceiver(id) {\n      let receiver = this.getReceiver(id);\n\n      if (receiver) {\n        if (receiver.stream) {\n          receiver.stream.destroy();\n        }\n      }\n      receiver = null;\n      delete this.receivers[id];\n    }\n}\n"]},"metadata":{},"sourceType":"script"}