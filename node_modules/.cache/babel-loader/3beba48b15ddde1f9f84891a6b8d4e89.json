{"ast":null,"code":"\"use strict\";\n/**\r\n * Module convert fs functions to promise based functions\r\n */\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\rkanthet\\\\Documents\\\\test_window_object\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readFile = exports.writeFileSync = exports.writeFile = exports.read = exports.open = exports.close = exports.stat = exports.createReadStream = exports.pathExists = void 0;\n\nvar fs = require(\"fs\");\n\nexports.pathExists = fs.existsSync;\nexports.createReadStream = fs.createReadStream;\n\nfunction stat(_x) {\n  return _stat.apply(this, arguments);\n}\n\nfunction _stat() {\n  _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fs.stat(path, function (err, stats) {\n                if (err) reject(err);else resolve(stats);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _stat.apply(this, arguments);\n}\n\nexports.stat = stat;\n\nfunction close(_x2) {\n  return _close.apply(this, arguments);\n}\n\nfunction _close() {\n  _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fd) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fs.close(fd, function (err) {\n                if (err) reject(err);else resolve();\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _close.apply(this, arguments);\n}\n\nexports.close = close;\n\nfunction open(_x3, _x4) {\n  return _open.apply(this, arguments);\n}\n\nfunction _open() {\n  _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(path, mode) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fs.open(path, mode, function (err, fd) {\n                if (err) reject(err);else resolve(fd);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _open.apply(this, arguments);\n}\n\nexports.open = open;\n\nfunction read(_x5, _x6, _x7, _x8, _x9) {\n  return _read.apply(this, arguments);\n}\n\nfunction _read() {\n  _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(fd, buffer, offset, length, position) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fs.read(fd, buffer, offset, length, position, function (err, bytesRead, _buffer) {\n                if (err) reject(err);else resolve({\n                  bytesRead: bytesRead,\n                  buffer: _buffer\n                });\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _read.apply(this, arguments);\n}\n\nexports.read = read;\n\nfunction writeFile(_x10, _x11) {\n  return _writeFile.apply(this, arguments);\n}\n\nfunction _writeFile() {\n  _writeFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(path, data) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fs.writeFile(path, data, function (err) {\n                if (err) reject(err);else resolve();\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _writeFile.apply(this, arguments);\n}\n\nexports.writeFile = writeFile;\n\nfunction writeFileSync(path, data) {\n  fs.writeFileSync(path, data);\n}\n\nexports.writeFileSync = writeFileSync;\n\nfunction readFile(_x12) {\n  return _readFile.apply(this, arguments);\n}\n\nfunction _readFile() {\n  _readFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(path) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fs.readFile(path, function (err, buffer) {\n                if (err) reject(err);else resolve(buffer);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _readFile.apply(this, arguments);\n}\n\nexports.readFile = readFile;","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/strtok3/lib/FsPromise.js"],"names":["Object","defineProperty","exports","value","readFile","writeFileSync","writeFile","read","open","close","stat","createReadStream","pathExists","fs","require","existsSync","path","Promise","resolve","reject","err","stats","fd","mode","buffer","offset","length","position","bytesRead","_buffer","data"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * Module convert fs functions to promise based functions\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.readFile = exports.writeFileSync = exports.writeFile = exports.read = exports.open = exports.close = exports.stat = exports.createReadStream = exports.pathExists = void 0;\r\nconst fs = require(\"fs\");\r\nexports.pathExists = fs.existsSync;\r\nexports.createReadStream = fs.createReadStream;\r\nasync function stat(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.stat(path, (err, stats) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve(stats);\r\n        });\r\n    });\r\n}\r\nexports.stat = stat;\r\nasync function close(fd) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.close(fd, err => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve();\r\n        });\r\n    });\r\n}\r\nexports.close = close;\r\nasync function open(path, mode) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.open(path, mode, (err, fd) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve(fd);\r\n        });\r\n    });\r\n}\r\nexports.open = open;\r\nasync function read(fd, buffer, offset, length, position) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.read(fd, buffer, offset, length, position, (err, bytesRead, _buffer) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve({ bytesRead, buffer: _buffer });\r\n        });\r\n    });\r\n}\r\nexports.read = read;\r\nasync function writeFile(path, data) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.writeFile(path, data, err => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve();\r\n        });\r\n    });\r\n}\r\nexports.writeFile = writeFile;\r\nfunction writeFileSync(path, data) {\r\n    fs.writeFileSync(path, data);\r\n}\r\nexports.writeFileSync = writeFileSync;\r\nasync function readFile(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(path, (err, buffer) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve(buffer);\r\n        });\r\n    });\r\n}\r\nexports.readFile = readFile;\r\n"]},"metadata":{},"sourceType":"script"}