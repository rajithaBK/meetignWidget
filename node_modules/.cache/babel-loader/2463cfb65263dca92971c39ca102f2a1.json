{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _uuid = require(\"uuid\");\n\nvar _constants = require(\"../constants\");\n\nvar _history = _interopRequireDefault(require(\"../stats/history\"));\n\nvar _stream = _interopRequireDefault(require(\"../stats/stream\"));\n\nvar _filter = _interopRequireDefault(require(\"../stats/filter\"));\n\nvar _events = _interopRequireDefault(require(\"../stats/events\"));\n\nvar _stats = _interopRequireDefault(require(\"../common/errors/stats\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * @class MeetingStats\n */\n\n\nvar MeetingStats = /*#__PURE__*/function (_StatelessWebexPlugin) {\n  (0, _inherits2.default)(MeetingStats, _StatelessWebexPlugin);\n\n  var _super = _createSuper(MeetingStats);\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Object} [optionalCreateOptions]\n   * @param {Boolean} optionalCreateOptions.history\n   * @param {Boolean} optionalCreateOptions.mqa\n   * @param {RTCRtpSender|RTCRtpReceiver} optionalCreateOptions.stream\n   * @param {RTCRtpSender|RTCRtpReceiver} optionalCreateOptions.filter\n   * @param {RTCPeerConnection} optionalCreateOptions.media\n   * @param {String} optionalCreateOptions.id\n   * @param {Function} optionalCreateOptions.onClose\n   * @param {Function} optionalCreateOptions.onEvent\n   * @param {Function} optionalCreateOptions.onData\n   * if using filter or stream, media must also exist\n   */\n\n\n  function MeetingStats(attrs, options, optionalCreateOptions) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MeetingStats);\n    _this = _super.call(this, {}, options);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"namespace\", _constants.MEETINGS);\n    _this.attrs = attrs;\n    _this.options = options; // what this stats object is configured to work with\n\n    /**\n     * @instance\n     * @type {RTCPeerConnection}\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.peerConnection = null;\n    /**\n     * @instance\n     * @type {RTCRtpSender|RTCRtpReceiver}\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.RTCRtpDirection = null; // usable values\n\n    /**\n     * @instance\n     * @type {StatsHistory}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.history = null;\n    /**\n     * @instance\n     * @type {StatsHistory}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.mqa = null;\n    /**\n     * @instance\n     * @type {ReadableStream}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.stream = null;\n    /**\n     * @instance\n     * @type {TransformStream}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.filter = null;\n    /**\n     * @instance\n     * @type {StatsEvents}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.events = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n\n    _this.id = null;\n\n    _this.populate(optionalCreateOptions);\n\n    return _this;\n  }\n  /**\n   * @param {Object} [optionalCreateOptions]\n   * @returns {undefined}\n   * @private\n   * @memberof MeetingStats\n   */\n\n\n  (0, _createClass2.default)(MeetingStats, [{\n    key: \"populate\",\n    value: function populate(optionalCreateOptions) {\n      if (optionalCreateOptions) {\n        if (optionalCreateOptions.history) {\n          this.withHistory();\n        }\n\n        if (optionalCreateOptions.mqa) {\n          this.withMQA();\n        }\n\n        if (optionalCreateOptions.filter && !optionalCreateOptions.stream && optionalCreateOptions.media) {\n          this.withFilter(optionalCreateOptions.filter, optionalCreateOptions.media);\n        }\n\n        if (optionalCreateOptions.stream && !optionalCreateOptions.filter && optionalCreateOptions.media) {\n          this.withStream(optionalCreateOptions.stream, optionalCreateOptions.media);\n        }\n\n        if (optionalCreateOptions.id) {\n          this.withId(optionalCreateOptions.id);\n        }\n\n        if (optionalCreateOptions.onClose) {\n          if (!(0, _isFunction2.default)(optionalCreateOptions.onClose)) {\n            throw new TypeError('stats->populate#onClose must be a callback function for filtered data.');\n          }\n\n          this.onClose(optionalCreateOptions.onClose);\n        }\n\n        if (optionalCreateOptions.onEvent) {\n          if (!(0, _isFunction2.default)(optionalCreateOptions.onEvent)) {\n            throw new TypeError('stats->populate#onEvent must be a callback function for filtered data.');\n          }\n\n          if (this.history) {\n            this.withEventsHistory(this.history, optionalCreateOptions.onEvent);\n          } else {\n            this.withEvents(optionalCreateOptions.onEvent);\n          }\n        }\n\n        if (optionalCreateOptions.onData) {\n          if (!(0, _isFunction2.default)(optionalCreateOptions.onData)) {\n            throw new TypeError('stats->populate#onData must be a callback function for filtered data.');\n          }\n\n          this.onData(optionalCreateOptions.onData);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * @param {WebRTCData} data\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"doHistory\",\n    value: function doHistory(data) {\n      if (this.history) {\n        this.history.add(data);\n      }\n    }\n    /**\n     * @param {WebRTCData} data\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"doMQA\",\n    value: function doMQA(data) {\n      if (this.mqa && data.data) {\n        if (!data.data.isEmpty()) {\n          this.mqa.add(data.data.omit());\n        }\n      }\n    }\n    /**\n     * @param {WebRTCData} data\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"doEvents\",\n    value: function doEvents(data) {\n      if (this.events) {\n        this.events.event(data);\n      }\n    }\n    /**\n     * does all the work for the built properties\n     * calls back a function with data from piped stream filter\n     * @param {Function} cbFn\n     * @returns {undefined}\n     * @throws {Error} if the filter stream does not exist\n     * @private\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(cbFn) {\n      var _this2 = this;\n\n      if (!this.filter) {\n        throw new TypeError('The stats sender/receiver filter must be set up before data can be processed.');\n      }\n\n      this.filter.on(_constants.STATS.DATA, function (filtered) {\n        _this2.doHistory(filtered);\n\n        _this2.doMQA(filtered);\n\n        _this2.doEvents(filtered);\n\n        cbFn(filtered);\n      });\n      return this;\n    }\n    /**\n     * triggered if the data stream closes\n     * calls back a function with error\n     * @param {Function} cbFn\n     * @returns {undefined}\n     * @private\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(cbFn) {\n      var _this3 = this;\n\n      if (!this.filter) {\n        throw new TypeError('the stats sender/receiver filter must be set up before data can be closed.');\n      }\n\n      this.stream.on(_constants.STATS.END, function (err) {\n        if (!err) {\n          err = new _stats.default(\"The stats stream for id: \".concat(_this3.id, \" ended.\"));\n        }\n\n        cbFn(err);\n      });\n      return this;\n    }\n    /**\n     * constructs an event object on this instance\n     * @param {StatsHistory} history\n     * @param {Function} cb\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withEventsHistory\",\n    value: function withEventsHistory(history, cb) {\n      var events = new _events.default(history, cb);\n      this.setEvents(events);\n      return this;\n    }\n    /**\n     * constructs an event object on this instance\n     * @param {Function} cb\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withEvents\",\n    value: function withEvents(cb) {\n      var events = new _events.default(null, cb);\n      this.setEvents(events);\n      return this;\n    }\n    /**\n     * constructs a history object on this instance\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withHistory\",\n    value: function withHistory() {\n      var history = new _history.default(this.config.stats.historyMax);\n      this.setHistory(history);\n      return this;\n    }\n    /**\n     * constructs a history object on this instance\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withMQA\",\n    value: function withMQA() {\n      var mqa = new _history.default(_constants.MQA_STATS.MQA_SIZE);\n      this.setMQA(mqa);\n      return this;\n    }\n    /**\n     * constructs a readable stream object on this instance\n     * @param {RTCRtpReceiver|RTCRtpSender} transceiverDirection\n     * @param {RTCPeerConnection} peerConnection\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withStream\",\n    value: function withStream(transceiverDirection, peerConnection) {\n      var stream = new _stream.default({\n        rTCRtpDirection: transceiverDirection,\n        peerConnection: peerConnection,\n        interval: this.config.stats.interval\n      });\n      this.setStream(stream);\n      return this;\n    }\n    /**\n     * @param {RTCRtpReceiver|RTCRtpSender} transceiverDirection\n     * @param {RTCPeerConnection} peerConnection\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withFilter\",\n    value: function withFilter(transceiverDirection, peerConnection) {\n      this.withStream(transceiverDirection, peerConnection);\n      this.setFilter(new _filter.default());\n      this.getStream().pipe(this.getFilter());\n      return this;\n    }\n    /**\n     * constructs an id to match this stats object\n     * takes params as precedence\n     * @param {String} id\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"withId\",\n    value: function withId(id) {\n      if (id) {\n        this.setId(id);\n      } else {\n        this.setId(_uuid.uuid.v4());\n      }\n\n      return this;\n    }\n    /**\n     * @returns {MeetingStats}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"build\",\n    value: function build() {\n      return this;\n    }\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"setId\",\n    value: function setId(id) {\n      this.id = id;\n    }\n    /**\n     * @param {StatsHistory} history\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"setHistory\",\n    value: function setHistory(history) {\n      this.history = history;\n    }\n    /**\n     * @param {StatsHistory} mqa\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"setMQA\",\n    value: function setMQA(mqa) {\n      this.mqa = mqa;\n    }\n    /**\n     * @param {StatsEvent} events\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"setEvents\",\n    value: function setEvents(events) {\n      this.events = events;\n    }\n    /**\n     * @param {Readable} stream\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"setStream\",\n    value: function setStream(stream) {\n      this.stream = stream;\n    }\n    /**\n     * @param {Transform} filter\n     * @returns {undefined}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.filter = filter;\n    }\n    /**\n     * @returns {String}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.id;\n    }\n    /**\n     * @returns {StatsHistory}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"getHistory\",\n    value: function getHistory() {\n      return this.history;\n    }\n    /**\n     * @returns {StatsHistory}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"getMQA\",\n    value: function getMQA() {\n      return this.mqa;\n    }\n    /**\n     * @returns {StatsEvents}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"getEvents\",\n    value: function getEvents() {\n      return this.events;\n    }\n    /**\n     * @returns {Readable}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"getStream\",\n    value: function getStream() {\n      return this.stream;\n    }\n    /**\n     * @returns {Transform}\n     * @public\n     * @memberof MeetingStats\n     */\n\n  }, {\n    key: \"getFilter\",\n    value: function getFilter() {\n      return this.filter;\n    }\n  }]);\n  return MeetingStats;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = MeetingStats;","map":{"version":3,"mappings":"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,gBAAOpD,EAAP,EAAW;AACT,UAAIA,EAAJ,EAAQ;AACN,aAAKqD,KAAL,CAAWrD,EAAX;AADF,aAGK;AACH,aAAKqD,KAAL,CAAWC,WAAKC,EAALD,EAAX;AACD;;AAED,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,iBAAQ;AACN,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,eAAMtD,EAAN,EAAU;AACR,WAAKA,EAAL,GAAUA,EAAV;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,oBAAWL,OAAX,EAAoB;AAClB,WAAKA,OAAL,GAAeA,OAAf;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,gBAAOC,GAAP,EAAY;AACV,WAAKA,GAAL,GAAWA,GAAX;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,mBAAUG,MAAV,EAAkB;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,mBAAUF,MAAV,EAAkB;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,mBAAUC,MAAV,EAAkB;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,iBAAQ;AACN,aAAO,KAAKE,EAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,sBAAa;AACX,aAAO,KAAKL,OAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,kBAAS;AACP,aAAO,KAAKC,GAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,qBAAY;AACV,aAAO,KAAKG,MAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,qBAAY;AACV,aAAO,KAAKF,MAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,qBAAY;AACV,aAAO,KAAKC,MAAZ;AACD;;;EAzcuC0D,+B","names":["MeetingStats","attrs","options","optionalCreateOptions","_this","MEETINGS","peerConnection","RTCRtpDirection","history","mqa","stream","filter","events","id","populate","withHistory","withMQA","media","withFilter","withStream","withId","onClose","TypeError","onEvent","withEventsHistory","withEvents","onData","data","add","isEmpty","omit","event","cbFn","on","STATS","DATA","filtered","_this2","doHistory","doMQA","doEvents","END","err","StatsError","_this3","cb","StatsEvents","setEvents","StatsHistory","config","stats","historyMax","setHistory","MQA_STATS","MQA_SIZE","setMQA","transceiverDirection","StatsStream","rTCRtpDirection","interval","setStream","setFilter","StatsFilter","getStream","pipe","getFilter","setId","uuid","v4","StatelessWebexPlugin"],"sources":["stats.js"],"sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\nimport {isFunction} from 'lodash';\nimport {uuid} from 'uuid';\n\nimport {\n  MEETINGS,\n  STATS,\n  MQA_STATS\n} from '../constants';\nimport StatsHistory from '../stats/history';\nimport StatsStream from '../stats/stream';\nimport StatsFilter from '../stats/filter';\nimport StatsEvents from '../stats/events';\nimport StatsError from '../common/errors/stats';\n\n/**\n * @class MeetingStats\n */\nexport default class MeetingStats extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Object} [optionalCreateOptions]\n   * @param {Boolean} optionalCreateOptions.history\n   * @param {Boolean} optionalCreateOptions.mqa\n   * @param {RTCRtpSender|RTCRtpReceiver} optionalCreateOptions.stream\n   * @param {RTCRtpSender|RTCRtpReceiver} optionalCreateOptions.filter\n   * @param {RTCPeerConnection} optionalCreateOptions.media\n   * @param {String} optionalCreateOptions.id\n   * @param {Function} optionalCreateOptions.onClose\n   * @param {Function} optionalCreateOptions.onEvent\n   * @param {Function} optionalCreateOptions.onData\n   * if using filter or stream, media must also exist\n   */\n  constructor(attrs, options, optionalCreateOptions) {\n    super({}, options);\n    this.attrs = attrs;\n    this.options = options;\n    // what this stats object is configured to work with\n    /**\n     * @instance\n     * @type {RTCPeerConnection}\n     * @private\n     * @memberof MeetingStats\n     */\n    this.peerConnection = null;\n    /**\n     * @instance\n     * @type {RTCRtpSender|RTCRtpReceiver}\n     * @private\n     * @memberof MeetingStats\n     */\n    this.RTCRtpDirection = null;\n    // usable values\n    /**\n     * @instance\n     * @type {StatsHistory}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.history = null;\n    /**\n     * @instance\n     * @type {StatsHistory}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.mqa = null;\n    /**\n     * @instance\n     * @type {ReadableStream}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.stream = null;\n    /**\n     * @instance\n     * @type {TransformStream}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.filter = null;\n    /**\n     * @instance\n     * @type {StatsEvents}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.events = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.id = null;\n    this.populate(optionalCreateOptions);\n  }\n\n  /**\n   * @param {Object} [optionalCreateOptions]\n   * @returns {undefined}\n   * @private\n   * @memberof MeetingStats\n   */\n  populate(optionalCreateOptions) {\n    if (optionalCreateOptions) {\n      if (optionalCreateOptions.history) {\n        this.withHistory();\n      }\n      if (optionalCreateOptions.mqa) {\n        this.withMQA();\n      }\n      if (optionalCreateOptions.filter && !optionalCreateOptions.stream && optionalCreateOptions.media) {\n        this.withFilter(optionalCreateOptions.filter, optionalCreateOptions.media);\n      }\n      if (optionalCreateOptions.stream && !optionalCreateOptions.filter && optionalCreateOptions.media) {\n        this.withStream(optionalCreateOptions.stream, optionalCreateOptions.media);\n      }\n      if (optionalCreateOptions.id) {\n        this.withId(optionalCreateOptions.id);\n      }\n      if (optionalCreateOptions.onClose) {\n        if (!isFunction(optionalCreateOptions.onClose)) {\n          throw new TypeError('stats->populate#onClose must be a callback function for filtered data.');\n        }\n        this.onClose(optionalCreateOptions.onClose);\n      }\n      if (optionalCreateOptions.onEvent) {\n        if (!isFunction(optionalCreateOptions.onEvent)) {\n          throw new TypeError('stats->populate#onEvent must be a callback function for filtered data.');\n        }\n        if (this.history) {\n          this.withEventsHistory(this.history, optionalCreateOptions.onEvent);\n        }\n        else {\n          this.withEvents(optionalCreateOptions.onEvent);\n        }\n      }\n      if (optionalCreateOptions.onData) {\n        if (!isFunction(optionalCreateOptions.onData)) {\n          throw new TypeError('stats->populate#onData must be a callback function for filtered data.');\n        }\n        this.onData(optionalCreateOptions.onData);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  doHistory(data) {\n    if (this.history) {\n      this.history.add(data);\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  doMQA(data) {\n    if (this.mqa && data.data) {\n      if (!data.data.isEmpty()) {\n        this.mqa.add(data.data.omit());\n      }\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  doEvents(data) {\n    if (this.events) {\n      this.events.event(data);\n    }\n  }\n\n  /**\n   * does all the work for the built properties\n   * calls back a function with data from piped stream filter\n   * @param {Function} cbFn\n   * @returns {undefined}\n   * @throws {Error} if the filter stream does not exist\n   * @private\n   * @memberof MeetingStats\n   */\n  onData(cbFn) {\n    if (!this.filter) {\n      throw new TypeError('The stats sender/receiver filter must be set up before data can be processed.');\n    }\n    this.filter.on(STATS.DATA, (filtered) => {\n      this.doHistory(filtered);\n      this.doMQA(filtered);\n      this.doEvents(filtered);\n      cbFn(filtered);\n    });\n\n    return this;\n  }\n\n  /**\n   * triggered if the data stream closes\n   * calls back a function with error\n   * @param {Function} cbFn\n   * @returns {undefined}\n   * @private\n   * @memberof MeetingStats\n   */\n  onClose(cbFn) {\n    if (!this.filter) {\n      throw new TypeError('the stats sender/receiver filter must be set up before data can be closed.');\n    }\n    this.stream.on(STATS.END, (err) => {\n      if (!err) {\n        err = new StatsError(`The stats stream for id: ${this.id} ended.`);\n      }\n      cbFn(err);\n    });\n\n    return this;\n  }\n\n  /**\n   * constructs an event object on this instance\n   * @param {StatsHistory} history\n   * @param {Function} cb\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withEventsHistory(history, cb) {\n    const events = new StatsEvents(history, cb);\n\n    this.setEvents(events);\n\n    return this;\n  }\n\n  /**\n   * constructs an event object on this instance\n   * @param {Function} cb\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withEvents(cb) {\n    const events = new StatsEvents(null, cb);\n\n    this.setEvents(events);\n\n    return this;\n  }\n\n  /**\n   * constructs a history object on this instance\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withHistory() {\n    const history = new StatsHistory(this.config.stats.historyMax);\n\n    this.setHistory(history);\n\n    return this;\n  }\n\n  /**\n   * constructs a history object on this instance\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withMQA() {\n    const mqa = new StatsHistory(MQA_STATS.MQA_SIZE);\n\n    this.setMQA(mqa);\n\n    return this;\n  }\n\n  /**\n   * constructs a readable stream object on this instance\n   * @param {RTCRtpReceiver|RTCRtpSender} transceiverDirection\n   * @param {RTCPeerConnection} peerConnection\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withStream(transceiverDirection, peerConnection) {\n    const stream = new StatsStream({\n      rTCRtpDirection: transceiverDirection,\n      peerConnection,\n      interval: this.config.stats.interval\n    });\n\n    this.setStream(stream);\n\n    return this;\n  }\n\n  /**\n   * @param {RTCRtpReceiver|RTCRtpSender} transceiverDirection\n   * @param {RTCPeerConnection} peerConnection\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withFilter(transceiverDirection, peerConnection) {\n    this.withStream(transceiverDirection, peerConnection);\n    this.setFilter(new StatsFilter());\n    this.getStream().pipe(this.getFilter());\n\n    return this;\n  }\n\n  /**\n   * constructs an id to match this stats object\n   * takes params as precedence\n   * @param {String} id\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withId(id) {\n    if (id) {\n      this.setId(id);\n    }\n    else {\n      this.setId(uuid.v4());\n    }\n\n    return this;\n  }\n\n  /**\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  build() {\n    return this;\n  }\n\n  /**\n   * @param {String} id\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setId(id) {\n    this.id = id;\n  }\n\n  /**\n   * @param {StatsHistory} history\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setHistory(history) {\n    this.history = history;\n  }\n\n  /**\n   * @param {StatsHistory} mqa\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setMQA(mqa) {\n    this.mqa = mqa;\n  }\n\n  /**\n   * @param {StatsEvent} events\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setEvents(events) {\n    this.events = events;\n  }\n\n  /**\n   * @param {Readable} stream\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setStream(stream) {\n    this.stream = stream;\n  }\n\n  /**\n   * @param {Transform} filter\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setFilter(filter) {\n    this.filter = filter;\n  }\n\n  /**\n   * @returns {String}\n   * @public\n   * @memberof MeetingStats\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * @returns {StatsHistory}\n   * @public\n   * @memberof MeetingStats\n   */\n  getHistory() {\n    return this.history;\n  }\n\n  /**\n   * @returns {StatsHistory}\n   * @public\n   * @memberof MeetingStats\n   */\n  getMQA() {\n    return this.mqa;\n  }\n\n  /**\n   * @returns {StatsEvents}\n   * @public\n   * @memberof MeetingStats\n   */\n  getEvents() {\n    return this.events;\n  }\n\n  /**\n   * @returns {Readable}\n   * @public\n   * @memberof MeetingStats\n   */\n  getStream() {\n    return this.stream;\n  }\n\n  /**\n   * @returns {Transform}\n   * @public\n   * @memberof MeetingStats\n   */\n  getFilter() {\n    return this.filter;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}