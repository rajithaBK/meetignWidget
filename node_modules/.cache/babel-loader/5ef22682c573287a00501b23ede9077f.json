{"ast":null,"code":"'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar stringify = require('safe-stable-stringify');\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\n\n\nfunction replacer(key, value) {\n  // safe-stable-stringify does support BigInt, however, it doesn't wrap the value in quotes.\n  // Leading to a loss in fidelity if the resulting string is parsed.\n  // It would also be a breaking change for logform.\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = format(function (info, opts) {\n  var jsonStringify = stringify.configure(opts);\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/logform/dist/json.js"],"names":["format","require","_require","MESSAGE","stringify","replacer","key","value","toString","module","exports","info","opts","jsonStringify","configure","space"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIE,OAAO,GAAGD,QAAQ,CAACC,OADvB;;AAGA,IAAIC,SAAS,GAAGH,OAAO,CAAC,uBAAD,CAAvB;AACA;AACA;AACA;AACA;;;AAGA,SAASI,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B;AACA;AACA;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAK,CAACC,QAAN,EAAP;AAC/B,SAAOD,KAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGAE,MAAM,CAACC,OAAP,GAAiBV,MAAM,CAAC,UAAUW,IAAV,EAAgBC,IAAhB,EAAsB;AAC5C,MAAIC,aAAa,GAAGT,SAAS,CAACU,SAAV,CAAoBF,IAApB,CAApB;AACAD,EAAAA,IAAI,CAACR,OAAD,CAAJ,GAAgBU,aAAa,CAACF,IAAD,EAAOC,IAAI,CAACP,QAAL,IAAiBA,QAAxB,EAAkCO,IAAI,CAACG,KAAvC,CAA7B;AACA,SAAOJ,IAAP;AACD,CAJsB,CAAvB","sourcesContent":["'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar stringify = require('safe-stable-stringify');\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\n\n\nfunction replacer(key, value) {\n  // safe-stable-stringify does support BigInt, however, it doesn't wrap the value in quotes.\n  // Leading to a loss in fidelity if the resulting string is parsed.\n  // It would also be a breaking change for logform.\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = format(function (info, opts) {\n  var jsonStringify = stringify.configure(opts);\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});"]},"metadata":{},"sourceType":"script"}