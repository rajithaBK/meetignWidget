{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _debounce2 = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _common = require(\"@webex/common\");\n\nvar _loggerProxy = _interopRequireDefault(require(\"../common/logs/logger-proxy\"));\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * @class MeetingRequest\n */\n\n\nvar MeetingRequest = /*#__PURE__*/function (_StatelessWebexPlugin) {\n  (0, _inherits2.default)(MeetingRequest, _StatelessWebexPlugin);\n\n  var _super = _createSuper(MeetingRequest);\n\n  function MeetingRequest(attrs, options) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MeetingRequest);\n    _this = _super.call(this, attrs, options);\n    _this.changeVideoLayoutDebounced = (0, _debounce2.default)(_this.changeVideoLayout, 2000, {\n      leading: true,\n      trailing: true\n    });\n    return _this;\n  }\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @param {boolean} options.ensureConversation\n   * @param {boolean} options.moderator\n   * @param {boolean} options.pin\n   * @param {boolean} options.moveToResource\n   * @param {Object} options.roapMessage\n   * @returns {Promise}\n   */\n\n\n  (0, _createClass2.default)(MeetingRequest, [{\n    key: \"joinMeeting\",\n    value: function () {\n      var _joinMeeting = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(options) {\n        var asResourceOccupant, inviteeAddress, meetingNumber, permissionToken, deviceUrl, locusUrl, resourceId, correlationId, ensureConversation, moderator, pin, moveToResource, roapMessage, preferTranscoding, url, body;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                asResourceOccupant = options.asResourceOccupant, inviteeAddress = options.inviteeAddress, meetingNumber = options.meetingNumber, permissionToken = options.permissionToken, deviceUrl = options.deviceUrl, locusUrl = options.locusUrl, resourceId = options.resourceId, correlationId = options.correlationId, ensureConversation = options.ensureConversation, moderator = options.moderator, pin = options.pin, moveToResource = options.moveToResource, roapMessage = options.roapMessage, preferTranscoding = options.preferTranscoding;\n\n                _loggerProxy.default.logger.info('Meeting:request#joinMeeting --> Joining a meeting', correlationId);\n\n                url = '';\n                body = {\n                  asResourceOccupant: asResourceOccupant,\n                  device: {\n                    url: deviceUrl,\n                    deviceType: this.config.meetings.deviceType\n                  },\n                  usingResource: resourceId || null,\n                  moveMediaToResource: resourceId && moveToResource || false,\n                  correlationId: correlationId,\n                  respOnlySdp: true,\n                  allowMultiDevice: true,\n                  ensureConversation: ensureConversation || false,\n                  supportsNativeLobby: 1,\n                  clientMediaPreferences: {\n                    preferTranscoding: preferTranscoding !== null && preferTranscoding !== void 0 ? preferTranscoding : true\n                  }\n                };\n\n                if (this.webex.meetings.clientRegion) {\n                  body.device.countryCode = this.webex.meetings.clientRegion.countryCode;\n                  body.device.regionCode = this.webex.meetings.clientRegion.regionCode;\n                }\n\n                if (moderator !== undefined) {\n                  body.moderator = moderator;\n                }\n\n                if (permissionToken) {\n                  body.permissionToken = permissionToken;\n                }\n\n                if (pin !== undefined) {\n                  body.pin = pin;\n                }\n\n                if (!locusUrl) {\n                  _context.next = 12;\n                  break;\n                }\n\n                url = \"\".concat(locusUrl, \"/\").concat(_constants.PARTICIPANT);\n                _context.next = 24;\n                break;\n\n              case 12:\n                if (!(inviteeAddress || meetingNumber)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                _context.prev = 13;\n                _context.next = 16;\n                return this.webex.internal.services.waitForCatalog('postauth');\n\n              case 16:\n                url = \"\".concat(this.webex.internal.services.get('locus'), \"/\").concat(_constants.LOCI, \"/\").concat(_constants.CALL);\n                body.invitee = {\n                  address: inviteeAddress || \"wbxmn:\".concat(meetingNumber)\n                };\n                _context.next = 24;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](13);\n\n                _loggerProxy.default.logger.error(\"Meeting:request#joinMeeting Error Joining \".concat(inviteeAddress || meetingNumber, \" --> \").concat(_context.t0));\n\n                throw _context.t0;\n\n              case 24:\n                // TODO: -- this will be resolved in SDK request\n                url = url.concat(\"?\".concat(_constants.ALTERNATE_REDIRECT_TRUE));\n\n                if (resourceId === inviteeAddress) {\n                  body.callPreferences = {\n                    requestedMedia: [_constants._SLIDES_]\n                  };\n                }\n\n                if (roapMessage) {\n                  body.localMedias = roapMessage.localMedias;\n                }\n\n                return _context.abrupt(\"return\", this.request({\n                  method: _constants.HTTP_VERBS.POST,\n                  uri: url,\n                  body: body\n                }));\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[13, 20]]);\n      }));\n\n      function joinMeeting(_x) {\n        return _joinMeeting.apply(this, arguments);\n      }\n\n      return joinMeeting;\n    }()\n    /**\n     * Send a request to refresh the captcha\n     * @param {Object} options\n     * @param {String} options.captchaRefreshUrl\n     * @param {String} options.captchaId\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: \"refreshCaptcha\",\n    value: function refreshCaptcha(_ref) {\n      var captchaRefreshUrl = _ref.captchaRefreshUrl,\n          captchaId = _ref.captchaId;\n      var body = {\n        captchaId: captchaId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.POST,\n        uri: captchaRefreshUrl,\n        body: body\n      }).catch(function (err) {\n        _loggerProxy.default.logger.error(\"Meeting:request#refreshCaptcha --> Error: \".concat(err));\n\n        throw err;\n      });\n    }\n    /**\n     * Make a network request to add a dial in device\n     * @param {Object} options\n     * @param {String} options.correlationId\n     * @param {String} options.localUrl url for the meeting\n     * @param {String} options.dialInUrl identifier for the to-be provisioned device\n     * @param {String} options.clientUrl identifier for the web device\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: \"dialIn\",\n    value: function dialIn(_ref2) {\n      var locusUrl = _ref2.locusUrl,\n          dialInUrl = _ref2.dialInUrl,\n          clientUrl = _ref2.clientUrl,\n          correlationId = _ref2.correlationId;\n\n      _loggerProxy.default.logger.info('Meeting:request#dialIn --> Provisioning a dial in device', correlationId);\n\n      var uri = \"\".concat(locusUrl, \"/\").concat(_constants.PARTICIPANT);\n      var body = {\n        device: {\n          deviceType: _common.deviceType.PROVISIONAL,\n          provisionalType: _constants.PROVISIONAL_TYPE_DIAL_IN,\n          url: dialInUrl,\n          clientUrl: clientUrl\n        },\n        correlationId: correlationId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.POST,\n        uri: uri,\n        body: body\n      }).catch(function (err) {\n        _loggerProxy.default.logger.error(\"Meeting:request#dialIn --> Error provisioning a dial in device, error \".concat(err));\n\n        throw err;\n      });\n    }\n    /**\n     * Make a network request to add a dial out device\n     * @param {Object} options\n     * @param {String} options.correlationId\n     * @param {String} options.localUrl url for the meeting\n     * @param {String} options.dialOutUrl identifier for the to-be provisioned device\n     * @param {String} options.phoneNumber phone number to dial out to\n     * @param {String} options.clientUrl identifier for the web device\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: \"dialOut\",\n    value: function dialOut(_ref3) {\n      var locusUrl = _ref3.locusUrl,\n          dialOutUrl = _ref3.dialOutUrl,\n          phoneNumber = _ref3.phoneNumber,\n          clientUrl = _ref3.clientUrl,\n          correlationId = _ref3.correlationId;\n\n      _loggerProxy.default.logger.info('Meeting:request#dialOut --> Provisioning a dial out device', correlationId);\n\n      var uri = \"\".concat(locusUrl, \"/\").concat(_constants.PARTICIPANT);\n      var body = {\n        device: {\n          deviceType: _common.deviceType.PROVISIONAL,\n          provisionalType: _constants.PROVISIONAL_TYPE_DIAL_OUT,\n          url: dialOutUrl,\n          dialoutAddress: phoneNumber,\n          clientUrl: clientUrl\n        },\n        correlationId: correlationId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.POST,\n        uri: uri,\n        body: body\n      }).catch(function (err) {\n        _loggerProxy.default.logger.error(\"Meeting:request#dialOut --> Error provisioning a dial out device, error \".concat(err));\n\n        throw err;\n      });\n    }\n    /**\n     * Syns the missed delta event\n     * @param {Object} options\n     * @param {boolen} options.desync flag to get partial or whole locus object\n     * @param {String} options.syncUrl sync url to get ht elatest locus delta\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"syncMeeting\",\n    value: function syncMeeting(options) {\n      /* eslint-disable no-else-return */\n      var desync = options.desync;\n      var syncUrl = options.syncUrl;\n      /* istanbul ignore else */\n\n      if (desync) {\n        // check for existing URL parameters\n        syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(\"\".concat(_constants.LOCUS.SYNCDEBUG, \"=\").concat(desync));\n      }\n\n      return this.request({\n        method: _constants.HTTP_VERBS.GET,\n        uri: syncUrl\n      }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch(function (err) {\n        _loggerProxy.default.logger.error(\"Meeting:request#syncMeeting --> Error syncing meeting, error \".concat(err));\n\n        return err;\n      });\n    }\n    /**\n     * Request to get the complete locus object\n     * @param {Object} options\n     * @param {boolen} options.desync flag to get partial or whole locus object\n     * @param {String} options.locusUrl sync url to get ht elatest locus delta\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"getFullLocus\",\n    value: function getFullLocus(options) {\n      var locusUrl = options.locusUrl;\n      var desync = options.desync;\n\n      if (locusUrl) {\n        if (desync) {\n          locusUrl += \"?\".concat(_constants.LOCUS.SYNCDEBUG, \"=\").concat(desync);\n        }\n\n        return this.request({\n          method: _constants.HTTP_VERBS.GET,\n          uri: locusUrl\n        }).catch(function (err) {\n          _loggerProxy.default.logger.error(\"Meeting:request#getFullLocus --> Error getting full locus, error \".concat(err));\n\n          return err;\n        });\n      }\n\n      return _promise.default.reject();\n    }\n    /**\n     * Make a network request to make a provisioned phone leave the meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.phoneUrl\n     * @param {String} options.correlationId\n     * @param {String} options.selfId\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: \"disconnectPhoneAudio\",\n    value: function disconnectPhoneAudio(_ref4) {\n      var locusUrl = _ref4.locusUrl,\n          phoneUrl = _ref4.phoneUrl,\n          correlationId = _ref4.correlationId,\n          selfId = _ref4.selfId;\n\n      _loggerProxy.default.logger.info(\"Meeting:request#disconnectPhoneAudio --> request phone \".concat(phoneUrl, \" to leave\"), correlationId);\n\n      var uri = \"\".concat(locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(selfId, \"/\").concat(_constants.LEAVE);\n      var body = {\n        device: {\n          deviceType: _common.deviceType.PROVISIONAL,\n          url: phoneUrl\n        },\n        correlationId: correlationId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      }).catch(function (err) {\n        _loggerProxy.default.logger.error(\"Meeting:request#disconnectPhoneAudio --> Error when requesting phone \".concat(phoneUrl, \" to leave, error \").concat(err));\n\n        throw err;\n      });\n    }\n    /**\n     * Make a network request to leave a meeting\n     * @param {Object} options\n     * @param {Url} options.locusUrl\n     * @param {String} options.selfId\n     * @param {Url} options.deviceUrl\n     * @param {String} options.resourceId,\n     * @param {String} options.correlationId\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"leaveMeeting\",\n    value: function leaveMeeting(_ref5) {\n      var locusUrl = _ref5.locusUrl,\n          selfId = _ref5.selfId,\n          url = _ref5.deviceUrl,\n          resourceId = _ref5.resourceId,\n          correlationId = _ref5.correlationId;\n\n      _loggerProxy.default.logger.info('Meeting:request#leaveMeeting --> Leaving a meeting', correlationId);\n\n      var uri = \"\".concat(locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(selfId, \"/\").concat(_constants.LEAVE);\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: url\n        },\n        usingResource: resourceId || null,\n        correlationId: correlationId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Make a network request to acknowledge a meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.correlationId\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"acknowledgeMeeting\",\n    value: function acknowledgeMeeting(options) {\n      var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(_constants.ALERT);\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        },\n        correlationId: options.correlationId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Make a network request to acknowledge a meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.id\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"recordMeeting\",\n    value: function recordMeeting(options) {\n      var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.CONTROLS);\n      var body = {\n        record: {\n          recording: options.recording,\n          paused: options.paused\n        }\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PATCH,\n        uri: uri,\n        body: body\n      });\n    }\n  }, {\n    key: \"lockMeeting\",\n    value: function lockMeeting(options) {\n      var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.CONTROLS);\n      var body = {\n        lock: {\n          locked: options.lock\n        }\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PATCH,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Make a network request to decline a meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.reason\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"declineMeeting\",\n    value: function declineMeeting(options) {\n      var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(_constants.DECLINE);\n\n      var body = _objectSpread({\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        }\n      }, options.reason && {\n        reason: options.reason\n      });\n\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Toggle remote audio and/or video\n     * @param {Object} options options for toggling\n     * @param {String} options.selfId Locus self id??\n     * @param {String} options.locusUrl Locus url\n     * @param {String} options.deviceUrl Url of a device\n     * @param {String} options.resourceId Populated if you are paired to a device\n     * @param {String} options.localMedias local sdps\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"remoteAudioVideoToggle\",\n    value: function remoteAudioVideoToggle(options) {\n      var _options$preferTransc;\n\n      var uri = \"\".concat(options.locusUrl, \"/\").concat(_constants.PARTICIPANT, \"/\").concat(options.selfId, \"/\").concat(_constants.MEDIA);\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        },\n        usingResource: options.resourceId || null,\n        correlationId: options.correlationId,\n        respOnlySdp: true,\n        localMedias: options.localMedias,\n        clientMediaPreferences: {\n          preferTranscoding: (_options$preferTransc = options.preferTranscoding) !== null && _options$preferTransc !== void 0 ? _options$preferTransc : true\n        }\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * change the content floor grant\n     * @param {Object} options options for floor grant\n     * @param {String} options.disposition floor action (granted/released)\n     * @param {String} options.personUrl personUrl who is requesting floor\n     * @param {String} options.deviceUrl Url of a device\n     * @param {String} options.resourceId Populated if you are paired to a device\n     * @param {String} options.uri floor grant uri\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"changeMeetingFloor\",\n    value: function changeMeetingFloor(options) {\n      var floorReq = {\n        disposition: options.disposition\n      };\n      /* istanbul ignore else */\n\n      if (options.disposition === _constants.FLOOR_ACTION.GRANTED) {\n        floorReq = {\n          beneficiary: {\n            url: options.personUrl,\n            devices: [{\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }]\n          },\n          disposition: options.disposition,\n          requester: {\n            url: options.personUrl\n          }\n        };\n      }\n\n      var body = {\n        floor: floorReq,\n        resourceUrl: options.resourceUrl\n      };\n\n      if (options !== null && options !== void 0 && options.resourceToken) {\n        body.resourceToken = options === null || options === void 0 ? void 0 : options.resourceToken;\n      }\n\n      return this.request({\n        uri: options.uri,\n        method: _constants.HTTP_VERBS.PUT,\n        body: body\n      });\n    }\n    /**\n     * Sends a request to the DTMF endpoint to send tones\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.tones a string of one or more DTMF tones to send\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"sendDTMF\",\n    value: function sendDTMF(_ref6) {\n      var locusUrl = _ref6.locusUrl,\n          deviceUrl = _ref6.deviceUrl,\n          tones = _ref6.tones;\n      return this.request({\n        method: _constants.HTTP_VERBS.POST,\n        uri: \"\".concat(locusUrl, \"/\").concat(_constants.SEND_DTMF_ENDPOINT),\n        body: {\n          deviceUrl: deviceUrl,\n          dtmf: {\n            correlationId: _uuid.default.v4(),\n            tones: tones\n          }\n        }\n      });\n    }\n    /**\n     * Sends a request to the controls endpoint to set the video layout\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n     * @param {Object} options.main preferred dimensions for the remote main video stream\n     * @param {Number} options.main.width preferred width of main video stream\n     * @param {Number} options.main.height preferred height of main video stream\n     * @param {Object} options.content preferred dimensions for the remote content share stream\n     * @param {Number} options.content.width preferred width of content share stream\n     * @param {Number} options.content.height preferred height of content share stream\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"changeVideoLayout\",\n    value: function changeVideoLayout(_ref7) {\n      var locusUrl = _ref7.locusUrl,\n          deviceUrl = _ref7.deviceUrl,\n          layoutType = _ref7.layoutType,\n          main = _ref7.main,\n          content = _ref7.content; // send main/content renderInfo only if both width and height are specified\n\n      if (main && (!main.width || !main.height)) {\n        return _promise.default.reject(new Error(\"Both width and height must be specified. One of them is missing for main: \".concat((0, _stringify.default)(main))));\n      }\n\n      if (content && (!content.width || !content.height)) {\n        return _promise.default.reject(new Error(\"Both width and height must be specified. One of them is missing for content: \".concat((0, _stringify.default)(content))));\n      }\n\n      var renderInfoMain = main ? {\n        width: main.width,\n        height: main.height\n      } : undefined;\n      var renderInfoContent = content ? {\n        width: content.width,\n        height: content.height\n      } : undefined;\n      var layoutParams = renderInfoMain || renderInfoContent ? {\n        renderInfo: {\n          main: renderInfoMain,\n          content: renderInfoContent\n        }\n      } : undefined;\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: \"\".concat(locusUrl, \"/\").concat(_constants.CONTROLS),\n        body: {\n          layout: {\n            deviceUrl: deviceUrl,\n            type: layoutType,\n            layoutParams: layoutParams\n          }\n        }\n      });\n    }\n  }]);\n  return MeetingRequest;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = MeetingRequest;","map":{"version":3,"mappings":"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","names":["MeetingRequest","attrs","options","_this","changeVideoLayoutDebounced","changeVideoLayout","leading","trailing","asResourceOccupant","inviteeAddress","meetingNumber","permissionToken","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","pin","moveToResource","roapMessage","preferTranscoding","LoggerProxy","logger","info","url","body","device","deviceType","config","meetings","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","clientMediaPreferences","webex","clientRegion","countryCode","regionCode","undefined","_context","PARTICIPANT","internal","services","waitForCatalog","get","LOCI","CALL","invitee","address","error","concat","ALTERNATE_REDIRECT_TRUE","callPreferences","requestedMedia","_SLIDES_","localMedias","request","method","HTTP_VERBS","POST","uri","captchaRefreshUrl","captchaId","catch","err","dialInUrl","clientUrl","PROVISIONAL","provisionalType","PROVISIONAL_TYPE_DIAL_IN","dialOutUrl","phoneNumber","PROVISIONAL_TYPE_DIAL_OUT","dialoutAddress","desync","syncUrl","split","LOCUS","SYNCDEBUG","GET","_promise","reject","phoneUrl","selfId","LEAVE","PUT","ALERT","CONTROLS","record","recording","paused","PATCH","lock","locked","DECLINE","reason","MEDIA","floorReq","disposition","FLOOR_ACTION","GRANTED","beneficiary","personUrl","devices","requester","floor","resourceUrl","resourceToken","tones","SEND_DTMF_ENDPOINT","dtmf","uuid","v4","layoutType","main","content","width","height","Error","renderInfoMain","renderInfoContent","layoutParams","renderInfo","layout","type","StatelessWebexPlugin"],"sources":["request.js"],"sourcesContent":["import uuid from 'uuid';\nimport {debounce} from 'lodash';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\nimport {deviceType} from '@webex/common';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  ALERT,\n  ALTERNATE_REDIRECT_TRUE,\n  CALL,\n  CONTROLS,\n  DECLINE,\n  FLOOR_ACTION,\n  HTTP_VERBS,\n  LEAVE,\n  LOCI,\n  LOCUS,\n  MEDIA,\n  PARTICIPANT,\n  PROVISIONAL_TYPE_DIAL_IN,\n  PROVISIONAL_TYPE_DIAL_OUT,\n  SEND_DTMF_ENDPOINT,\n  _SLIDES_\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  constructor(attrs, options) {\n    super(attrs, options);\n    this.changeVideoLayoutDebounced = debounce(this.changeVideoLayout, 2000, {leading: true, trailing: true});\n  }\n\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @param {boolean} options.ensureConversation\n   * @param {boolean} options.moderator\n   * @param {boolean} options.pin\n   * @param {boolean} options.moveToResource\n   * @param {Object} options.roapMessage\n   * @returns {Promise}\n   */\n  async joinMeeting(options) {\n    const {\n      asResourceOccupant,\n      inviteeAddress,\n      meetingNumber,\n      permissionToken,\n      deviceUrl,\n      locusUrl,\n      resourceId,\n      correlationId,\n      ensureConversation,\n      moderator,\n      pin,\n      moveToResource,\n      roapMessage,\n      preferTranscoding\n    } = options;\n\n    LoggerProxy.logger.info(\n      'Meeting:request#joinMeeting --> Joining a meeting',\n      correlationId\n    );\n\n    let url = '';\n\n    const body = {\n      asResourceOccupant,\n      device: {\n        url: deviceUrl,\n        deviceType: this.config.meetings.deviceType\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: resourceId && moveToResource || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1,\n      clientMediaPreferences: {\n        preferTranscoding: preferTranscoding ?? true\n      }\n    };\n\n    if (this.webex.meetings.clientRegion) {\n      body.device.countryCode = this.webex.meetings.clientRegion.countryCode;\n      body.device.regionCode = this.webex.meetings.clientRegion.regionCode;\n    }\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (permissionToken) {\n      body.permissionToken = permissionToken;\n    }\n\n    if (pin !== undefined) {\n      body.pin = pin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    }\n    else if (inviteeAddress || meetingNumber) {\n      try {\n        await this.webex.internal.services.waitForCatalog('postauth');\n        url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n        body.invitee = {\n          address: inviteeAddress || `wbxmn:${meetingNumber}`\n        };\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`Meeting:request#joinMeeting Error Joining ${inviteeAddress || meetingNumber} --> ${e}`);\n        throw (e);\n      }\n    }\n\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === inviteeAddress) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_]\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body\n    });\n  }\n\n  /**\n   * Send a request to refresh the captcha\n   * @param {Object} options\n   * @param {String} options.captchaRefreshUrl\n   * @param {String} options.captchaId\n   * @returns {Promise}\n   * @private\n   */\n  refreshCaptcha({\n    captchaRefreshUrl,\n    captchaId\n  }) {\n    const body = {\n      captchaId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: captchaRefreshUrl,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#refreshCaptcha --> Error: ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to add a dial in device\n   * @param {Object} options\n   * @param {String} options.correlationId\n   * @param {String} options.localUrl url for the meeting\n   * @param {String} options.dialInUrl identifier for the to-be provisioned device\n   * @param {String} options.clientUrl identifier for the web device\n   * @returns {Promise}\n   * @private\n   */\n  dialIn({\n    locusUrl,\n    dialInUrl,\n    clientUrl,\n    correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#dialIn --> Provisioning a dial in device',\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        provisionalType: PROVISIONAL_TYPE_DIAL_IN,\n        url: dialInUrl,\n        clientUrl\n      },\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#dialIn --> Error provisioning a dial in device, error ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to add a dial out device\n   * @param {Object} options\n   * @param {String} options.correlationId\n   * @param {String} options.localUrl url for the meeting\n   * @param {String} options.dialOutUrl identifier for the to-be provisioned device\n   * @param {String} options.phoneNumber phone number to dial out to\n   * @param {String} options.clientUrl identifier for the web device\n   * @returns {Promise}\n   * @private\n   */\n  dialOut({\n    locusUrl,\n    dialOutUrl,\n    phoneNumber,\n    clientUrl,\n    correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#dialOut --> Provisioning a dial out device',\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        provisionalType: PROVISIONAL_TYPE_DIAL_OUT,\n        url: dialOutUrl,\n        dialoutAddress: phoneNumber,\n        clientUrl\n      },\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#dialOut --> Error provisioning a dial out device, error ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#syncMeeting --> Error syncing meeting, error ${err}`);\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  getFullLocus(options) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl\n      }).catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#getFullLocus --> Error getting full locus, error ${err}`);\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to make a provisioned phone leave the meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.phoneUrl\n   * @param {String} options.correlationId\n   * @param {String} options.selfId\n   * @returns {Promise}\n   * @private\n   */\n  disconnectPhoneAudio({\n    locusUrl,\n    phoneUrl,\n    correlationId,\n    selfId\n  }) {\n    LoggerProxy.logger.info(\n      `Meeting:request#disconnectPhoneAudio --> request phone ${phoneUrl} to leave`,\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        url: phoneUrl\n      },\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:request#disconnectPhoneAudio --> Error when requesting phone ${phoneUrl} to leave, error ${err}`\n      );\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {Url} options.locusUrl\n   * @param {String} options.selfId\n   * @param {Url} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting({\n    locusUrl,\n    selfId,\n    deviceUrl: url,\n    resourceId,\n    correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#leaveMeeting --> Leaving a meeting',\n      correlationId\n    );\n\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url\n      },\n      usingResource: resourceId || null,\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      correlationId: options.correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  recordMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      record: {\n        recording: options.recording,\n        paused: options.paused\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      ...(options.reason && {reason: options.reason})\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias,\n      clientMediaPreferences: {\n        preferTranscoding: options.preferTranscoding ?? true\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(options) {\n    let floorReq = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }\n          ]\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl\n        }\n      };\n    }\n\n    const body = {\n      floor: floorReq,\n      resourceUrl: options.resourceUrl\n    };\n\n    if (options?.resourceToken) {\n      body.resourceToken = options?.resourceToken;\n    }\n\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body\n    });\n  }\n\n  /**\n   * Sends a request to the DTMF endpoint to send tones\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   */\n  sendDTMF({locusUrl, deviceUrl, tones}) {\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: `${locusUrl}/${SEND_DTMF_ENDPOINT}`,\n      body: {\n        deviceUrl,\n        dtmf: {\n          correlationId: uuid.v4(),\n          tones\n        }\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the controls endpoint to set the video layout\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @param {Object} options.main preferred dimensions for the remote main video stream\n   * @param {Number} options.main.width preferred width of main video stream\n   * @param {Number} options.main.height preferred height of main video stream\n   * @param {Object} options.content preferred dimensions for the remote content share stream\n   * @param {Number} options.content.width preferred width of content share stream\n   * @param {Number} options.content.height preferred height of content share stream\n   * @returns {Promise}\n   */\n  changeVideoLayout({\n    locusUrl,\n    deviceUrl,\n    layoutType,\n    main,\n    content\n  }) {\n    // send main/content renderInfo only if both width and height are specified\n    if (main && (!main.width || !main.height)) {\n      return Promise.reject(new Error(`Both width and height must be specified. One of them is missing for main: ${JSON.stringify(main)}`));\n    }\n\n    if (content && (!content.width || !content.height)) {\n      return Promise.reject(new Error(`Both width and height must be specified. One of them is missing for content: ${JSON.stringify(content)}`));\n    }\n\n    const renderInfoMain = (main) ? {width: main.width, height: main.height} : undefined;\n    const renderInfoContent = (content) ? {width: content.width, height: content.height} : undefined;\n\n    const layoutParams = (renderInfoMain || renderInfoContent) ?\n      {\n        renderInfo:\n        {\n          main: renderInfoMain,\n          content: renderInfoContent\n        }\n      } : undefined;\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri: `${locusUrl}/${CONTROLS}`,\n      body: {\n        layout: {\n          deviceUrl,\n          type: layoutType,\n          layoutParams\n        }\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}