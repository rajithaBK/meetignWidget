{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = exports.MeetingInfoV2CaptchaError = exports.MeetingInfoV2PasswordError = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapNativeSuper\"));\n\nvar _constants = require(\"../constants\");\n\nvar _utilv = _interopRequireDefault(require(\"./utilv2\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar PASSWORD_ERROR_DEFAULT_MESSAGE = 'Password required. Call fetchMeetingInfo() with password argument';\nvar CAPTCHA_ERROR_DEFAULT_MESSAGE = 'Captcha required. Call fetchMeetingInfo() with captchaInfo argument';\n/**\n * Error to indicate that wbxappapi requires a password\n */\n\nvar MeetingInfoV2PasswordError = /*#__PURE__*/function (_Error) {\n  (0, _inherits2.default)(MeetingInfoV2PasswordError, _Error);\n\n  var _super = _createSuper(MeetingInfoV2PasswordError);\n  /**\n    *\n    * @constructor\n    * @param {Number} [wbxAppApiErrorCode]\n    * @param {Object} [meetingInfo]\n    * @param {String} [message]\n    */\n\n\n  function MeetingInfoV2PasswordError(wbxAppApiErrorCode, meetingInfo) {\n    var _this;\n\n    var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PASSWORD_ERROR_DEFAULT_MESSAGE;\n    (0, _classCallCheck2.default)(this, MeetingInfoV2PasswordError);\n    _this = _super.call(this, \"\".concat(message, \", code=\").concat(wbxAppApiErrorCode));\n    _this.name = 'MeetingInfoV2PasswordError';\n    _this.sdkMessage = message;\n    _this.stack = new Error().stack;\n    _this.wbxAppApiCode = wbxAppApiErrorCode;\n    _this.meetingInfo = meetingInfo;\n    return _this;\n  }\n\n  return MeetingInfoV2PasswordError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));\n/**\n   * Error to indicate that wbxappapi requires a captcha\n   */\n\n\nexports.MeetingInfoV2PasswordError = MeetingInfoV2PasswordError;\n\nvar MeetingInfoV2CaptchaError = /*#__PURE__*/function (_Error2) {\n  (0, _inherits2.default)(MeetingInfoV2CaptchaError, _Error2);\n\n  var _super2 = _createSuper(MeetingInfoV2CaptchaError);\n  /**\n    *\n    * @constructor\n    * @param {Number} [wbxAppApiErrorCode]\n    * @param {Object} [captchaInfo]\n    * @param {String} [message]\n    */\n\n\n  function MeetingInfoV2CaptchaError(wbxAppApiErrorCode, captchaInfo) {\n    var _this2;\n\n    var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CAPTCHA_ERROR_DEFAULT_MESSAGE;\n    (0, _classCallCheck2.default)(this, MeetingInfoV2CaptchaError);\n    _this2 = _super2.call(this, \"\".concat(message, \", code=\").concat(wbxAppApiErrorCode));\n    _this2.name = 'MeetingInfoV2PasswordError';\n    _this2.sdkMessage = message;\n    _this2.stack = new Error().stack;\n    _this2.wbxAppApiCode = wbxAppApiErrorCode;\n    _this2.isPasswordRequired = wbxAppApiErrorCode === 423005;\n    _this2.captchaInfo = captchaInfo;\n    return _this2;\n  }\n\n  return MeetingInfoV2CaptchaError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));\n/**\n   * @class MeetingInfo\n   */\n\n\nexports.MeetingInfoV2CaptchaError = MeetingInfoV2CaptchaError;\n\nvar MeetingInfoV2 = /*#__PURE__*/function () {\n  /**\n     *\n     * @param {WebexSDK} webex\n     */\n  function MeetingInfoV2(webex) {\n    (0, _classCallCheck2.default)(this, MeetingInfoV2);\n    this.webex = webex;\n  }\n  /**\n     * converts hydra id into conversation url and persons Id\n     * @param {String} destination one of many different types of destinations to look up info for\n     * @param {String} [type] to match up with the destination value\n     * @returns {Promise} returns destination and type\n     * @public\n     * @memberof MeetingInfo\n     */\n\n\n  (0, _createClass2.default)(MeetingInfoV2, [{\n    key: \"fetchInfoOptions\",\n    value: function fetchInfoOptions(destination) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return _utilv.default.getDestinationType({\n        destination: destination,\n        type: type,\n        webex: this.webex\n      });\n    }\n    /**\n       * Fetches meeting info from the server\n       * @param {String} destination one of many different types of destinations to look up info for\n       * @param {String} [type] to match up with the destination value\n       * @param {String} password\n       * @param {Object} captchaInfo\n       * @param {String} captchaInfo.code\n       * @param {String} captchaInfo.id\n       * @returns {Promise} returns a meeting info object\n       * @public\n       * @memberof MeetingInfo\n       */\n\n  }, {\n    key: \"fetchMeetingInfo\",\n    value: function () {\n      var _fetchMeetingInfo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(destination) {\n        var type,\n            password,\n            captchaInfo,\n            destinationType,\n            body,\n            _args = arguments;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                type = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n                password = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n                captchaInfo = _args.length > 3 && _args[3] !== undefined ? _args[3] : null;\n                _context.next = 5;\n                return _utilv.default.getDestinationType({\n                  destination: destination,\n                  type: type,\n                  webex: this.webex\n                });\n\n              case 5:\n                destinationType = _context.sent;\n                _context.next = 8;\n                return _utilv.default.getRequestBody(_objectSpread(_objectSpread({}, destinationType), {}, {\n                  password: password,\n                  captchaInfo: captchaInfo\n                }));\n\n              case 8:\n                body = _context.sent;\n                return _context.abrupt(\"return\", this.webex.request({\n                  method: _constants.HTTP_VERBS.POST,\n                  service: 'webex-appapi-service',\n                  resource: 'meetingInfo',\n                  body: body\n                }).catch(function (err) {\n                  if ((err === null || err === void 0 ? void 0 : err.statusCode) === 403) {\n                    var _err$body, _err$body2, _err$body2$data;\n\n                    throw new MeetingInfoV2PasswordError((_err$body = err.body) === null || _err$body === void 0 ? void 0 : _err$body.code, (_err$body2 = err.body) === null || _err$body2 === void 0 ? void 0 : (_err$body2$data = _err$body2.data) === null || _err$body2$data === void 0 ? void 0 : _err$body2$data.meetingInfo);\n                  }\n\n                  if ((err === null || err === void 0 ? void 0 : err.statusCode) === 423) {\n                    var _err$body3;\n\n                    throw new MeetingInfoV2CaptchaError((_err$body3 = err.body) === null || _err$body3 === void 0 ? void 0 : _err$body3.code, {\n                      captchaId: err.body.captchaID,\n                      verificationImageURL: err.body.verificationImageURL,\n                      verificationAudioURL: err.body.verificationAudioURL,\n                      refreshURL: err.body.refreshURL\n                    });\n                  }\n\n                  throw err;\n                }));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchMeetingInfo(_x) {\n        return _fetchMeetingInfo.apply(this, arguments);\n      }\n\n      return fetchMeetingInfo;\n    }()\n  }]);\n  return MeetingInfoV2;\n}();\n\nexports.default = MeetingInfoV2;","map":{"version":3,"mappings":"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","names":["PASSWORD_ERROR_DEFAULT_MESSAGE","CAPTCHA_ERROR_DEFAULT_MESSAGE","MeetingInfoV2PasswordError","wbxAppApiErrorCode","meetingInfo","message","_this","name","sdkMessage","stack","Error","wbxAppApiCode","MeetingInfoV2CaptchaError","captchaInfo","_this2","isPasswordRequired","MeetingInfoV2","webex","destination","type","MeetingInfoUtil","getDestinationType","password","_context","destinationType","getRequestBody","body","request","method","HTTP_VERBS","POST","service","resource","catch","err","statusCode","_err$body","code","_err$body2","data","_err$body2$data","_err$body3","captchaId","captchaID","verificationImageURL","verificationAudioURL","refreshURL"],"sources":["meeting-info-v2.js"],"sourcesContent":["\nimport {HTTP_VERBS} from '../constants';\n\nimport MeetingInfoUtil from './utilv2';\n\nconst PASSWORD_ERROR_DEFAULT_MESSAGE = 'Password required. Call fetchMeetingInfo() with password argument';\nconst CAPTCHA_ERROR_DEFAULT_MESSAGE = 'Captcha required. Call fetchMeetingInfo() with captchaInfo argument';\n\n/**\n * Error to indicate that wbxappapi requires a password\n */\nexport class MeetingInfoV2PasswordError extends Error {\n  /**\n    *\n    * @constructor\n    * @param {Number} [wbxAppApiErrorCode]\n    * @param {Object} [meetingInfo]\n    * @param {String} [message]\n    */\n  constructor(wbxAppApiErrorCode, meetingInfo, message = PASSWORD_ERROR_DEFAULT_MESSAGE) {\n    super(`${message}, code=${wbxAppApiErrorCode}`);\n    this.name = 'MeetingInfoV2PasswordError';\n    this.sdkMessage = message;\n    this.stack = (new Error()).stack;\n    this.wbxAppApiCode = wbxAppApiErrorCode;\n    this.meetingInfo = meetingInfo;\n  }\n}\n\n/**\n   * Error to indicate that wbxappapi requires a captcha\n   */\nexport class MeetingInfoV2CaptchaError extends Error {\n  /**\n    *\n    * @constructor\n    * @param {Number} [wbxAppApiErrorCode]\n    * @param {Object} [captchaInfo]\n    * @param {String} [message]\n    */\n  constructor(wbxAppApiErrorCode, captchaInfo, message = CAPTCHA_ERROR_DEFAULT_MESSAGE) {\n    super(`${message}, code=${wbxAppApiErrorCode}`);\n    this.name = 'MeetingInfoV2PasswordError';\n    this.sdkMessage = message;\n    this.stack = (new Error()).stack;\n    this.wbxAppApiCode = wbxAppApiErrorCode;\n    this.isPasswordRequired = wbxAppApiErrorCode === 423005;\n    this.captchaInfo = captchaInfo;\n  }\n}\n\n/**\n   * @class MeetingInfo\n   */\nexport default class MeetingInfoV2 {\n  /**\n     *\n     * @param {WebexSDK} webex\n     */\n  constructor(webex) {\n    this.webex = webex;\n  }\n\n  /**\n     * converts hydra id into conversation url and persons Id\n     * @param {String} destination one of many different types of destinations to look up info for\n     * @param {String} [type] to match up with the destination value\n     * @returns {Promise} returns destination and type\n     * @public\n     * @memberof MeetingInfo\n     */\n  fetchInfoOptions(destination, type = null) {\n    return MeetingInfoUtil.getDestinationType({\n      destination,\n      type,\n      webex: this.webex\n    });\n  }\n\n  /**\n     * Fetches meeting info from the server\n     * @param {String} destination one of many different types of destinations to look up info for\n     * @param {String} [type] to match up with the destination value\n     * @param {String} password\n     * @param {Object} captchaInfo\n     * @param {String} captchaInfo.code\n     * @param {String} captchaInfo.id\n     * @returns {Promise} returns a meeting info object\n     * @public\n     * @memberof MeetingInfo\n     */\n  async fetchMeetingInfo(destination, type = null, password = null, captchaInfo = null) {\n    const destinationType = await MeetingInfoUtil.getDestinationType({\n      destination,\n      type,\n      webex: this.webex\n    });\n    const body = await MeetingInfoUtil.getRequestBody({...destinationType, password, captchaInfo});\n\n    return this.webex.request({\n      method: HTTP_VERBS.POST,\n      service: 'webex-appapi-service',\n      resource: 'meetingInfo',\n      body\n    })\n      .catch((err) => {\n        if (err?.statusCode === 403) {\n          throw new MeetingInfoV2PasswordError(err.body?.code, err.body?.data?.meetingInfo);\n        }\n        if (err?.statusCode === 423) {\n          throw new MeetingInfoV2CaptchaError(err.body?.code, {\n            captchaId: err.body.captchaID,\n            verificationImageURL: err.body.verificationImageURL,\n            verificationAudioURL: err.body.verificationAudioURL,\n            refreshURL: err.body.refreshURL\n          });\n        }\n        throw err;\n      });\n  }\n}\n\n"]},"metadata":{},"sourceType":"script"}