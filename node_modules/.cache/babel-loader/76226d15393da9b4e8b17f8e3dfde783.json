{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _apply = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/apply\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/define-property\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Webex-specific http error class\n */\n\n\nvar WebexHttpError = /*#__PURE__*/function (_HttpError) {\n  (0, _inherits2.default)(WebexHttpError, _HttpError);\n\n  var _super = _createSuper(WebexHttpError);\n\n  function WebexHttpError() {\n    (0, _classCallCheck2.default)(this, WebexHttpError);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(WebexHttpError, [{\n    key: \"parse\",\n    value:\n    /**\n     * Very similar to {@link HttpError#parse()}, but additionally adds some\n     * useful headers to the message string\n     * @param {HttpResponse} res\n     * @returns {string}\n     */\n    function parse(res) {\n      var message = (0, _apply.default)(_httpCore.HttpError.prototype.parse, this, [res]);\n      (0, _defineProperty.default)(this, 'options', {\n        enumerable: false,\n        value: res.options\n      });\n\n      if (this.options.url) {\n        message += \"\\n\".concat(this.options.method, \" \").concat(this.options.url);\n      } else if (this.options.uri) {\n        message += \"\\n\".concat(this.options.method, \" \").concat(this.options.uri);\n      } else {\n        message += \"\\n\".concat(this.options.method, \" \").concat(this.options.service.toUpperCase(), \"/\").concat(this.options.resource);\n      }\n\n      message += \"\\nWEBEX_TRACKING_ID: \".concat(this.options.headers.trackingid);\n\n      if (this.options.headers && this.options.headers['x-trans-id']) {\n        message += \"\\nX-Trans-Id: \".concat(this.options.headers['x-trans-id']);\n      }\n\n      if (this.headers['retry-after']) {\n        (0, _defineProperty.default)(this, 'retryAfter', {\n          enumerable: true,\n          value: this.headers['retry-after'],\n          writeable: false\n        });\n        message += \"\\nRETRY-AFTER: \".concat(this.retryAfter);\n      }\n\n      message += '\\n';\n      return message;\n    }\n  }]);\n  return WebexHttpError;\n}(_httpCore.HttpError);\n\nexports.default = WebexHttpError;\n\n_httpCore.HttpError.makeSubTypes(WebexHttpError);\n/**\n * TooManyRequests\n */\n\n\nvar TooManyRequests = /*#__PURE__*/function (_HttpError$BadRequest) {\n  (0, _inherits2.default)(TooManyRequests, _HttpError$BadRequest);\n\n  var _super2 = _createSuper(TooManyRequests);\n\n  function TooManyRequests() {\n    (0, _classCallCheck2.default)(this, TooManyRequests);\n    return _super2.apply(this, arguments);\n  }\n\n  return TooManyRequests;\n}(_httpCore.HttpError.BadRequest);\n\n_httpCore.HttpError[429] = TooManyRequests;\n_httpCore.HttpError.TooManyRequests = TooManyRequests;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;IACqBA,c;;;;;;;;;;;;;AACnB;AACF;AACA;AACA;AACA;AACA;AACE,mBAAMC,GAAN,EAAW;AACT,UAAIC,OAAO,GAAG,oBAAcC,oBAAUC,SAAVD,CAAoBE,KAAlC,EAAyC,IAAzC,EAA+C,CAACJ,GAAD,CAA/C,CAAd;AAEA,mCAAuB,IAAvB,EAA6B,SAA7B,EAAwC;AACtCK,kBAAU,EAAE,KAD0B;AAEtCC,aAAK,EAAEN,GAAG,CAACO;AAF2B,OAAxC;;AAKA,UAAI,KAAKA,OAAL,CAAaC,GAAjB,EAAsB;AACpBP,eAAO,gBAAS,KAAKM,OAAL,CAAaE,MAAtB,cAAgC,KAAKF,OAAL,CAAaC,GAA7C,CAAPP;AADF,aAGK,IAAI,KAAKM,OAAL,CAAaG,GAAjB,EAAsB;AACzBT,eAAO,gBAAS,KAAKM,OAAL,CAAaE,MAAtB,cAAgC,KAAKF,OAAL,CAAaG,GAA7C,CAAPT;AADG,aAGA;AACHA,eAAO,gBAAS,KAAKM,OAAL,CAAaE,MAAtB,cAAgC,KAAKF,OAAL,CAAaI,OAAb,CAAqBC,WAArB,EAAhC,cAAsE,KAAKL,OAAL,CAAaM,QAAnF,CAAPZ;AACD;;AACDA,aAAO,mCAA4B,KAAKM,OAAL,CAAaO,OAAb,CAAqBC,UAAjD,CAAPd;;AACA,UAAI,KAAKM,OAAL,CAAaO,OAAb,IAAwB,KAAKP,OAAL,CAAaO,OAAb,CAAqB,YAArB,CAA5B,EAAgE;AAC9Db,eAAO,4BAAqB,KAAKM,OAAL,CAAaO,OAAb,CAAqB,YAArB,CAArB,CAAPb;AACD;;AACD,UAAI,KAAKa,OAAL,CAAa,aAAb,CAAJ,EAAiC;AAC/B,qCAAuB,IAAvB,EAA6B,YAA7B,EAA2C;AACzCT,oBAAU,EAAE,IAD6B;AAEzCC,eAAK,EAAE,KAAKQ,OAAL,CAAa,aAAb,CAFkC;AAGzCE,mBAAS,EAAE;AAH8B,SAA3C;AAMAf,eAAO,6BAAsB,KAAKgB,UAA3B,CAAPhB;AACD;;AACDA,aAAO,IAAI,IAAXA;AAEA,aAAOA,OAAP;AACD;;;EAxCyCC,mB;;;;AA2C5CA,oBAAUgB,YAAVhB,CAAuBH,cAAvBG;AAGA;AACA;AACA;;;IACMiB,e;;;;;;;;;;;EAAwBjB,oBAAUkB,U;;AAExClB,oBAAU,GAAVA,IAAiBiB,eAAjBjB;AACAA,oBAAUiB,eAAVjB,GAA4BiB,eAA5BjB","names":["WebexHttpError","res","message","HttpError","prototype","parse","enumerable","value","options","url","method","uri","service","toUpperCase","resource","headers","trackingid","writeable","retryAfter","makeSubTypes","TooManyRequests","BadRequest"],"sources":["webex-http-error.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {HttpError} from '@webex/http-core';\n\n/**\n * Webex-specific http error class\n */\nexport default class WebexHttpError extends HttpError {\n  /**\n   * Very similar to {@link HttpError#parse()}, but additionally adds some\n   * useful headers to the message string\n   * @param {HttpResponse} res\n   * @returns {string}\n   */\n  parse(res) {\n    let message = Reflect.apply(HttpError.prototype.parse, this, [res]);\n\n    Reflect.defineProperty(this, 'options', {\n      enumerable: false,\n      value: res.options\n    });\n\n    if (this.options.url) {\n      message += `\\n${this.options.method} ${this.options.url}`;\n    }\n    else if (this.options.uri) {\n      message += `\\n${this.options.method} ${this.options.uri}`;\n    }\n    else {\n      message += `\\n${this.options.method} ${this.options.service.toUpperCase()}/${this.options.resource}`;\n    }\n    message += `\\nWEBEX_TRACKING_ID: ${this.options.headers.trackingid}`;\n    if (this.options.headers && this.options.headers['x-trans-id']) {\n      message += `\\nX-Trans-Id: ${this.options.headers['x-trans-id']}`;\n    }\n    if (this.headers['retry-after']) {\n      Reflect.defineProperty(this, 'retryAfter', {\n        enumerable: true,\n        value: this.headers['retry-after'],\n        writeable: false\n      });\n\n      message += `\\nRETRY-AFTER: ${this.retryAfter}`;\n    }\n    message += '\\n';\n\n    return message;\n  }\n}\n\nHttpError.makeSubTypes(WebexHttpError);\n\n\n/**\n * TooManyRequests\n */\nclass TooManyRequests extends HttpError.BadRequest {}\n\nHttpError[429] = TooManyRequests;\nHttpError.TooManyRequests = TooManyRequests;\n"]},"metadata":{},"sourceType":"script"}