{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/values\"));\n\nvar _find2 = _interopRequireDefault(require(\"lodash/find\"));\n\nvar _util = _interopRequireDefault(require(\"./util\"));\n\nvar _constants = require(\"./constants\");\n/**\n * @class CalendarCollection\n */\n\n\nvar CalendarCollection = {\n  namespace: _constants.CALENDAR,\n  items: {},\n\n  /**\n   * @param {String} id calendar ID\n   * @returns {Any} Calendar Item specifc to that id\n   * @private\n   * @memberof CalendarCollection\n   */\n  get: function get(id) {\n    return this.items[id];\n  },\n\n  /**\n   * @param {String} key any key and the corresponding calendar Item\n   * @param {String} value any values corresponding to calendar item\n   * @returns {Any} returns whatever is being stuffed into the collection\n   * @private\n   * @memberof CalendarCollection\n   */\n  getBy: function getBy(key, value) {\n    if (key && value) {\n      return (0, _find2.default)(this.items, function (item) {\n        return item[key] === value;\n      });\n    }\n\n    return null;\n  },\n\n  /**\n   * @param {Object} item CalendarObject passed to the collection\n   * @returns {Any} returns calender id whats get set\n   * @private\n   * @memberof CalendarCollection\n   */\n  set: function set(item) {\n    var itemId = item.id;\n\n    var meeting = _util.default.calculateEndTime(item);\n\n    this.items[itemId] = meeting;\n    return itemId;\n  },\n\n  /**\n   * resets all the values in the calendarcollection\n   * @returns {undefined}\n   * @private\n   * @memberof CalendarCollection\n   */\n  reset: function reset() {\n    this.items = {};\n  },\n\n  /**\n   * @param {Id} id is the id for the calendar item to be removed\n   * @returns {Any} calendar item which got removed\n   * @private\n   * @memberof CalendarCollection\n   */\n  remove: function remove(id) {\n    var meeting = this.get(id);\n    delete this.items[id];\n    return meeting;\n  },\n\n  /**\n   * sets all the item passed to the collection\n   * @param {Array} items array of calendar items\n   * @private\n   * @returns {undefined}\n   * @memberof CalendarCollection\n   */\n  setAll: function setAll(items) {\n    var _this = this;\n\n    items.forEach(function (item) {\n      _this.set(item);\n    });\n  },\n\n  /**\n   * gets all the calendar stored in the collection\n   * @param {Array} items array of calendar items\n   * @private\n   * @returns {Array} returns an array of calendar items\n   * @memberof CalendarCollection\n   */\n  getAll: function getAll() {\n    return (0, _values.default)(this.items);\n  }\n};\nvar _default = CalendarCollection;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAEA;;AACA;AACA;AACA;AACA;;;AACA,IAAMA,kBAAkB,GAAG;AACzBC,WAAS,EAAEC,mBADc;AAEzBC,OAAK,EAAE,EAFkB;;AAGzB;AACF;AACA;AACA;AACA;AACA;AACEC,KATyB,eASrBC,EATqB,EASjB;AACN,WAAO,KAAKF,KAAL,CAAWE,EAAX,CAAP;AAVuB;;AAazB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,OApByB,iBAoBnBC,GApBmB,EAoBdC,KApBc,EAoBP;AAChB,QAAID,GAAG,IAAIC,KAAX,EAAkB;AAChB,aAAO,oBAAK,KAAKL,KAAV,EAAiB,UAACM,IAAD;AAAA,eAAWA,IAAI,CAACF,GAAD,CAAJE,KAAcD,KAAzB;AAAjB,QAAP;AACD;;AAED,WAAO,IAAP;AAzBuB;;AA4BzB;AACF;AACA;AACA;AACA;AACA;AACEE,KAlCyB,eAkCrBD,IAlCqB,EAkCf;AACR,QAAME,MAAM,GAAGF,IAAI,CAACJ,EAApB;;AACA,QAAMO,OAAO,GAAGC,cAAaC,gBAAbD,CAA8BJ,IAA9BI,CAAhB;;AAEA,SAAKV,KAAL,CAAWQ,MAAX,IAAqBC,OAArB;AAEA,WAAOD,MAAP;AAxCuB;;AA2CzB;AACF;AACA;AACA;AACA;AACA;AACEI,OAjDyB,mBAiDjB;AACN,SAAKZ,KAAL,GAAa,EAAb;AAlDuB;;AAsDzB;AACF;AACA;AACA;AACA;AACA;AACEa,QA5DyB,kBA4DlBX,EA5DkB,EA4Dd;AACT,QAAMO,OAAO,GAAG,KAAKR,GAAL,CAASC,EAAT,CAAhB;AAEA,WAAO,KAAKF,KAAL,CAAWE,EAAX,CAAP;AAEA,WAAOO,OAAP;AAjEuB;;AAoEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEK,QA3EyB,kBA2ElBd,KA3EkB,EA2EX;AAAA;;AACZA,SAAK,CAACe,OAANf,CAAc,UAACM,IAAD,EAAU;AACtBU,WAAI,CAACT,GAAL,CAASD,IAAT;AADF;AA5EuB;;AAiFzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEW,QAxFyB,oBAwFhB;AACP,WAAO,qBAAc,KAAKjB,KAAnB,CAAP;AACD;AA1FwB,CAA3B;eA8FeH","names":["CalendarCollection","namespace","CALENDAR","items","get","id","getBy","key","value","item","set","itemId","meeting","CalendarUtil","calculateEndTime","reset","remove","setAll","forEach","_this","getAll"],"sources":["collection.js"],"sourcesContent":["import {find} from 'lodash';\n\nimport CalendarUtil from './util';\nimport {CALENDAR} from './constants';\n/**\n * @class CalendarCollection\n */\nconst CalendarCollection = {\n  namespace: CALENDAR,\n  items: {},\n  /**\n   * @param {String} id calendar ID\n   * @returns {Any} Calendar Item specifc to that id\n   * @private\n   * @memberof CalendarCollection\n   */\n  get(id) {\n    return this.items[id];\n  },\n\n  /**\n   * @param {String} key any key and the corresponding calendar Item\n   * @param {String} value any values corresponding to calendar item\n   * @returns {Any} returns whatever is being stuffed into the collection\n   * @private\n   * @memberof CalendarCollection\n   */\n  getBy(key, value) {\n    if (key && value) {\n      return find(this.items, (item) => (item[key] === value));\n    }\n\n    return null;\n  },\n\n  /**\n   * @param {Object} item CalendarObject passed to the collection\n   * @returns {Any} returns calender id whats get set\n   * @private\n   * @memberof CalendarCollection\n   */\n  set(item) {\n    const itemId = item.id;\n    const meeting = CalendarUtil.calculateEndTime(item);\n\n    this.items[itemId] = meeting;\n\n    return itemId;\n  },\n\n  /**\n   * resets all the values in the calendarcollection\n   * @returns {undefined}\n   * @private\n   * @memberof CalendarCollection\n   */\n  reset() {\n    this.items = {};\n  },\n\n\n  /**\n   * @param {Id} id is the id for the calendar item to be removed\n   * @returns {Any} calendar item which got removed\n   * @private\n   * @memberof CalendarCollection\n   */\n  remove(id) {\n    const meeting = this.get(id);\n\n    delete this.items[id];\n\n    return meeting;\n  },\n\n  /**\n   * sets all the item passed to the collection\n   * @param {Array} items array of calendar items\n   * @private\n   * @returns {undefined}\n   * @memberof CalendarCollection\n   */\n  setAll(items) {\n    items.forEach((item) => {\n      this.set(item);\n    });\n  },\n\n  /**\n   * gets all the calendar stored in the collection\n   * @param {Array} items array of calendar items\n   * @private\n   * @returns {Array} returns an array of calendar items\n   * @memberof CalendarCollection\n   */\n  getAll() {\n    return Object.values(this.items);\n  }\n\n};\n\nexport default CalendarCollection;\n"]},"metadata":{},"sourceType":"script"}