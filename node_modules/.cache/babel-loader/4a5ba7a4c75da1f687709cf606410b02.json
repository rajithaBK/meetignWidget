{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\nvar InfoUtils = {};\n\nInfoUtils.parse = function (info) {\n  var parsed = {\n    policy: InfoUtils.parsePolicy(info),\n    moderator: InfoUtils.parseModerator(info)\n  };\n\n  if (info.sipUri) {\n    parsed.sipUri = info.sipUri;\n  }\n\n  if (info.meetingId) {\n    parsed.meetingNumber = info.meetingId;\n  }\n\n  return parsed;\n};\n\nInfoUtils.parsePolicy = function (info) {\n  var policy = {}; // Parses the policy to show valid uses\n\n  if (info && info.displayHints && info.displayHints.joined && info.displayHints.joined.length > 0) {\n    // TODO: find a better way\n    info.displayHints.joined.forEach(function (key) {\n      policy[key] = true;\n    });\n  }\n\n  return policy;\n};\n\nInfoUtils.parseModerator = function (info) {\n  var moderator = {};\n\n  if (info && info.displayHints && info.displayHints.moderator && info.displayHints.moderator.length > 0) {\n    info.displayHints.moderator.forEach(function (key) {\n      moderator[key] = true;\n    });\n  }\n\n  return moderator;\n};\n\nInfoUtils.isLocked = function (policy) {\n  return policy.LOCK_STATUS_LOCKED || false;\n};\n\nInfoUtils.isUnlocked = function (policy) {\n  return policy.LOCK_STATUS_UNLOCKED || false;\n};\n\nInfoUtils.getInfos = function (oldInfo, newInfo) {\n  var previous = null;\n\n  if (oldInfo) {\n    previous = oldInfo;\n  }\n\n  var current = newInfo && InfoUtils.parse(newInfo);\n  var updates = {};\n\n  if (current) {\n    current.isLocked = InfoUtils.isLocked(current.policy);\n    current.isUnlocked = InfoUtils.isUnlocked(current.policy);\n\n    if (previous && previous.isUnlocked && current.isLocked || !previous && current.isLocked) {\n      updates.isLocked = current.isLocked;\n    }\n\n    if (previous && previous.isLocked && current.isUnlocked || !previous && current.isUnlocked) {\n      updates.isUnlocked = current.isUnlocked;\n    }\n  }\n\n  return {\n    previous: previous,\n    current: current,\n    updates: updates\n  };\n};\n\nvar _default = InfoUtils;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["InfoUtils","parse","info","parsed","policy","parsePolicy","moderator","parseModerator","sipUri","meetingId","meetingNumber","displayHints","joined","length","forEach","key","isLocked","LOCK_STATUS_LOCKED","isUnlocked","LOCK_STATUS_UNLOCKED","getInfos","oldInfo","newInfo","previous","current","updates"],"sources":["infoUtils.js"],"sourcesContent":["\nconst InfoUtils = {};\n\nInfoUtils.parse = (info) => {\n  const parsed = {\n    policy: InfoUtils.parsePolicy(info),\n    moderator: InfoUtils.parseModerator(info)\n  };\n\n  if (info.sipUri) {\n    parsed.sipUri = info.sipUri;\n  }\n\n  if (info.meetingId) {\n    parsed.meetingNumber = info.meetingId;\n  }\n\n  return parsed;\n};\nInfoUtils.parsePolicy = (info) => {\n  const policy = {};\n\n  // Parses the policy to show valid uses\n  if (info && info.displayHints && info.displayHints.joined && info.displayHints.joined.length > 0) {\n    // TODO: find a better way\n    info.displayHints.joined.forEach((key) => {\n      policy[key] = true;\n    });\n  }\n\n  return policy;\n};\n\nInfoUtils.parseModerator = (info) => {\n  const moderator = {};\n\n  if (info && info.displayHints && info.displayHints.moderator && info.displayHints.moderator.length > 0) {\n    info.displayHints.moderator.forEach((key) => {\n      moderator[key] = true;\n    });\n  }\n\n  return moderator;\n};\n\nInfoUtils.isLocked = (policy) => policy.LOCK_STATUS_LOCKED || false;\n\nInfoUtils.isUnlocked = (policy) => policy.LOCK_STATUS_UNLOCKED || false;\n\nInfoUtils.getInfos = (oldInfo, newInfo) => {\n  let previous = null;\n\n  if (oldInfo) {\n    previous = oldInfo;\n  }\n  const current = newInfo && InfoUtils.parse(newInfo);\n  const updates = {};\n\n  if (current) {\n    current.isLocked = InfoUtils.isLocked(current.policy);\n    current.isUnlocked = InfoUtils.isUnlocked(current.policy);\n\n    if (previous && previous.isUnlocked && current.isLocked || !previous && current.isLocked) {\n      updates.isLocked = current.isLocked;\n    }\n    if (previous && previous.isLocked && current.isUnlocked || !previous && current.isUnlocked) {\n      updates.isUnlocked = current.isUnlocked;\n    }\n  }\n\n  return {\n    previous,\n    current,\n    updates\n  };\n};\n\nexport default InfoUtils;\n"]},"metadata":{},"sourceType":"script"}