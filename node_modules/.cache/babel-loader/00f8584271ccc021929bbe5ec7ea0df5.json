{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar _parameter = _interopRequireDefault(require(\"../common/errors/parameter\"));\n\nvar MemberUtil = {};\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\n\nMemberUtil.isUser = function (participant) {\n  return participant && participant.type === _constants._USER_;\n};\n\nMemberUtil.isModerator = function (participant) {\n  return participant && participant.moderator;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\n\n\nMemberUtil.isGuest = function (participant) {\n  return participant && participant.guest;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\n\n\nMemberUtil.isDevice = function (participant) {\n  return participant && participant.type === _constants._RESOURCE_ROOM_;\n};\n\nMemberUtil.isModeratorAssignmentProhibited = function (participant) {\n  return participant && participant.moderatorAssignmentNotAllowed;\n};\n/**\n * checks to see if the participant id is the same as the passed id\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\n\n\nMemberUtil.isSame = function (participant, id) {\n  return participant && (participant.id === id || participant.person && participant.person.id === id);\n};\n/**\n * checks to see if the participant id is the same as the passed id for associated devices\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\n\n\nMemberUtil.isAssociatedSame = function (participant, id) {\n  return participant && participant.associatedUsers && participant.associatedUsers.some(function (user) {\n    return user.id === id || user.person && user.person.id === id;\n  });\n};\n/**\n * @param {Object} participant the locus participant\n * @param {Boolean} isGuest\n * @param {String} status\n * @returns {Boolean}\n */\n\n\nMemberUtil.isNotAdmitted = function (participant, isGuest, status) {\n  return participant && participant.guest && (participant.devices && participant.devices[0] && participant.devices[0].intent && participant.devices[0].intent.type === _constants._WAIT_ && isGuest && status === _constants._IN_LOBBY_ || !status === _constants._IN_MEETING_);\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\n\n\nMemberUtil.isAudioMuted = function (participant) {\n  if (!participant) {\n    throw new _parameter.default('Audio could not be processed, participant is undefined.');\n  }\n\n  var mutedStatus = MemberUtil.isMuted(participant.status, _constants.AUDIO_STATUS);\n\n  if (participant.controls && participant.controls.audio) {\n    if (participant.controls.audio.muted) {\n      return true;\n    }\n\n    if (mutedStatus) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\n\n\nMemberUtil.isVideoMuted = function (participant) {\n  if (!participant) {\n    throw new _parameter.default('Video could not be processed, participant is undefined.');\n  }\n\n  return MemberUtil.isMuted(participant.status, _constants.VIDEO_STATUS);\n};\n/**\n * utility method for audio/video muted status\n * @param {String} status\n * @param {String} accessor\n * @returns {Boolean}\n */\n\n\nMemberUtil.isMuted = function (status, accessor) {\n  if (status) {\n    if (status[accessor] === _constants._RECEIVE_ONLY_) {\n      return true;\n    }\n\n    if (status[accessor] === _constants._SEND_RECEIVE_) {\n      return false;\n    }\n  }\n\n  return null;\n};\n/**\n * utility method for getting the recording member for later comparison\n * @param {Object} controls\n * @returns {String|null}\n */\n\n\nMemberUtil.getRecordingMember = function (controls) {\n  if (!controls) {\n    return null;\n  }\n\n  if (controls.record && controls.record.recording && controls.record.meta) {\n    return controls.record.meta.modifiedBy;\n  }\n\n  return null;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\n\n\nMemberUtil.isRecording = function (participant) {\n  if (!participant) {\n    throw new _parameter.default('Recording could not be processed, participant is undefined.');\n  }\n\n  if (participant.controls && participant.controls.localRecord) {\n    return participant.controls.localRecord.recording;\n  }\n\n  return false;\n};\n\nMemberUtil.isRemovable = function (isSelf, isGuest, isInMeeting, type) {\n  if (isGuest || isSelf) {\n    return false;\n  }\n\n  if (type === _constants._CALL_) {\n    return false;\n  }\n\n  if (isInMeeting) {\n    return true;\n  }\n\n  return false;\n};\n\nMemberUtil.isMutable = function (isSelf, isDevice, isInMeeting, isMuted, type) {\n  if (!isInMeeting) {\n    return false;\n  }\n\n  if (isMuted) {\n    return false;\n  }\n\n  if (type === _constants._CALL_) {\n    return false;\n  }\n\n  if (isSelf || isDevice) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\n\n\nMemberUtil.extractStatus = function (participant) {\n  if (!(participant && participant.devices && participant.devices.length)) {\n    return _constants._NOT_IN_MEETING_;\n  }\n\n  if (participant.state === _constants._JOINED_) {\n    return _constants._IN_MEETING_;\n  }\n\n  if (participant.state === _constants._IDLE_) {\n    if (participant.devices && participant.devices.length > 0) {\n      var foundDevice = participant.devices.find(function (device) {\n        return device.intent && (device.intent.type === _constants._WAIT_ || device.intent.type === _constants._OBSERVE_);\n      });\n      return foundDevice ? _constants._IN_LOBBY_ : _constants._NOT_IN_MEETING_;\n    }\n\n    return _constants._NOT_IN_MEETING_;\n  }\n\n  if (participant.state === _constants._LEFT_) {\n    return _constants._NOT_IN_MEETING_;\n  }\n\n  return _constants._NOT_IN_MEETING_;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\n\n\nMemberUtil.extractId = function (participant) {\n  if (participant) {\n    return participant.id;\n  }\n\n  return null;\n};\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\n\n\nMemberUtil.extractName = function (participant) {\n  if (participant && participant.person) {\n    return participant.person.name;\n  }\n\n  return null;\n};\n\nvar _default = MemberUtil;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["MemberUtil","isUser","participant","type","_USER_","isModerator","moderator","isGuest","guest","isDevice","_RESOURCE_ROOM_","isModeratorAssignmentProhibited","moderatorAssignmentNotAllowed","isSame","id","person","isAssociatedSame","associatedUsers","some","user","isNotAdmitted","status","devices","intent","_WAIT_","_IN_LOBBY_","_IN_MEETING_","isAudioMuted","ParameterError","mutedStatus","isMuted","AUDIO_STATUS","controls","audio","muted","isVideoMuted","VIDEO_STATUS","accessor","_RECEIVE_ONLY_","_SEND_RECEIVE_","getRecordingMember","record","recording","meta","modifiedBy","isRecording","localRecord","isRemovable","isSelf","isInMeeting","_CALL_","isMutable","extractStatus","length","_NOT_IN_MEETING_","state","_JOINED_","_IDLE_","foundDevice","find","device","_OBSERVE_","_LEFT_","extractId","extractName","name"],"sources":["util.js"],"sourcesContent":["import {\n  _USER_,\n  _RESOURCE_ROOM_,\n  _OBSERVE_,\n  _WAIT_,\n  _LEFT_,\n  _JOINED_,\n  _IDLE_,\n  _IN_LOBBY_,\n  _NOT_IN_MEETING_,\n  _IN_MEETING_,\n  AUDIO_STATUS,\n  VIDEO_STATUS,\n  _SEND_RECEIVE_,\n  _RECEIVE_ONLY_,\n  _CALL_\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\n\nconst MemberUtil = {};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isUser = (participant) => participant && participant.type === _USER_;\n\nMemberUtil.isModerator = (participant) => participant && participant.moderator;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isGuest = (participant) => participant && participant.guest;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isDevice = (participant) => participant && participant.type === _RESOURCE_ROOM_;\n\nMemberUtil.isModeratorAssignmentProhibited = (participant) => participant && participant.moderatorAssignmentNotAllowed;\n\n/**\n * checks to see if the participant id is the same as the passed id\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\nMemberUtil.isSame = (participant, id) => participant &&\n  (participant.id === id || participant.person && participant.person.id === id);\n\n/**\n * checks to see if the participant id is the same as the passed id for associated devices\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\nMemberUtil.isAssociatedSame = (participant, id) => participant &&\nparticipant.associatedUsers &&\nparticipant.associatedUsers.some((user) => (user.id === id || user.person && user.person.id === id));\n\n/**\n * @param {Object} participant the locus participant\n * @param {Boolean} isGuest\n * @param {String} status\n * @returns {Boolean}\n */\nMemberUtil.isNotAdmitted = (participant, isGuest, status) => participant &&\n  participant.guest && ((participant.devices && participant.devices[0] &&\n  participant.devices[0].intent && participant.devices[0].intent.type === _WAIT_ &&\n  isGuest && status === _IN_LOBBY_) || !status === _IN_MEETING_);\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isAudioMuted = (participant) => {\n  if (!participant) {\n    throw new ParameterError('Audio could not be processed, participant is undefined.');\n  }\n  const mutedStatus = MemberUtil.isMuted(participant.status, AUDIO_STATUS);\n\n  if (participant.controls && participant.controls.audio) {\n    if (participant.controls.audio.muted) {\n      return true;\n    }\n    if (mutedStatus) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isVideoMuted = (participant) => {\n  if (!participant) {\n    throw new ParameterError('Video could not be processed, participant is undefined.');\n  }\n\n  return MemberUtil.isMuted(participant.status, VIDEO_STATUS);\n};\n\n/**\n * utility method for audio/video muted status\n * @param {String} status\n * @param {String} accessor\n * @returns {Boolean}\n */\nMemberUtil.isMuted = (status, accessor) => {\n  if (status) {\n    if (status[accessor] === _RECEIVE_ONLY_) {\n      return true;\n    }\n    if (status[accessor] === _SEND_RECEIVE_) {\n      return false;\n    }\n  }\n\n  return null;\n};\n\n/**\n * utility method for getting the recording member for later comparison\n * @param {Object} controls\n * @returns {String|null}\n */\nMemberUtil.getRecordingMember = (controls) => {\n  if (!controls) {\n    return null;\n  }\n  if (controls.record && controls.record.recording && controls.record.meta) {\n    return controls.record.meta.modifiedBy;\n  }\n\n  return null;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isRecording = (participant) => {\n  if (!participant) {\n    throw new ParameterError('Recording could not be processed, participant is undefined.');\n  }\n  if (participant.controls && participant.controls.localRecord) {\n    return participant.controls.localRecord.recording;\n  }\n\n  return false;\n};\n\nMemberUtil.isRemovable = (isSelf, isGuest, isInMeeting, type) => {\n  if (isGuest || isSelf) {\n    return false;\n  }\n  if (type === _CALL_) {\n    return false;\n  }\n  if (isInMeeting) {\n    return true;\n  }\n\n  return false;\n};\n\nMemberUtil.isMutable = (isSelf, isDevice, isInMeeting, isMuted, type) => {\n  if (!isInMeeting) {\n    return false;\n  }\n  if (isMuted) {\n    return false;\n  }\n  if (type === _CALL_) {\n    return false;\n  }\n  if (isSelf || isDevice) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractStatus = (participant) => {\n  if (!(participant && participant.devices && participant.devices.length)) {\n    return _NOT_IN_MEETING_;\n  }\n  if (participant.state === _JOINED_) {\n    return _IN_MEETING_;\n  }\n  if (participant.state === _IDLE_) {\n    if (participant.devices && participant.devices.length > 0) {\n      const foundDevice = participant.devices.find((device) => device.intent && (device.intent.type === _WAIT_ || device.intent.type === _OBSERVE_));\n\n      return foundDevice ? _IN_LOBBY_ : _NOT_IN_MEETING_;\n    }\n\n    return _NOT_IN_MEETING_;\n  }\n  if (participant.state === _LEFT_) {\n    return _NOT_IN_MEETING_;\n  }\n\n  return _NOT_IN_MEETING_;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractId = (participant) => {\n  if (participant) {\n    return participant.id;\n  }\n\n  return null;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractName = (participant) => {\n  if (participant && participant.person) {\n    return participant.person.name;\n  }\n\n  return null;\n};\n\nexport default MemberUtil;\n"]},"metadata":{},"sourceType":"script"}