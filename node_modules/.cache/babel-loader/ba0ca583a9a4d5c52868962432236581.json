{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _omit2 = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _util = _interopRequireDefault(require(\"util\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nvar _common = require(\"@webex/common\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * @class\n */\n\n\nvar ResponseLoggerInterceptor = /*#__PURE__*/function (_Interceptor) {\n  (0, _inherits2.default)(ResponseLoggerInterceptor, _Interceptor);\n\n  var _super = _createSuper(ResponseLoggerInterceptor);\n\n  function ResponseLoggerInterceptor() {\n    (0, _classCallCheck2.default)(this, ResponseLoggerInterceptor);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ResponseLoggerInterceptor, [{\n    key: \"onResponse\",\n    value:\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @param {HttpResponse} response\n     * @returns {Object}\n     */\n    function onResponse(options, response) {\n      var now = new Date();\n      this.printResponseHeader(options, response);\n      var logger = (0, _get2.default)(this, 'webex.logger', console);\n\n      if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n        logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n\n        if (typeof response.body === 'string' || (0, _common.isBuffer)(response.body)) {\n          logger.info('Response: ', 'Not printed, it`s probably a file');\n        } else if ((0, _typeof2.default)(response.body) === 'object') {\n          try {\n            logger.info('Response: ', _util.default.inspect((0, _omit2.default)(response.body, 'features'), {\n              depth: null\n            }));\n          } catch (err) {\n            logger.info('Response: ', '[Not Serializable]', err);\n          }\n        }\n      }\n\n      logger.info('\\\\**********************************************************************/');\n      return response;\n    }\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @param {Object} reason\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"onResponseError\",\n    value: function onResponseError(options, reason) {\n      var now = new Date();\n      this.printResponseHeader(options, reason);\n      var logger = (0, _get2.default)(this, 'webex.logger', console);\n\n      if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n        logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n\n        try {\n          logger.error('Response: ', _util.default.inspect(reason.body, {\n            depth: null\n          }));\n        } catch (err) {\n          logger.error('Response: ', reason.body);\n        }\n      }\n\n      logger.info('\\\\**********************************************************************/');\n      return _promise.default.reject(reason);\n    }\n    /**\n     * Prints the basic header\n     * @param {Object} options\n     * @param {HttpResponse|WebexHttpError} response\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"printResponseHeader\",\n    value: function printResponseHeader(options, response) {\n      var logger = (0, _get2.default)(this, 'webex.logger', console);\n      logger.info('Status Code:', response.statusCode);\n      logger.info('WEBEX_TRACKINGID:', (0, _get2.default)(options, 'headers.trackingid') || (0, _get2.default)(response, 'headers.trackingid'));\n      logger.info('Network duration:', options.$timings.networkEnd - options.$timings.networkStart);\n      logger.info('Processing duration:', options.$timings.requestEnd - options.$timings.requestStart);\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\n     * @returns {ResponseLoggerInterceptor}\n     */\n    function create() {\n      return new ResponseLoggerInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return ResponseLoggerInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = ResponseLoggerInterceptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;IACqBA,yB;;;;;;;;;;;;;AAQnB;AACF;AACA;AACA;AACA;AACA;AACE,wBAAWC,OAAX,EAAoBC,QAApB,EAA8B;AAC5B,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEA,WAAKC,mBAAL,CAAyBJ,OAAzB,EAAkCC,QAAlC;AAEA,UAAMI,MAAM,GAAG,mBAAI,IAAJ,EAAU,cAAV,EAA0BC,OAA1B,CAAf;;AAEA,UAAIC,OAAO,CAACC,GAARD,CAAYE,8BAAhB,EAAgD;AAC9CJ,cAAM,CAACK,IAAPL,CAAY,mBAAZA,EAAiCH,GAAG,CAACS,OAAJT,EAAjCG,EAAgDH,GAAG,CAACU,WAAJV,EAAhDG;;AACA,YAAI,OAAOJ,QAAQ,CAACY,IAAhB,KAAyB,QAAzB,IAAqC,sBAASZ,QAAQ,CAACY,IAAlB,CAAzC,EAAkE;AAChER,gBAAM,CAACK,IAAPL,CAAY,YAAZA,EAA0B,mCAA1BA;AADF,eAGK,IAAI,sBAAOJ,QAAQ,CAACY,IAAhB,MAAyB,QAA7B,EAAuC;AAC1C,cAAI;AACFR,kBAAM,CAACK,IAAPL,CAAY,YAAZA,EAA0BS,cAAKC,OAALD,CAAa,oBAAKb,QAAQ,CAACY,IAAd,EAAoB,UAApB,CAAbC,EAA8C;AAACE,mBAAK,EAAE;AAAR,aAA9CF,CAA1BT;AADF,YAGA,OAAOY,GAAP,EAAY;AACVZ,kBAAM,CAACK,IAAPL,CAAY,YAAZA,EAA0B,oBAA1BA,EAAgDY,GAAhDZ;AACD;AACF;AACF;;AACDA,YAAM,CAACK,IAAPL,CAAY,2EAAZA;AAEA,aAAOJ,QAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,yBAAgBD,OAAhB,EAAyBkB,MAAzB,EAAiC;AAC/B,UAAMhB,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEA,WAAKC,mBAAL,CAAyBJ,OAAzB,EAAkCkB,MAAlC;AAEA,UAAMb,MAAM,GAAG,mBAAI,IAAJ,EAAU,cAAV,EAA0BC,OAA1B,CAAf;;AAEA,UAAIC,OAAO,CAACC,GAARD,CAAYE,8BAAhB,EAAgD;AAC9CJ,cAAM,CAACK,IAAPL,CAAY,mBAAZA,EAAiCH,GAAG,CAACS,OAAJT,EAAjCG,EAAgDH,GAAG,CAACU,WAAJV,EAAhDG;;AACA,YAAI;AACFA,gBAAM,CAACc,KAAPd,CAAa,YAAbA,EAA2BS,cAAKC,OAALD,CAAaI,MAAM,CAACL,IAApBC,EAA0B;AAACE,iBAAK,EAAE;AAAR,WAA1BF,CAA3BT;AADF,UAGA,OAAOY,GAAP,EAAY;AACVZ,gBAAM,CAACc,KAAPd,CAAa,YAAbA,EAA2Ba,MAAM,CAACL,IAAlCR;AACD;AACF;;AACDA,YAAM,CAACK,IAAPL,CAAY,2EAAZA;AAEA,aAAOe,iBAAQC,MAAR,CAAeH,MAAf,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,6BAAoBlB,OAApB,EAA6BC,QAA7B,EAAuC;AACrC,UAAMI,MAAM,GAAG,mBAAI,IAAJ,EAAU,cAAV,EAA0BC,OAA1B,CAAf;AAEAD,YAAM,CAACK,IAAPL,CAAY,cAAZA,EAA4BJ,QAAQ,CAACqB,UAArCjB;AACAA,YAAM,CAACK,IAAPL,CAAY,mBAAZA,EAAiC,mBAAIL,OAAJ,EAAa,oBAAb,KAAsC,mBAAIC,QAAJ,EAAc,oBAAd,CAAvEI;AACAA,YAAM,CAACK,IAAPL,CAAY,mBAAZA,EAAiCL,OAAO,CAACuB,QAARvB,CAAiBwB,UAAjBxB,GAA8BA,OAAO,CAACuB,QAARvB,CAAiByB,YAAhFpB;AACAA,YAAM,CAACK,IAAPL,CAAY,sBAAZA,EAAoCL,OAAO,CAACuB,QAARvB,CAAiB0B,UAAjB1B,GAA8BA,OAAO,CAACuB,QAARvB,CAAiB2B,YAAnFtB;AACD;;;;AA/ED;AACF;AACA;AACE,sBAAgB;AACd,aAAO,IAAIN,yBAAJ,CAA8B;AAAC6B,aAAK,EAAE;AAAR,OAA9B,CAAP;AACD;;;EANoDC,qB","names":["ResponseLoggerInterceptor","options","response","now","Date","printResponseHeader","logger","console","process","env","ENABLE_VERBOSE_NETWORK_LOGGING","info","getTime","toISOString","body","util","inspect","depth","err","reason","error","_promise","reject","statusCode","$timings","networkEnd","networkStart","requestEnd","requestStart","webex","Interceptor"],"sources":["response-logger.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport util from 'util';\n\nimport {get, omit} from 'lodash';\nimport {Interceptor} from '@webex/http-core';\nimport {isBuffer} from '@webex/common';\n\n/**\n * @class\n */\nexport default class ResponseLoggerInterceptor extends Interceptor {\n  /**\n   * @returns {ResponseLoggerInterceptor}\n   */\n  static create() {\n    return new ResponseLoggerInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Object}\n   */\n  onResponse(options, response) {\n    const now = new Date();\n\n    this.printResponseHeader(options, response);\n\n    const logger = get(this, 'webex.logger', console);\n\n    if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n      logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n      if (typeof response.body === 'string' || isBuffer(response.body)) {\n        logger.info('Response: ', 'Not printed, it`s probably a file');\n      }\n      else if (typeof response.body === 'object') {\n        try {\n          logger.info('Response: ', util.inspect(omit(response.body, 'features'), {depth: null}));\n        }\n        catch (err) {\n          logger.info('Response: ', '[Not Serializable]', err);\n        }\n      }\n    }\n    logger.info('\\\\**********************************************************************/');\n\n    return response;\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @param {Object} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    const now = new Date();\n\n    this.printResponseHeader(options, reason);\n\n    const logger = get(this, 'webex.logger', console);\n\n    if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n      logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n      try {\n        logger.error('Response: ', util.inspect(reason.body, {depth: null}));\n      }\n      catch (err) {\n        logger.error('Response: ', reason.body);\n      }\n    }\n    logger.info('\\\\**********************************************************************/');\n\n    return Promise.reject(reason);\n  }\n\n  /**\n   * Prints the basic header\n   * @param {Object} options\n   * @param {HttpResponse|WebexHttpError} response\n   * @returns {undefined}\n   */\n  printResponseHeader(options, response) {\n    const logger = get(this, 'webex.logger', console);\n\n    logger.info('Status Code:', response.statusCode);\n    logger.info('WEBEX_TRACKINGID:', get(options, 'headers.trackingid') || get(response, 'headers.trackingid'));\n    logger.info('Network duration:', options.$timings.networkEnd - options.$timings.networkStart);\n    logger.info('Processing duration:', options.$timings.requestEnd - options.$timings.requestStart);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}