{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * @class\n * @ignore\n */\n\n\nvar PresenceBatcher = _webexCore.Batcher.extend({\n  namespace: 'Presence',\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess: function handleHttpSuccess(res) {\n    var _this = this;\n\n    return _promise.default.all(res.body.statusList.map(function (presenceResponse) {\n      return _this.handleItemSuccess(presenceResponse.subject, presenceResponse);\n    }));\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemFailure: function handleItemFailure(item, response) {\n    return this.getDeferredForResponse(item).then(function (defer) {\n      defer.reject(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess: function handleItemSuccess(item, response) {\n    return this.getDeferredForResponse(item).then(function (defer) {\n      defer.resolve(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest: function fingerprintRequest(id) {\n    return _promise.default.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse: function fingerprintResponse(id) {\n    return _promise.default.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Array} ids\n   * @returns {Promise<Array>}\n   */\n  prepareRequest: function prepareRequest(ids) {\n    return _promise.default.resolve(ids);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Object} subjects\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest: function submitHttpRequest(subjects) {\n    return this.webex.request({\n      method: 'POST',\n      api: 'apheleia',\n      resource: 'compositions',\n      body: {\n        subjects: subjects\n      }\n    });\n  }\n});\n\nvar _default = PresenceBatcher;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAIA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;;;AACA,IAAMA,eAAe,GAAGC,mBAAQC,MAARD,CAAe;AACrCE,WAAS,EAAE,UAD0B;;AAGrC;AACF;AACA;AACA;AACA;AACA;AACEC,mBATqC,6BASnBC,GATmB,EASd;AAAA;;AACrB,WAAOC,iBAAQC,GAAR,CAAYF,GAAG,CAACG,IAAJH,CAASI,UAATJ,CAAoBK,GAApBL,CAAwB,UAACM,gBAAD;AAAA,aACzCC,KAAI,CAACC,iBAAL,CAAuBF,gBAAgB,CAACG,OAAxC,EAAiDH,gBAAjD,CADyC;AAAxB,MAAZ,CAAP;AAVmC;;AAcrC;AACF;AACA;AACA;AACA;AACA;AACA;AACEI,mBArBqC,6BAqBnBC,IArBmB,EAqBbC,QArBa,EAqBH;AAChC,WAAO,KAAKC,sBAAL,CAA4BF,IAA5B,EACJG,IADI,CACC,UAACC,KAAD,EAAW;AACfA,WAAK,CAACC,MAAND,CAAaH,QAAbG;AAFG,MAAP;AAtBmC;;AA4BrC;AACF;AACA;AACA;AACA;AACA;AACA;AACEP,mBAnCqC,6BAmCnBG,IAnCmB,EAmCbC,QAnCa,EAmCH;AAChC,WAAO,KAAKC,sBAAL,CAA4BF,IAA5B,EACJG,IADI,CACC,UAACC,KAAD,EAAW;AACfA,WAAK,CAACE,OAANF,CAAcH,QAAdG;AAFG,MAAP;AApCmC;;AA0CrC;AACF;AACA;AACA;AACA;AACA;AACEG,oBAhDqC,8BAgDlBC,EAhDkB,EAgDd;AACrB,WAAOlB,iBAAQgB,OAAR,CAAgBE,EAAhB,CAAP;AAjDmC;;AAoDrC;AACF;AACA;AACA;AACA;AACA;AACEC,qBA1DqC,+BA0DjBD,EA1DiB,EA0Db;AACtB,WAAOlB,iBAAQgB,OAAR,CAAgBE,EAAhB,CAAP;AA3DmC;;AA8DrC;AACF;AACA;AACA;AACA;AACA;AACEE,gBApEqC,0BAoEtBC,GApEsB,EAoEjB;AAClB,WAAOrB,iBAAQgB,OAAR,CAAgBK,GAAhB,CAAP;AArEmC;;AAwErC;AACF;AACA;AACA;AACA;AACA;AACEC,mBA9EqC,6BA8EnBC,QA9EmB,EA8ET;AAC1B,WAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;AACxBC,YAAM,EAAE,MADgB;AAExBC,SAAG,EAAE,UAFmB;AAGxBC,cAAQ,EAAE,cAHc;AAIxB1B,UAAI,EAAE;AAACqB,gBAAQ,EAARA;AAAD;AAJkB,KAAnB,CAAP;AAMD;AArFoC,CAAf5B,CAAxB;;eAwFeD","names":["PresenceBatcher","Batcher","extend","namespace","handleHttpSuccess","res","_promise","all","body","statusList","map","presenceResponse","_this","handleItemSuccess","subject","handleItemFailure","item","response","getDeferredForResponse","then","defer","reject","resolve","fingerprintRequest","id","fingerprintResponse","prepareRequest","ids","submitHttpRequest","subjects","webex","request","method","api","resource"],"sources":["presence-batcher.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Batcher} from '@webex/webex-core';\n\n/**\n * @class\n * @ignore\n */\nconst PresenceBatcher = Batcher.extend({\n  namespace: 'Presence',\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess(res) {\n    return Promise.all(res.body.statusList.map((presenceResponse) =>\n      this.handleItemSuccess(presenceResponse.subject, presenceResponse)));\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemFailure(item, response) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.reject(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess(item, response) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.resolve(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest(id) {\n    return Promise.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse(id) {\n    return Promise.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Array} ids\n   * @returns {Promise<Array>}\n   */\n  prepareRequest(ids) {\n    return Promise.resolve(ids);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Object} subjects\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest(subjects) {\n    return this.webex.request({\n      method: 'POST',\n      api: 'apheleia',\n      resource: 'compositions',\n      body: {subjects}\n    });\n  }\n});\n\nexport default PresenceBatcher;\n"]},"metadata":{},"sourceType":"script"}