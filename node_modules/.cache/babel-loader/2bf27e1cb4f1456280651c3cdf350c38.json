{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n_Object$defineProperty(exports, \"HttpStatusInterceptor\", {\n  enumerable: true,\n  get: function get() {\n    return _httpStatus.default;\n  }\n});\n\n_Object$defineProperty(exports, \"ProgressEvent\", {\n  enumerable: true,\n  get: function get() {\n    return _progressEvent.default;\n  }\n});\n\n_Object$defineProperty(exports, \"Interceptor\", {\n  enumerable: true,\n  get: function get() {\n    return _interceptor.default;\n  }\n});\n\n_Object$defineProperty(exports, \"HttpError\", {\n  enumerable: true,\n  get: function get() {\n    return _httpError.default;\n  }\n});\n\n_Object$defineProperty(exports, \"detect\", {\n  enumerable: true,\n  get: function get() {\n    return _detect.default;\n  }\n});\n\nexports.request = exports.defaults = void 0;\n\nvar _getOwnPropertyDescriptor = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/get-own-property-descriptor\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/define-property\"));\n\nvar _deleteProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/delete-property\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _defaults2 = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _curry2 = _interopRequireDefault(require(\"lodash/curry\"));\n\nvar _assign2 = _interopRequireDefault(require(\"lodash/assign\"));\n\nvar _httpStatus = _interopRequireDefault(require(\"./interceptors/http-status\"));\n\nvar _request2 = _interopRequireDefault(require(\"./request\"));\n\nvar _progressEvent = _interopRequireDefault(require(\"./progress-event\"));\n\nvar _interceptor = _interopRequireDefault(require(\"./lib/interceptor\"));\n\nvar _httpError = _interopRequireDefault(require(\"./http-error\"));\n\nvar _detect = _interopRequireDefault(require(\"./lib/detect\")); // Curry protorequest so we generate a function with default options built in.\n\n\nvar protorequest = (0, _curry2.default)(function protorequest(defaultOptions, options) {\n  // allow for options to be a string (and therefore expect options in the third\n  // position) to match request's api.\n  if ((0, _isString2.default)(options)) {\n    var uri = options;\n    /* eslint prefer-rest-params: [0] */\n\n    options = arguments[2] || {};\n    options.uri = uri;\n  } // Hide useless elements from logs\n\n\n  ['download', 'interceptors', 'logger', 'upload'].forEach(function (prop) {\n    var descriptor = (0, _getOwnPropertyDescriptor.default)(options, prop);\n    descriptor = (0, _assign2.default)({}, descriptor, {\n      enumerable: false,\n      writable: true\n    });\n    (0, _defineProperty.default)(options, prop, descriptor);\n  });\n  (0, _defaults2.default)(options, defaultOptions);\n\n  if (!options.json && options.json !== false) {\n    (0, _deleteProperty.default)(options, 'json');\n  }\n\n  options.logger = options.logger || this.logger || console;\n  return (0, _request2.default)(options);\n});\nvar defaultOptions = {\n  json: true,\n  interceptors: [// Reminder: this is supposed to be an instantiated interceptor.\n  _httpStatus.default.create()]\n};\nvar defaults = protorequest;\nexports.defaults = defaults;\nvar request = protorequest(defaultOptions);\nexports.request = request;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;AAmDA;;AACA;;AACA;;AAEA,8D,CArDA;;;AACA,IAAMA,YAAY,GAAG,qBAAM,SAASA,YAAT,CAAsBC,cAAtB,EAAsCC,OAAtC,EAA+C;AACxE;AACA;AACA,MAAI,wBAASA,OAAT,CAAJ,EAAuB;AACrB,QAAMC,GAAG,GAAGD,OAAZ;AAEA;;AACAA,WAAO,GAAGE,SAAS,CAAC,CAAD,CAATA,IAAgB,EAA1BF;AACAA,WAAO,CAACC,GAARD,GAAcC,GAAdD;AARsE,IAWxE;;;AACA,GACE,UADF,EAEE,cAFF,EAGE,QAHF,EAIE,QAJF,EAKEG,OALF,CAKU,UAACC,IAAD,EAAU;AAClB,QAAIC,UAAU,GAAG,uCAAiCL,OAAjC,EAA0CI,IAA1C,CAAjB;AAEAC,cAAU,GAAG,sBAAO,EAAP,EAAWA,UAAX,EAAuB;AAClCC,gBAAU,EAAE,KADsB;AAElCC,cAAQ,EAAE;AAFwB,KAAvB,CAAbF;AAIA,iCAAuBL,OAAvB,EAAgCI,IAAhC,EAAsCC,UAAtC;AAZF;AAeA,0BAAeL,OAAf,EAAwBD,cAAxB;;AAEA,MAAI,CAACC,OAAO,CAACQ,IAAT,IAAiBR,OAAO,CAACQ,IAARR,KAAiB,KAAtC,EAA6C;AAC3C,iCAAuBA,OAAvB,EAAgC,MAAhC;AACD;;AAEDA,SAAO,CAACS,MAART,GAAiBA,OAAO,CAACS,MAART,IAAkB,KAAKS,MAAvBT,IAAiCU,OAAlDV;AAEA,SAAO,uBAASA,OAAT,CAAP;AAnCmB,EAArB;AAsCA,IAAMD,cAAc,GAAG;AACrBS,MAAI,EAAE,IADe;AAErBG,cAAY,EAAE,CACZ;AACAC,sBAAsBC,MAAtBD,EAFY;AAFO,CAAvB;AAQO,IAAME,QAAQ,GAAGhB,YAAjB;;AACA,IAAMiB,OAAO,GAAGjB,YAAY,CAACC,cAAD,CAA5B","names":["protorequest","defaultOptions","options","uri","arguments","forEach","prop","descriptor","enumerable","writable","json","logger","console","interceptors","HttpStatusInterceptor","create","defaults","request"],"sources":["index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {assign, curry, defaults as lodashDefaults, isString} from 'lodash';\n\nimport HttpStatusInterceptor from './interceptors/http-status';\nimport _request from './request';\n\n// Curry protorequest so we generate a function with default options built in.\nconst protorequest = curry(function protorequest(defaultOptions, options) {\n  // allow for options to be a string (and therefore expect options in the third\n  // position) to match request's api.\n  if (isString(options)) {\n    const uri = options;\n\n    /* eslint prefer-rest-params: [0] */\n    options = arguments[2] || {};\n    options.uri = uri;\n  }\n\n  // Hide useless elements from logs\n  [\n    'download',\n    'interceptors',\n    'logger',\n    'upload'\n  ].forEach((prop) => {\n    let descriptor = Reflect.getOwnPropertyDescriptor(options, prop);\n\n    descriptor = assign({}, descriptor, {\n      enumerable: false,\n      writable: true\n    });\n    Reflect.defineProperty(options, prop, descriptor);\n  });\n\n  lodashDefaults(options, defaultOptions);\n\n  if (!options.json && options.json !== false) {\n    Reflect.deleteProperty(options, 'json');\n  }\n\n  options.logger = options.logger || this.logger || console;\n\n  return _request(options);\n});\n\nconst defaultOptions = {\n  json: true,\n  interceptors: [\n    // Reminder: this is supposed to be an instantiated interceptor.\n    HttpStatusInterceptor.create()\n  ]\n};\n\nexport const defaults = protorequest;\nexport const request = protorequest(defaultOptions);\nexport {default as ProgressEvent} from './progress-event';\nexport {default as Interceptor} from './lib/interceptor';\nexport {default as HttpError} from './http-error';\nexport {default as HttpStatusInterceptor} from './interceptors/http-status';\nexport {default as detect} from './lib/detect';\n"]},"metadata":{},"sourceType":"script"}