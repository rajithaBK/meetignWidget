{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = toArray;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n/**\n * Helper to convert objects into arrays of transforms. probably belongs in\n * webex-core\n * @param {string} direction \"inbound\"|\"outbound\"\n * @param {Object} obj\n * @private\n * @returns {Array}\n */\n\n\nfunction toArray(direction, obj) {\n  return (0, _keys.default)(obj).map(function (name) {\n    var entry = obj[name];\n\n    if ((0, _isFunction2.default)(entry)) {\n      return {\n        name: name,\n        direction: direction,\n        fn: entry\n      };\n    }\n\n    return (0, _assign.default)({\n      name: name\n    }, entry);\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASA,OAAT,CAAiBC,SAAjB,EAA4BC,GAA5B,EAAiC;AAC9C,SAAO,mBAAYA,GAAZ,EAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAU;AACpC,QAAMC,KAAK,GAAGH,GAAG,CAACE,IAAD,CAAjB;;AAEA,QAAI,0BAAWC,KAAX,CAAJ,EAAuB;AACrB,aAAO;AACLD,YAAI,EAAJA,IADK;AAELH,iBAAS,EAATA,SAFK;AAGLK,UAAE,EAAED;AAHC,OAAP;AAKD;;AAED,WAAO,qBAAc;AAACD,UAAI,EAAJA;AAAD,KAAd,EAAsBC,KAAtB,CAAP;AAXK,IAAP;AAaD","names":["toArray","direction","obj","map","name","entry","fn"],"sources":["to-array.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {isFunction} from 'lodash';\n\n/**\n * Helper to convert objects into arrays of transforms. probably belongs in\n * webex-core\n * @param {string} direction \"inbound\"|\"outbound\"\n * @param {Object} obj\n * @private\n * @returns {Array}\n */\nexport default function toArray(direction, obj) {\n  return Object.keys(obj).map((name) => {\n    const entry = obj[name];\n\n    if (isFunction(entry)) {\n      return {\n        name,\n        direction,\n        fn: entry\n      };\n    }\n\n    return Object.assign({name}, entry);\n  });\n}\n"]},"metadata":{},"sourceType":"script"}