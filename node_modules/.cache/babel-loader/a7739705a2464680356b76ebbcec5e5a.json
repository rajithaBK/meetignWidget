{"ast":null,"code":"\"use strict\";\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _isEmpty2 = _interopRequireDefault(require(\"lodash/isEmpty\"));\n\nvar _webexErrors = require(\"../common/errors/webex-errors\");\n\nvar _util = _interopRequireDefault(require(\"../stats/util\"));\n\nvar _metrics = _interopRequireDefault(require(\"../metrics\"));\n\nvar _config = require(\"../metrics/config\");\n\nvar _media = _interopRequireDefault(require(\"../media\"));\n\nvar _loggerProxy = _interopRequireDefault(require(\"../common/logs/logger-proxy\"));\n\nvar _index = _interopRequireDefault(require(\"../stats/index\"));\n\nvar _constants = require(\"../constants\");\n\nvar _triggerProxy = _interopRequireDefault(require(\"../common/events/trigger-proxy\"));\n\nvar _intentToJoin = _interopRequireDefault(require(\"../common/errors/intent-to-join\"));\n\nvar _joinMeeting = _interopRequireDefault(require(\"../common/errors/join-meeting\"));\n\nvar _parameter = _interopRequireDefault(require(\"../common/errors/parameter\"));\n\nvar _permission = _interopRequireDefault(require(\"../common/errors/permission\"));\n\nvar _passwordError = _interopRequireDefault(require(\"../common/errors/password-error\"));\n\nvar _captchaError = _interopRequireDefault(require(\"../common/errors/captcha-error\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar MeetingUtil = {};\n\nMeetingUtil.parseLocusJoin = function (response) {\n  var parsed = {}; // First todo: add check for existance\n\n  parsed.locus = response.body.locus;\n  parsed.mediaConnections = response.body.mediaConnections;\n  parsed.locusUrl = parsed.locus.url;\n  parsed.locusId = parsed.locus.url.split('/').pop();\n  parsed.selfId = parsed.locus.self.id; // we need mediaId before making roap calls\n\n  parsed.mediaConnections.forEach(function (mediaConnection) {\n    if (mediaConnection.mediaId) {\n      parsed.mediaId = mediaConnection.mediaId;\n    }\n  });\n  return parsed;\n};\n\nMeetingUtil.remoteUpdateAudioVideo = function (audioMuted, videoMuted, meeting) {\n  if (!meeting) {\n    return _promise.default.reject(new _parameter.default('You need a meeting object.'));\n  }\n\n  var localMedias = _media.default.generateLocalMedias(meeting.mediaId, audioMuted, videoMuted);\n\n  if ((0, _isEmpty2.default)(localMedias)) {\n    return _promise.default.reject(new _parameter.default('You need a media id on the meeting to change remote audio.'));\n  }\n\n  _metrics.default.postEvent({\n    event: _config.eventType.MEDIA_REQUEST,\n    meeting: meeting\n  });\n\n  return meeting.meetingRequest.remoteAudioVideoToggle({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    localMedias: localMedias,\n    deviceUrl: meeting.deviceUrl,\n    correlationId: meeting.correlationId\n  }).then(function (response) {\n    _metrics.default.postEvent({\n      event: _config.eventType.MEDIA_RESPONSE,\n      meeting: meeting\n    });\n\n    return response.body.locus;\n  });\n};\n\nMeetingUtil.hasOwner = function (info) {\n  return info && info.owner;\n};\n\nMeetingUtil.isOwnerSelf = function (owner, selfId) {\n  return owner === selfId;\n};\n\nMeetingUtil.isPinOrGuest = function (err) {\n  var _err$body;\n\n  return (err === null || err === void 0 ? void 0 : (_err$body = err.body) === null || _err$body === void 0 ? void 0 : _err$body.errorCode) && _constants.INTENT_TO_JOIN.includes(err.body.errorCode);\n};\n\nMeetingUtil.joinMeeting = function (meeting, options) {\n  if (!meeting) {\n    return _promise.default.reject(new _parameter.default('You need a meeting object.'));\n  }\n\n  _metrics.default.postEvent({\n    event: _config.eventType.LOCUS_JOIN_REQUEST,\n    meeting: meeting\n  }); // eslint-disable-next-line no-warning-comments\n  // TODO: check if the meeting is in JOINING state\n  // if Joining state termintate the request as user might click multiple times\n\n\n  return meeting.meetingRequest.joinMeeting({\n    inviteeAddress: meeting.meetingJoinUrl || meeting.sipUri,\n    meetingNumber: meeting.meetingNumber,\n    deviceUrl: meeting.deviceUrl,\n    locusUrl: meeting.locusUrl,\n    correlationId: meeting.correlationId,\n    roapMessage: options.roapMessage,\n    permissionToken: meeting.permissionToken,\n    resourceId: options.resourceId || null,\n    moderator: options.moderator,\n    pin: options.pin,\n    moveToResource: options.moveToResource,\n    preferTranscoding: options.preferTranscoding,\n    asResourceOccupant: options.asResourceOccupant\n  }).then(function (res) {\n    _metrics.default.postEvent({\n      event: _config.eventType.LOCUS_JOIN_RESPONSE,\n      meeting: meeting,\n      data: {\n        trigger: _config.trigger.LOCI_UPDATE,\n        locus: res.body.locus,\n        mediaConnections: res.body.mediaConnections,\n        trackingId: res.headers.trackingid\n      }\n    });\n\n    return MeetingUtil.parseLocusJoin(res);\n  });\n};\n\nMeetingUtil.cleanUp = function (meeting) {\n  // make sure we send last metrics before we close the peerconnection\n  if (meeting.statsAnalyzer) meeting.statsAnalyzer.stopAnalyzer();\n  return meeting.closeLocalStream().then(function () {\n    return meeting.closeLocalShare();\n  }).then(function () {\n    return meeting.closeRemoteTracks();\n  }).then(function () {\n    return meeting.closePeerConnections();\n  }).then(function () {\n    meeting.unsetLocalVideoTrack();\n    meeting.unsetLocalShareTrack();\n    meeting.unsetRemoteTracks();\n    meeting.unsetPeerConnections();\n    meeting.cleanMQAInterval();\n    meeting.reconnectionManager.cleanUp();\n  }).then(function () {\n    return meeting.roap.stop(meeting.correlationId, meeting.roapSeq);\n  });\n};\n\nMeetingUtil.disconnectPhoneAudio = function (meeting, phoneUrl) {\n  if (meeting.meetingState === _constants.FULL_STATE.INACTIVE) {\n    return _promise.default.reject(new _webexErrors.MeetingNotActiveError());\n  }\n\n  var options = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    phoneUrl: phoneUrl\n  };\n  return meeting.meetingRequest.disconnectPhoneAudio(options).then(function (response) {\n    var _response$body;\n\n    if (response !== null && response !== void 0 && (_response$body = response.body) !== null && _response$body !== void 0 && _response$body.locus) {\n      meeting.locusInfo.onFullLocus(response.body.locus);\n    }\n  }).catch(function (err) {\n    _loggerProxy.default.logger.error(\"Meeting:util#disconnectPhoneAudio --> An error occured while disconnecting phone audio in meeting \".concat(meeting.id, \", error: \").concat(err));\n\n    return _promise.default.reject(err);\n  });\n}; // by default will leave on meeting's resourceId\n// if you explicity want it not to leave on resource id, pass\n// {resourceId: null}\n// TODO: chris, you can modify this however you want\n\n\nMeetingUtil.leaveMeeting = function (meeting) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (meeting.meetingState === _constants.FULL_STATE.INACTIVE) {\n    // TODO: clean up if the meeting is already inactive\n    return _promise.default.reject(new _webexErrors.MeetingNotActiveError());\n  }\n\n  if (MeetingUtil.isUserInLeftState(meeting.locusInfo)) {\n    return _promise.default.reject(new _webexErrors.UserNotJoinedError());\n  }\n\n  var defaultOptions = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    resourceId: meeting.resourceId,\n    deviceUrl: meeting.deviceUrl\n  };\n\n  var leaveOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n\n  return meeting.meetingRequest.leaveMeeting(leaveOptions).then(function (response) {\n    if (response && response.body && response.body.locus) {\n      // && !options.moveMeeting) {\n      meeting.locusInfo.onFullLocus(response.body.locus);\n    }\n\n    return _promise.default.resolve();\n  }).then(function () {\n    if (options.moveMeeting) {\n      return _promise.default.resolve();\n    }\n\n    return MeetingUtil.cleanUp(meeting);\n  }).catch(function (err) {\n    // TODO: If the meeting state comes as LEFT or INACTIVE as response then\n    // 1)  on leave clean up the meeting or simply do a sync on the meeting\n    // 2) If the error says meeting is inactive then destroy the meeting object\n    _loggerProxy.default.logger.error(\"Meeting:util#leaveMeeting --> An error occured while trying to leave meeting with an id of \".concat(meeting.id, \", error: \").concat(err));\n\n    return _promise.default.reject(err);\n  });\n};\n\nMeetingUtil.declineMeeting = function (meeting, reason) {\n  return meeting.meetingRequest.declineMeeting({\n    locusUrl: meeting.locusUrl,\n    deviceUrl: meeting.deviceUrl,\n    reason: reason\n  });\n};\n\nMeetingUtil.isUserInLeftState = function (locusInfo) {\n  var _locusInfo$parsedLocu, _locusInfo$parsedLocu2;\n\n  return ((_locusInfo$parsedLocu = locusInfo.parsedLocus) === null || _locusInfo$parsedLocu === void 0 ? void 0 : (_locusInfo$parsedLocu2 = _locusInfo$parsedLocu.self) === null || _locusInfo$parsedLocu2 === void 0 ? void 0 : _locusInfo$parsedLocu2.state) === _constants._LEFT_;\n};\n\nMeetingUtil.isUserInIdleState = function (locusInfo) {\n  var _locusInfo$parsedLocu3, _locusInfo$parsedLocu4;\n\n  return ((_locusInfo$parsedLocu3 = locusInfo.parsedLocus) === null || _locusInfo$parsedLocu3 === void 0 ? void 0 : (_locusInfo$parsedLocu4 = _locusInfo$parsedLocu3.self) === null || _locusInfo$parsedLocu4 === void 0 ? void 0 : _locusInfo$parsedLocu4.state) === _constants._IDLE_;\n};\n\nMeetingUtil.isUserInJoinedState = function (locusInfo) {\n  var _locusInfo$parsedLocu5, _locusInfo$parsedLocu6;\n\n  return ((_locusInfo$parsedLocu5 = locusInfo.parsedLocus) === null || _locusInfo$parsedLocu5 === void 0 ? void 0 : (_locusInfo$parsedLocu6 = _locusInfo$parsedLocu5.self) === null || _locusInfo$parsedLocu6 === void 0 ? void 0 : _locusInfo$parsedLocu6.state) === _constants._JOINED_;\n};\n\nMeetingUtil.isMediaEstablished = function (currentMediaStatus) {\n  return currentMediaStatus && (currentMediaStatus.audio || currentMediaStatus.video || currentMediaStatus.share);\n};\n\nMeetingUtil.joinMeetingOptions = function (meeting) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  meeting.resourceId = meeting.resourceId || options.resourceId;\n\n  if (meeting.requiredCaptcha) {\n    return _promise.default.reject(new _captchaError.default());\n  }\n\n  if (meeting.passwordStatus === _constants.PASSWORD_STATUS.REQUIRED) {\n    return _promise.default.reject(new _passwordError.default());\n  }\n\n  if (options.pin) {\n    _metrics.default.postEvent({\n      event: _config.eventType.PIN_COLLECTED,\n      meeting: meeting\n    });\n  } // normal join meeting, scenario A, D\n\n\n  return MeetingUtil.joinMeeting(meeting, options).then(function (response) {\n    meeting.setLocus(response);\n    return _promise.default.resolve(response);\n  }).catch(function (err) {\n    // joining a claimed PMR that is not my own, scenario B\n    if (MeetingUtil.isPinOrGuest(err)) {\n      _metrics.default.postEvent({\n        event: _config.eventType.PIN_PROMPT,\n        meeting: meeting\n      }); // request host pin or non host for unclaimed PMR, start of Scenario C\n      // see https://sqbu-github.cisco.com/WebExSquared/locus/wiki/Locus-Lobby-and--IVR-Feature\n\n\n      return _promise.default.reject(new _intentToJoin.default('Error Joining Meeting', err));\n    }\n\n    _loggerProxy.default.logger.error('Meeting:util#joinMeetingOptions --> Error joining the call, ', err);\n\n    return _promise.default.reject(new _joinMeeting.default(options, 'Error Joining Meeting', err));\n  });\n};\n\nMeetingUtil.updateTransceiver = function (options, meetingOptions) {\n  var type = options.type,\n      sendTrack = options.sendTrack,\n      receiveTrack = options.receiveTrack,\n      track = options.track,\n      transceiver = options.transceiver,\n      peerConnection = options.peerConnection,\n      previousMediaDirection = options.previousMediaDirection;\n\n  if (sendTrack !== undefined && sendTrack !== previousMediaDirection.sendTrack || receiveTrack !== undefined && receiveTrack !== previousMediaDirection.receiveTrack) {\n    return _media.default.updateTransceiver({\n      meetingId: meetingOptions.meeting.id,\n      remoteQualityLevel: meetingOptions.mediaProperties.remoteQualityLevel,\n      enableRtx: meetingOptions.meeting.config.enableRtx,\n      enableExtmap: meetingOptions.meeting.config.enableExtmap\n    }, peerConnection, transceiver, {\n      track: track,\n      type: type,\n      receiveTrack: receiveTrack,\n      sendTrack: sendTrack\n    }).then(function () {\n      return meetingOptions.meeting.roap.sendRoapMediaRequest({\n        sdp: meetingOptions.mediaProperties.peerConnection.sdp,\n        roapSeq: meetingOptions.meeting.roapSeq,\n        meeting: meetingOptions.meeting // or can pass meeting ID\n\n      });\n    }).catch(function (e) {\n      _loggerProxy.default.logger.error(\"Meeting:util#updateTransceiver --> Error updating the \".concat(type, \" streams with error: \").concat(e));\n    });\n  }\n\n  if (track) {\n    transceiver.sender.replaceTrack(track);\n    return _promise.default.resolve();\n  }\n\n  return _promise.default.reject(new _parameter.default('update Failed: please pass valid parameter'));\n};\n\nMeetingUtil.validateOptions = function (options) {\n  var sendVideo = options.sendVideo,\n      sendAudio = options.sendAudio,\n      sendShare = options.sendShare,\n      localStream = options.localStream,\n      localShare = options.localShare;\n\n  if (sendVideo && !MeetingUtil.getTrack(localStream).videoTrack) {\n    return _promise.default.reject(new _parameter.default('please pass valid video streams'));\n  }\n\n  if (sendAudio && !MeetingUtil.getTrack(localStream).audioTrack) {\n    return _promise.default.reject(new _parameter.default('please pass valid audio streams'));\n  }\n\n  if (sendShare && !MeetingUtil.getTrack(localShare).videoTrack) {\n    return _promise.default.reject(new _parameter.default('please pass valid share streams'));\n  }\n\n  return _promise.default.resolve();\n};\n\nMeetingUtil.getTrack = function (stream) {\n  var audioTrack = null;\n  var videoTrack = null;\n  var audioTracks = null;\n  var videoTracks = null;\n\n  if (!stream) {\n    return {\n      audioTrack: null,\n      videoTrack: null\n    };\n  }\n\n  if (stream.getAudioTracks) {\n    audioTracks = stream.getAudioTracks();\n  }\n\n  if (stream.getVideoTracks) {\n    videoTracks = stream.getVideoTracks();\n  }\n\n  if (audioTracks && audioTracks.length > 0) {\n    var _audioTracks = audioTracks;\n\n    var _audioTracks2 = (0, _slicedToArray2.default)(_audioTracks, 1);\n\n    audioTrack = _audioTracks2[0];\n  }\n\n  if (videoTracks && videoTracks.length > 0) {\n    var _videoTracks = videoTracks;\n\n    var _videoTracks2 = (0, _slicedToArray2.default)(_videoTracks, 1);\n\n    videoTrack = _videoTracks2[0];\n  }\n\n  return {\n    audioTrack: audioTrack,\n    videoTrack: videoTrack\n  };\n};\n\nMeetingUtil.getModeratorFromLocusInfo = function (locusInfo) {\n  return locusInfo && locusInfo.parsedLocus && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info.moderator;\n};\n\nMeetingUtil.getPolicyFromLocusInfo = function (locusInfo) {\n  return locusInfo && locusInfo.parsedLocus && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info.policy;\n};\n\nMeetingUtil.canUserLock = function (moderator, joined) {\n  if (moderator.LOCK_CONTROL_LOCK && joined.LOCK_STATUS_UNLOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserUnlock = function (moderator, joined) {\n  if (moderator.LOCK_CONTROL_UNLOCK && joined.LOCK_STATUS_LOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserRecord = function (moderator) {\n  return moderator.RECORDING_CONTROL_START;\n};\n\nMeetingUtil.canUserPause = function (moderator) {\n  return moderator.RECORDING_CONTROL_PAUSE;\n};\n\nMeetingUtil.canUserResume = function (moderator) {\n  return moderator.RECORDING_CONTROL_RESUME;\n};\n\nMeetingUtil.canUserStop = function (moderator) {\n  return moderator.RECORDING_CONTROL_STOP;\n};\n\nMeetingUtil.startRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserRecord(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: true,\n      paused: false\n    });\n  }\n\n  return _promise.default.reject(new _permission.default('Start recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.pauseRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserPause(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: true,\n      paused: true\n    });\n  }\n\n  return _promise.default.reject(new _permission.default('Pause recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.resumeRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserResume(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: true,\n      paused: false\n    });\n  }\n\n  return _promise.default.reject(new _permission.default('Resume recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.stopRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserStop(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: false,\n      paused: false\n    });\n  }\n\n  return _promise.default.reject(new _permission.default('Stop recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.lockMeeting = function (actions, request, locusUrl) {\n  if (actions && actions.canLock) {\n    return request.lockMeeting({\n      locusUrl: locusUrl,\n      lock: true\n    });\n  }\n\n  return _promise.default.reject(new _permission.default('Lock not allowed, due to joined property.'));\n};\n\nMeetingUtil.unlockMeeting = function (actions, request, locusUrl) {\n  if (actions && actions.canUnlock) {\n    return request.lockMeeting({\n      locusUrl: locusUrl,\n      lock: false\n    });\n  }\n\n  return _promise.default.reject(new _permission.default('Unlock not allowed, due to joined property.'));\n};\n\nMeetingUtil.startInternalStats = function (meeting) {\n  if (!meeting.internalStats) {\n    var options = {\n      useConfig: true,\n      senders: [{\n        id: 'mainAudio',\n        correlate: 'audio',\n        history: true,\n        onEvent: function onEvent(event) {\n          // TODO: we don't need checks like this since it comes from the transceiver\n          // refactor event linkage to use callbacks instead of events\n          if (event.kind === 'audio' && event.stat === 'bytesSent') {\n            _triggerProxy.default.trigger(meeting, {\n              file: 'meeting/util',\n              function: 'startInternalStats'\n            }, _constants.EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED, {\n              type: _config.mediaType.AUDIO\n            });\n\n            _metrics.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesSent') {\n            _metrics.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainVideo',\n        correlate: 'video',\n        history: true,\n        onEvent: function onEvent(event) {\n          if (event.kind === 'video' && event.stat === 'bytesSent') {\n            _triggerProxy.default.trigger(meeting, {\n              file: 'meeting/util',\n              function: 'startInternalStats'\n            }, _constants.EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED, {\n              type: _config.mediaType.VIDEO\n            });\n\n            _metrics.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesSent') {\n            _metrics.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainShare',\n        correlate: 'video',\n        onEvent: function onEvent(event) {\n          if (event.kind === 'share' && event.stat === 'bytesSent') {\n            _triggerProxy.default.trigger(meeting, {\n              file: 'meeting/util',\n              function: 'startInternalStats'\n            }, _constants.EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED, {\n              type: _config.mediaType.SHARE\n            });\n\n            _metrics.default.postEvent({\n              event: _config.eventType.SENDING_SHARE_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.SHARE\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesSent') {\n            _metrics.default.postEvent({\n              event: _config.eventType.SENDING_SHARE_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.SHARE\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }],\n      receivers: [{\n        id: 'mainAudio',\n        correlate: 'audio',\n        history: true,\n        onEvent: function onEvent(event) {\n          if (event.kind === 'audio' && event.stat === 'bytesReceived') {\n            _triggerProxy.default.trigger(meeting, {\n              file: 'meeting/util',\n              function: 'startInternalStats'\n            }, _constants.EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED, {\n              type: _config.mediaType.AUDIO\n            });\n\n            _metrics.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesReceived') {\n            _metrics.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainVideo',\n        correlate: 'video',\n        history: true,\n        onEvent: function onEvent(event) {\n          if (event.kind === 'video' && event.stat === 'bytesReceived') {\n            _triggerProxy.default.trigger(meeting, {\n              file: 'meeting/util',\n              function: 'startInternalStats'\n            }, _constants.EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED, {\n              type: _config.mediaType.VIDEO\n            });\n\n            _metrics.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesReceived') {\n            _metrics.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainShare',\n        correlate: 'video',\n        onEvent: function onEvent(event) {\n          if (event.kind === 'share' && event.stat === 'bytesReceived') {\n            _triggerProxy.default.trigger(meeting, {\n              file: 'meeting/util',\n              function: 'startInternalStats'\n            }, _constants.EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED, {\n              type: _config.mediaType.SHARE\n            });\n\n            _metrics.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.SHARE\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesReceived') {\n            _metrics.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.SHARE\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }]\n    };\n\n    _util.default.generateOptions(options, _constants.STATS.CONFIG, meeting);\n\n    options.config = _constants.STATS.CONFIG; // pass the attrs and options for the webex instance\n\n    meeting.internalStats = new _index.default(meeting.attrs, meeting.options, options);\n  }\n\n  return meeting.internalStats;\n};\n\nMeetingUtil.handleAudioLogging = function (audioTrack) {\n  var LOG_HEADER = 'MeetingUtil#handleAudioLogging -->';\n\n  if (audioTrack) {\n    var settings = audioTrack.getSettings();\n    var deviceId = settings.deviceId;\n\n    _loggerProxy.default.logger.log(LOG_HEADER, \"deviceId = \".concat(deviceId));\n\n    _loggerProxy.default.logger.log(LOG_HEADER, 'settings =', (0, _stringify.default)(settings));\n  }\n};\n\nMeetingUtil.handleVideoLogging = function (videoTrack) {\n  var LOG_HEADER = 'MeetingUtil#handleVideoLogging -->';\n\n  if (videoTrack) {\n    var settings = videoTrack.getSettings();\n    var deviceId = settings.deviceId;\n\n    _loggerProxy.default.logger.log(LOG_HEADER, \"deviceId = \".concat(deviceId));\n\n    _loggerProxy.default.logger.log(LOG_HEADER, 'settings =', (0, _stringify.default)(settings));\n  }\n};\n\nMeetingUtil.handleDeviceLogging = function () {\n  var devices = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var LOG_HEADER = 'MeetingUtil#handleDeviceLogging -->';\n  devices.forEach(function (device) {\n    _loggerProxy.default.logger.log(LOG_HEADER, \"deviceId = \".concat(device.deviceId));\n\n    _loggerProxy.default.logger.log(LOG_HEADER, 'settings', (0, _stringify.default)(device));\n  });\n};\n\nvar _default = MeetingUtil;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["MeetingUtil","parseLocusJoin","response","parsed","locus","body","mediaConnections","locusUrl","url","locusId","split","pop","selfId","self","id","forEach","mediaConnection","mediaId","remoteUpdateAudioVideo","audioMuted","videoMuted","meeting","_promise","reject","ParameterError","localMedias","Media","generateLocalMedias","Metrics","postEvent","event","eventType","MEDIA_REQUEST","meetingRequest","remoteAudioVideoToggle","deviceUrl","correlationId","then","MEDIA_RESPONSE","hasOwner","info","owner","isOwnerSelf","isPinOrGuest","err","errorCode","INTENT_TO_JOIN","includes","joinMeeting","options","LOCUS_JOIN_REQUEST","inviteeAddress","meetingJoinUrl","sipUri","meetingNumber","roapMessage","permissionToken","resourceId","moderator","pin","moveToResource","preferTranscoding","asResourceOccupant","res","LOCUS_JOIN_RESPONSE","data","trigger","LOCI_UPDATE","trackingId","headers","trackingid","cleanUp","statsAnalyzer","stopAnalyzer","closeLocalStream","closeLocalShare","closeRemoteTracks","closePeerConnections","unsetLocalVideoTrack","unsetLocalShareTrack","unsetRemoteTracks","unsetPeerConnections","cleanMQAInterval","reconnectionManager","roap","stop","roapSeq","disconnectPhoneAudio","phoneUrl","meetingState","FULL_STATE","INACTIVE","MeetingNotActiveError","_response$body","locusInfo","onFullLocus","catch","LoggerProxy","logger","error","leaveMeeting","isUserInLeftState","UserNotJoinedError","defaultOptions","leaveOptions","resolve","moveMeeting","declineMeeting","reason","parsedLocus","state","_LEFT_","isUserInIdleState","_IDLE_","isUserInJoinedState","_JOINED_","isMediaEstablished","currentMediaStatus","audio","video","share","joinMeetingOptions","requiredCaptcha","CaptchaError","passwordStatus","PASSWORD_STATUS","REQUIRED","PasswordError","PIN_COLLECTED","setLocus","PIN_PROMPT","IntentToJoinError","JoinMeetingError","updateTransceiver","meetingOptions","type","sendTrack","receiveTrack","track","transceiver","peerConnection","previousMediaDirection","undefined","meetingId","remoteQualityLevel","mediaProperties","enableRtx","config","enableExtmap","sendRoapMediaRequest","sdp","e","sender","replaceTrack","validateOptions","sendVideo","sendAudio","sendShare","localStream","localShare","getTrack","videoTrack","audioTrack","stream","audioTracks","videoTracks","getAudioTracks","getVideoTracks","length","getModeratorFromLocusInfo","getPolicyFromLocusInfo","policy","canUserLock","joined","LOCK_CONTROL_LOCK","LOCK_STATUS_UNLOCKED","canUserUnlock","LOCK_CONTROL_UNLOCK","LOCK_STATUS_LOCKED","canUserRecord","RECORDING_CONTROL_START","canUserPause","RECORDING_CONTROL_PAUSE","canUserResume","RECORDING_CONTROL_RESUME","canUserStop","RECORDING_CONTROL_STOP","startRecording","request","recordMeeting","recording","paused","PermissionError","pauseRecording","resumeRecording","stopRecording","lockMeeting","actions","canLock","lock","unlockMeeting","canUnlock","startInternalStats","internalStats","useConfig","senders","correlate","history","onEvent","kind","stat","Trigger","file","function","EVENT_TRIGGERS","MEETING_MEDIA_LOCAL_STARTED","mediaType","AUDIO","SENDING_MEDIA_START","SENDING_MEDIA_STOP","onData","VIDEO","SHARE","SENDING_SHARE_START","SENDING_SHARE_STOP","receivers","MEETING_MEDIA_REMOTE_STARTED","RECEIVING_MEDIA_START","RECEIVING_MEDIA_STOP","StatsUtil","generateOptions","STATS","CONFIG","WebRTCStats","attrs","handleAudioLogging","LOG_HEADER","settings","getSettings","deviceId","log","handleVideoLogging","handleDeviceLogging","devices","device"],"sources":["util.js"],"sourcesContent":["import {isEmpty} from 'lodash';\n\nimport {MeetingNotActiveError, UserNotJoinedError} from '../common/errors/webex-errors';\nimport StatsUtil from '../stats/util';\nimport Metrics from '../metrics';\nimport {eventType, trigger, mediaType} from '../metrics/config';\nimport Media from '../media';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport WebRTCStats from '../stats/index';\nimport {\n  INTENT_TO_JOIN,\n  _LEFT_,\n  _IDLE_,\n  _JOINED_,\n  STATS,\n  EVENT_TRIGGERS,\n  FULL_STATE,\n  PASSWORD_STATUS\n} from '../constants';\nimport Trigger from '../common/events/trigger-proxy';\nimport IntentToJoinError from '../common/errors/intent-to-join';\nimport JoinMeetingError from '../common/errors/join-meeting';\nimport ParameterError from '../common/errors/parameter';\nimport PermissionError from '../common/errors/permission';\nimport PasswordError from '../common/errors/password-error';\nimport CaptchaError from '../common/errors/captcha-error';\n\nconst MeetingUtil = {};\n\nMeetingUtil.parseLocusJoin = (response) => {\n  const parsed = {};\n\n  // First todo: add check for existance\n  parsed.locus = response.body.locus;\n  parsed.mediaConnections = response.body.mediaConnections;\n  parsed.locusUrl = parsed.locus.url;\n  parsed.locusId = parsed.locus.url.split('/').pop();\n  parsed.selfId = parsed.locus.self.id;\n\n  // we need mediaId before making roap calls\n  parsed.mediaConnections.forEach((mediaConnection) => {\n    if (mediaConnection.mediaId) {\n      parsed.mediaId = mediaConnection.mediaId;\n    }\n  });\n\n  return parsed;\n};\n\nMeetingUtil.remoteUpdateAudioVideo = (audioMuted, videoMuted, meeting) => {\n  if (!meeting) {\n    return Promise.reject(new ParameterError('You need a meeting object.'));\n  }\n  const localMedias = Media.generateLocalMedias(meeting.mediaId, audioMuted, videoMuted);\n\n  if (isEmpty(localMedias)) {\n    return Promise.reject(new ParameterError('You need a media id on the meeting to change remote audio.'));\n  }\n\n  Metrics.postEvent({event: eventType.MEDIA_REQUEST, meeting});\n\n  return meeting.meetingRequest.remoteAudioVideoToggle({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    localMedias,\n    deviceUrl: meeting.deviceUrl,\n    correlationId: meeting.correlationId\n  }).then((response) => {\n    Metrics.postEvent({event: eventType.MEDIA_RESPONSE, meeting});\n\n    return response.body.locus;\n  });\n};\n\nMeetingUtil.hasOwner = (info) => info && info.owner;\n\nMeetingUtil.isOwnerSelf = (owner, selfId) => owner === selfId;\n\nMeetingUtil.isPinOrGuest = (err) => err?.body?.errorCode && INTENT_TO_JOIN.includes(err.body.errorCode);\n\nMeetingUtil.joinMeeting = (meeting, options) => {\n  if (!meeting) {\n    return Promise.reject(new ParameterError('You need a meeting object.'));\n  }\n\n  Metrics.postEvent({event: eventType.LOCUS_JOIN_REQUEST, meeting});\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: check if the meeting is in JOINING state\n  // if Joining state termintate the request as user might click multiple times\n  return meeting.meetingRequest\n    .joinMeeting({\n      inviteeAddress: meeting.meetingJoinUrl || meeting.sipUri,\n      meetingNumber: meeting.meetingNumber,\n      deviceUrl: meeting.deviceUrl,\n      locusUrl: meeting.locusUrl,\n      correlationId: meeting.correlationId,\n      roapMessage: options.roapMessage,\n      permissionToken: meeting.permissionToken,\n      resourceId: options.resourceId || null,\n      moderator: options.moderator,\n      pin: options.pin,\n      moveToResource: options.moveToResource,\n      preferTranscoding: options.preferTranscoding,\n      asResourceOccupant: options.asResourceOccupant\n    })\n    .then((res) => {\n      Metrics.postEvent({\n        event: eventType.LOCUS_JOIN_RESPONSE,\n        meeting,\n        data: {\n          trigger: trigger.LOCI_UPDATE,\n          locus: res.body.locus,\n          mediaConnections: res.body.mediaConnections,\n          trackingId: res.headers.trackingid\n        }\n      });\n\n      return MeetingUtil.parseLocusJoin(res);\n    });\n};\n\nMeetingUtil.cleanUp = (meeting) => {\n  // make sure we send last metrics before we close the peerconnection\n  if (meeting.statsAnalyzer) meeting.statsAnalyzer.stopAnalyzer();\n\n  return meeting.closeLocalStream()\n    .then(() => meeting.closeLocalShare())\n    .then(() => meeting.closeRemoteTracks())\n    .then(() => meeting.closePeerConnections())\n    .then(() => {\n      meeting.unsetLocalVideoTrack();\n      meeting.unsetLocalShareTrack();\n      meeting.unsetRemoteTracks();\n      meeting.unsetPeerConnections();\n      meeting.cleanMQAInterval();\n      meeting.reconnectionManager.cleanUp();\n    })\n    .then(() => meeting.roap.stop(meeting.correlationId, meeting.roapSeq));\n};\n\nMeetingUtil.disconnectPhoneAudio = (meeting, phoneUrl) => {\n  if (meeting.meetingState === FULL_STATE.INACTIVE) {\n    return Promise.reject(new MeetingNotActiveError());\n  }\n\n  const options = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    phoneUrl\n  };\n\n  return meeting.meetingRequest\n    .disconnectPhoneAudio(options)\n    .then((response) => {\n      if (response?.body?.locus) {\n        meeting.locusInfo.onFullLocus(response.body.locus);\n      }\n    })\n    .catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:util#disconnectPhoneAudio --> An error occured while disconnecting phone audio in meeting ${\n          meeting.id\n        }, error: ${err}`\n      );\n\n      return Promise.reject(err);\n    });\n};\n\n// by default will leave on meeting's resourceId\n// if you explicity want it not to leave on resource id, pass\n// {resourceId: null}\n// TODO: chris, you can modify this however you want\nMeetingUtil.leaveMeeting = (meeting, options = {}) => {\n  if (meeting.meetingState === FULL_STATE.INACTIVE) {\n    // TODO: clean up if the meeting is already inactive\n    return Promise.reject(new MeetingNotActiveError());\n  }\n\n  if (MeetingUtil.isUserInLeftState(meeting.locusInfo)) {\n    return Promise.reject(new UserNotJoinedError());\n  }\n\n  const defaultOptions = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    resourceId: meeting.resourceId,\n    deviceUrl: meeting.deviceUrl\n  };\n\n  const leaveOptions = {...defaultOptions, ...options};\n\n  return meeting.meetingRequest\n    .leaveMeeting(leaveOptions)\n    .then((response) => {\n      if (response && response.body && response.body.locus) { // && !options.moveMeeting) {\n        meeting.locusInfo.onFullLocus(response.body.locus);\n      }\n\n      return Promise.resolve();\n    })\n    .then(() => {\n      if (options.moveMeeting) {\n        return Promise.resolve();\n      }\n\n      return MeetingUtil.cleanUp(meeting);\n    })\n    .catch((err) => {\n      // TODO: If the meeting state comes as LEFT or INACTIVE as response then\n      // 1)  on leave clean up the meeting or simply do a sync on the meeting\n      // 2) If the error says meeting is inactive then destroy the meeting object\n      LoggerProxy.logger.error(\n        `Meeting:util#leaveMeeting --> An error occured while trying to leave meeting with an id of ${\n          meeting.id\n        }, error: ${err}`\n      );\n\n      return Promise.reject(err);\n    });\n};\nMeetingUtil.declineMeeting = (meeting, reason) =>\n  meeting.meetingRequest.declineMeeting({\n    locusUrl: meeting.locusUrl,\n    deviceUrl: meeting.deviceUrl,\n    reason\n  });\n\nMeetingUtil.isUserInLeftState = (locusInfo) =>\n   locusInfo.parsedLocus?.self?.state === _LEFT_;\n\nMeetingUtil.isUserInIdleState = (locusInfo) =>\n   locusInfo.parsedLocus?.self?.state === _IDLE_;\n\nMeetingUtil.isUserInJoinedState = (locusInfo) =>\n  locusInfo.parsedLocus?.self?.state === _JOINED_;\n\nMeetingUtil.isMediaEstablished = (currentMediaStatus) =>\n  currentMediaStatus && (currentMediaStatus.audio || currentMediaStatus.video || currentMediaStatus.share);\n\n\nMeetingUtil.joinMeetingOptions = (meeting, options = {}) => {\n  meeting.resourceId = meeting.resourceId || options.resourceId;\n\n  if (meeting.requiredCaptcha) {\n    return Promise.reject(new CaptchaError());\n  }\n  if (meeting.passwordStatus === PASSWORD_STATUS.REQUIRED) {\n    return Promise.reject(new PasswordError());\n  }\n\n  if (options.pin) {\n    Metrics.postEvent({\n      event: eventType.PIN_COLLECTED,\n      meeting\n    });\n  }\n\n  // normal join meeting, scenario A, D\n  return MeetingUtil.joinMeeting(meeting, options)\n    .then((response) => {\n      meeting.setLocus(response);\n\n      return Promise.resolve(response);\n    })\n    .catch((err) => {\n      // joining a claimed PMR that is not my own, scenario B\n      if (MeetingUtil.isPinOrGuest(err)) {\n        Metrics.postEvent({\n          event: eventType.PIN_PROMPT,\n          meeting\n        });\n\n        // request host pin or non host for unclaimed PMR, start of Scenario C\n        // see https://sqbu-github.cisco.com/WebExSquared/locus/wiki/Locus-Lobby-and--IVR-Feature\n        return Promise.reject(new IntentToJoinError('Error Joining Meeting', err));\n      }\n      LoggerProxy.logger.error('Meeting:util#joinMeetingOptions --> Error joining the call, ', err);\n\n      return Promise.reject(new JoinMeetingError(options, 'Error Joining Meeting', err));\n    });\n};\n\nMeetingUtil.updateTransceiver = (options, meetingOptions) => {\n  const {\n    type,\n    sendTrack,\n    receiveTrack,\n    track,\n    transceiver,\n    peerConnection,\n    previousMediaDirection\n  } = options;\n\n  if ((sendTrack !== undefined && sendTrack !== previousMediaDirection.sendTrack) ||\n  (receiveTrack !== undefined && receiveTrack !== previousMediaDirection.receiveTrack)) {\n    return Media.updateTransceiver({\n      meetingId: meetingOptions.meeting.id,\n      remoteQualityLevel: meetingOptions.mediaProperties.remoteQualityLevel,\n      enableRtx: meetingOptions.meeting.config.enableRtx,\n      enableExtmap: meetingOptions.meeting.config.enableExtmap\n    }, peerConnection, transceiver,\n    {\n      track,\n      type,\n      receiveTrack,\n      sendTrack\n    })\n      .then(() => meetingOptions.meeting.roap\n        .sendRoapMediaRequest({\n          sdp: meetingOptions.mediaProperties.peerConnection.sdp,\n          roapSeq: meetingOptions.meeting.roapSeq,\n          meeting: meetingOptions.meeting // or can pass meeting ID\n        }))\n      .catch((e) => {\n        LoggerProxy.logger.error(`Meeting:util#updateTransceiver --> Error updating the ${type} streams with error: ${e}`);\n      });\n  } if (track) {\n    transceiver.sender.replaceTrack(track);\n\n    return Promise.resolve();\n  }\n\n  return Promise.reject(new ParameterError('update Failed: please pass valid parameter'));\n};\n\nMeetingUtil.validateOptions = (options) => {\n  const {\n    sendVideo, sendAudio, sendShare, localStream, localShare\n  } = options;\n\n  if (sendVideo && !MeetingUtil.getTrack(localStream).videoTrack) {\n    return Promise.reject(new ParameterError('please pass valid video streams'));\n  }\n\n  if (sendAudio && !MeetingUtil.getTrack(localStream).audioTrack) {\n    return Promise.reject(new ParameterError('please pass valid audio streams'));\n  }\n\n  if (sendShare && !MeetingUtil.getTrack(localShare).videoTrack) {\n    return Promise.reject(new ParameterError('please pass valid share streams'));\n  }\n\n  return Promise.resolve();\n};\n\nMeetingUtil.getTrack = (stream) => {\n  let audioTrack = null;\n  let videoTrack = null;\n  let audioTracks = null;\n  let videoTracks = null;\n\n  if (!stream) {\n    return {audioTrack: null, videoTrack: null};\n  }\n  if (stream.getAudioTracks) {\n    audioTracks = stream.getAudioTracks();\n  }\n  if (stream.getVideoTracks) {\n    videoTracks = stream.getVideoTracks();\n  }\n\n  if (audioTracks && audioTracks.length > 0) {\n    [audioTrack] = audioTracks;\n  }\n\n  if (videoTracks && videoTracks.length > 0) {\n    [videoTrack] = videoTracks;\n  }\n\n  return {audioTrack, videoTrack};\n};\n\nMeetingUtil.getModeratorFromLocusInfo = (locusInfo) =>\n  locusInfo &&\n  locusInfo.parsedLocus &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info.moderator;\n\nMeetingUtil.getPolicyFromLocusInfo = (locusInfo) =>\n  locusInfo &&\n  locusInfo.parsedLocus &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info.policy;\n\nMeetingUtil.canUserLock = (moderator, joined) => {\n  if (moderator.LOCK_CONTROL_LOCK && joined.LOCK_STATUS_UNLOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserUnlock = (moderator, joined) => {\n  if (moderator.LOCK_CONTROL_UNLOCK && joined.LOCK_STATUS_LOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserRecord = (moderator) => moderator.RECORDING_CONTROL_START;\n\nMeetingUtil.canUserPause = (moderator) => moderator.RECORDING_CONTROL_PAUSE;\n\nMeetingUtil.canUserResume = (moderator) => moderator.RECORDING_CONTROL_RESUME;\n\nMeetingUtil.canUserStop = (moderator) => moderator.RECORDING_CONTROL_STOP;\n\nMeetingUtil.startRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserRecord(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Start recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.pauseRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserPause(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: true});\n  }\n\n  return Promise.reject(new PermissionError('Pause recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.resumeRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserResume(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Resume recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.stopRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserStop(moderator)) {\n    return request.recordMeeting({locusUrl, recording: false, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Stop recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.lockMeeting = (actions, request, locusUrl) => {\n  if (actions && actions.canLock) {\n    return request.lockMeeting({locusUrl, lock: true});\n  }\n\n  return Promise.reject(new PermissionError('Lock not allowed, due to joined property.'));\n};\n\nMeetingUtil.unlockMeeting = (actions, request, locusUrl) => {\n  if (actions && actions.canUnlock) {\n    return request.lockMeeting({locusUrl, lock: false});\n  }\n\n  return Promise.reject(new PermissionError('Unlock not allowed, due to joined property.'));\n};\n\nMeetingUtil.startInternalStats = (meeting) => {\n  if (!meeting.internalStats) {\n    const options = {\n      useConfig: true,\n      senders: [\n        {\n          id: 'mainAudio',\n          correlate: 'audio',\n          history: true,\n          onEvent: (event) => {\n            // TODO: we don't need checks like this since it comes from the transceiver\n            // refactor event linkage to use callbacks instead of events\n            if (event.kind === 'audio' && event.stat === 'bytesSent') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n                {\n                  type: mediaType.AUDIO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainVideo',\n          correlate: 'video',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'video' && event.stat === 'bytesSent') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n                {\n                  type: mediaType.VIDEO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainShare',\n          correlate: 'video',\n          onEvent: (event) => {\n            if (event.kind === 'share' && event.stat === 'bytesSent') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n                {\n                  type: mediaType.SHARE\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.SENDING_SHARE_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_SHARE_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n          },\n          onData: () => {}\n        }\n      ],\n      receivers: [\n        {\n          id: 'mainAudio',\n          correlate: 'audio',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'audio' && event.stat === 'bytesReceived') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n                {\n                  type: mediaType.AUDIO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainVideo',\n          correlate: 'video',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'video' && event.stat === 'bytesReceived') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n                {\n                  type: mediaType.VIDEO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainShare',\n          correlate: 'video',\n          onEvent: (event) => {\n            if (event.kind === 'share' && event.stat === 'bytesReceived') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n                {\n                  type: mediaType.SHARE\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n          },\n          onData: () => {}\n        }\n      ]\n    };\n\n    StatsUtil.generateOptions(options, STATS.CONFIG, meeting);\n\n    options.config = STATS.CONFIG;\n\n    // pass the attrs and options for the webex instance\n    meeting.internalStats = new WebRTCStats(meeting.attrs, meeting.options, options);\n  }\n\n  return meeting.internalStats;\n};\n\nMeetingUtil.handleAudioLogging = (audioTrack) => {\n  const LOG_HEADER = 'MeetingUtil#handleAudioLogging -->';\n\n  if (audioTrack) {\n    const settings = audioTrack.getSettings();\n    const {deviceId} = settings;\n\n    LoggerProxy.logger.log(LOG_HEADER, `deviceId = ${deviceId}`);\n    LoggerProxy.logger.log(LOG_HEADER, 'settings =', JSON.stringify(settings));\n  }\n};\n\nMeetingUtil.handleVideoLogging = (videoTrack) => {\n  const LOG_HEADER = 'MeetingUtil#handleVideoLogging -->';\n\n  if (videoTrack) {\n    const settings = videoTrack.getSettings();\n    const {deviceId} = settings;\n\n    LoggerProxy.logger.log(LOG_HEADER, `deviceId = ${deviceId}`);\n    LoggerProxy.logger.log(LOG_HEADER, 'settings =', JSON.stringify(settings));\n  }\n};\n\nMeetingUtil.handleDeviceLogging = (devices = []) => {\n  const LOG_HEADER = 'MeetingUtil#handleDeviceLogging -->';\n\n  devices.forEach((device) => {\n    LoggerProxy.logger.log(LOG_HEADER, `deviceId = ${device.deviceId}`);\n    LoggerProxy.logger.log(LOG_HEADER, 'settings', JSON.stringify(device));\n  });\n};\n\nexport default MeetingUtil;\n"]},"metadata":{},"sourceType":"script"}