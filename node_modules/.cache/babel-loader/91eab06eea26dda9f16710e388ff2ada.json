{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _readableStream = require(\"readable-stream\");\n\nvar _transformer = _interopRequireDefault(require(\"../stats/transformer\"));\n\nvar _data = _interopRequireDefault(require(\"../stats/data\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Reforms the interesting data from an RTCStatsReport to a new format\n */\n\n\nvar StatsFilter = /*#__PURE__*/function (_Transform) {\n  (0, _inherits2.default)(StatsFilter, _Transform);\n\n  var _super = _createSuper(StatsFilter);\n  /**\n   * Tells the Stream we're operating in objectMode\n   * @private\n   */\n\n\n  function StatsFilter() {\n    (0, _classCallCheck2.default)(this, StatsFilter);\n    return _super.call(this, {\n      objectMode: true\n    });\n  }\n  /**\n   * Filters out data on the RTCStatsReport to the data around call quality and pushes it as a WebRTCData object\n   * @param {RTCStatsReport} report\n   * @param {*} encoding\n   * @param {Function} callback\n   * @private\n   * @returns {undefined}\n   */\n\n\n  (0, _createClass2.default)(StatsFilter, [{\n    key: \"_transform\",\n    value: function _transform(report, encoding, callback) {\n      if (!report) {\n        callback();\n        return;\n      }\n\n      var data = _transformer.default.transform(report);\n\n      var push = new _data.default(data);\n      this.push({\n        data: push\n      });\n      callback();\n    }\n  }]);\n  return StatsFilter;\n}(_readableStream.Transform);\n\nexports.default = StatsFilter;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;IACqBA,W;;;;AACnB;AACF;AACA;AACA;;;AACE,yBAAc;AAAA;AAAA,6BACN;AAACC,gBAAU,EAAE;AAAb,KADM;AAEb;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACE,oBAAWC,MAAX,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;AACrC,UAAI,CAACF,MAAL,EAAa;AACXE,gBAAQ;AAER;AACD;;AACD,UAAMC,IAAI,GAAGC,qBAAiBC,SAAjBD,CAA2BJ,MAA3BI,CAAb;;AACA,UAAME,IAAI,GAAG,IAAIC,aAAJ,CAAeJ,IAAf,CAAb;AAEA,WAAKG,IAAL,CAAU;AACRH,YAAI,EAAEG;AADE,OAAV;AAGAJ,cAAQ;AACT;;;EA9BsCM,yB","names":["StatsFilter","objectMode","report","encoding","callback","data","StatsTransformer","transform","push","WebRTCData","Transform"],"sources":["filter.js"],"sourcesContent":["import {Transform} from 'readable-stream';\n\nimport StatsTransformer from '../stats/transformer';\nimport WebRTCData from '../stats/data';\n\n/**\n * Reforms the interesting data from an RTCStatsReport to a new format\n */\nexport default class StatsFilter extends Transform {\n  /**\n   * Tells the Stream we're operating in objectMode\n   * @private\n   */\n  constructor() {\n    super({objectMode: true});\n  }\n\n  /**\n   * Filters out data on the RTCStatsReport to the data around call quality and pushes it as a WebRTCData object\n   * @param {RTCStatsReport} report\n   * @param {*} encoding\n   * @param {Function} callback\n   * @private\n   * @returns {undefined}\n   */\n  _transform(report, encoding, callback) {\n    if (!report) {\n      callback();\n\n      return;\n    }\n    const data = StatsTransformer.transform(report);\n    const push = new WebRTCData(data);\n\n    this.push({\n      data: push\n    });\n    callback();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}