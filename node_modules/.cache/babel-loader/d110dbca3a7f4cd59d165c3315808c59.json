{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _set = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/set\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _isFinite2 = _interopRequireDefault(require(\"lodash/isFinite\"));\n\nvar _forEach2 = _interopRequireDefault(require(\"lodash/forEach\"));\n\nvar _constants = require(\"../constants\");\n\nvar _parameter = _interopRequireDefault(require(\"../common/errors/parameter\"));\n\nvar StatsAnalyzer = {};\n/**\n * Can involve changing of the default plugin-meetings sdk for deeper results\n * @param {Array} series of WebRTCData\n * @param {Object} options\n * @param {Array} options.analysisKeys [{key: 'bytesSent', check: 'increasing'}, {key: 'bytesReceived', check: 'increasing'}]\n * @returns {Object} analysis {valid: true/false, failed: { key: [number] }, data: { webRtcKeyToAnalyze: { valid: true/false, reports: [ { value: number, valid: true/false, difference: number } ] } } }\n * @public\n */\n\nStatsAnalyzer.analyze = function (series) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    analysisKeys: _constants.ANALYSIS_STATS.DEFAULT_KEYS\n  };\n\n  if (!(0, _isArray2.default)(series) || !series.length || !options || !(0, _isArray2.default)(options.analysisKeys) || !options.analysisKeys.length) {\n    throw new _parameter.default('analyzer->analyze#series must be defined as a nonempty array of WebRTCData objects, and options.analysisKeys must be a nonempty array of strings, representing the properties to analyze.');\n  }\n\n  var properties = new _set.default(options.analysisKeys);\n  var analysis = {\n    valid: true,\n    failed: {},\n    data: {}\n  };\n  properties.forEach(function (config) {\n    var property = config.key;\n    analysis.data[property] = {\n      valid: true,\n      reports: []\n    };\n    analysis.failed[property] = [];\n    var previous = {\n      value: 0\n    };\n    var index = 0;\n\n    var _loop = function _loop(i) {\n      var singular = {};\n      (0, _forEach2.default)(series[i].data.getData()[config.prop], function (webrtcData) {\n        // eslint-disable-line\n        var value = webrtcData[property];\n\n        if (!value || !(0, _isFinite2.default)(value)) {\n          return;\n        }\n\n        singular.value = value;\n        singular.difference = 0;\n        singular.valid = false;\n        singular.index = index;\n        singular.difference = singular.value - previous.value;\n\n        if (config.check === _constants.ANALYSIS_CHECKS.INCREASING && singular.difference > 0) {\n          singular.valid = true;\n        } else if (config.check === _constants.ANALYSIS_CHECKS.DECREASING && singular.difference < 0) {\n          singular.valid = true;\n        } else if (config.check === _constants.ANALYSIS_CHECKS.CONSTANT) {\n          singular.valid = true;\n        } else {\n          singular.valid = false;\n        }\n\n        if (!singular.valid) {\n          analysis.data[property].valid = false;\n          analysis.valid = false;\n          analysis.failed[property].push(i);\n        }\n\n        previous = singular;\n        analysis.data[property].reports.push(singular);\n      });\n      index += 1;\n    };\n\n    for (var i = series.length - 1; i > 0; i -= 1) {\n      _loop(i);\n    }\n\n    if (!analysis.data[property].valid) {\n      analysis.valid = false;\n    }\n  });\n  return analysis;\n};\n\nvar _default = StatsAnalyzer;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["StatsAnalyzer","analyze","series","options","analysisKeys","ANALYSIS_STATS","DEFAULT_KEYS","length","ParameterError","properties","analysis","valid","failed","data","forEach","config","property","key","reports","previous","value","index","i","singular","getData","prop","webrtcData","difference","check","ANALYSIS_CHECKS","INCREASING","DECREASING","CONSTANT","push","_loop"],"sources":["analyzer.js"],"sourcesContent":["import {forEach, isFinite, isArray} from 'lodash';\n\nimport {\n  ANALYSIS_STATS,\n  ANALYSIS_CHECKS\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\n\nconst StatsAnalyzer = {};\n\n/**\n * Can involve changing of the default plugin-meetings sdk for deeper results\n * @param {Array} series of WebRTCData\n * @param {Object} options\n * @param {Array} options.analysisKeys [{key: 'bytesSent', check: 'increasing'}, {key: 'bytesReceived', check: 'increasing'}]\n * @returns {Object} analysis {valid: true/false, failed: { key: [number] }, data: { webRtcKeyToAnalyze: { valid: true/false, reports: [ { value: number, valid: true/false, difference: number } ] } } }\n * @public\n */\nStatsAnalyzer.analyze = (series, options = {analysisKeys: ANALYSIS_STATS.DEFAULT_KEYS}) => {\n  if (!isArray(series) || !series.length || !options || !isArray(options.analysisKeys) || !options.analysisKeys.length) {\n    throw new ParameterError('analyzer->analyze#series must be defined as a nonempty array of WebRTCData objects, and options.analysisKeys must be a nonempty array of strings, representing the properties to analyze.');\n  }\n  const properties = new Set(options.analysisKeys);\n  const analysis = {valid: true, failed: {}, data: {}};\n\n  properties.forEach((config) => {\n    const property = config.key;\n\n    analysis.data[property] = {valid: true, reports: []};\n    analysis.failed[property] = [];\n    let previous = {value: 0};\n    let index = 0;\n\n    for (let i = series.length - 1; i > 0; i -= 1) {\n      const singular = {};\n\n      forEach(series[i].data.getData()[config.prop], (webrtcData) => { // eslint-disable-line\n        const value = webrtcData[property];\n\n        if (!value || !isFinite(value)) {\n          return;\n        }\n        singular.value = value;\n        singular.difference = 0;\n        singular.valid = false;\n        singular.index = index;\n        singular.difference = singular.value - previous.value;\n        if (config.check === ANALYSIS_CHECKS.INCREASING && singular.difference > 0) {\n          singular.valid = true;\n        }\n        else if (config.check === ANALYSIS_CHECKS.DECREASING && singular.difference < 0) {\n          singular.valid = true;\n        }\n        else if (config.check === ANALYSIS_CHECKS.CONSTANT) {\n          singular.valid = true;\n        }\n        else {\n          singular.valid = false;\n        }\n        if (!singular.valid) {\n          analysis.data[property].valid = false;\n          analysis.valid = false;\n          analysis.failed[property].push(i);\n        }\n        previous = singular;\n        analysis.data[property].reports.push(singular);\n      });\n      index += 1;\n    }\n    if (!analysis.data[property].valid) {\n      analysis.valid = false;\n    }\n  });\n\n  return analysis;\n};\n\nexport default StatsAnalyzer;\n"]},"metadata":{},"sourceType":"script"}