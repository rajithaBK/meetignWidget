{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.sortScope = sortScope;\nexports.filterScope = filterScope;\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * sorts a list of scopes\n * @param {string} scope\n * @returns {string}\n */\n\nfunction sortScope(scope) {\n  if (!scope) {\n    return '';\n  }\n\n  return scope.split(' ').sort().join(' ');\n}\n/**\n * sorts a list of scopes and filters the specified scope\n * @param {string} toFilter\n * @param {string} scope\n * @returns {string}\n */\n\n\nfunction filterScope(toFilter, scope) {\n  if (!scope) {\n    return '';\n  }\n\n  return scope.split(' ').filter(function (item) {\n    return item !== toFilter;\n  }).sort().join(' ');\n}","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,SAAOA,KAAK,CACTC,KADID,CACE,GADFA,EAEJE,IAFIF,GAGJG,IAHIH,CAGC,GAHDA,CAAP;AAID;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASI,WAAT,CAAqBC,QAArB,EAA+BL,KAA/B,EAAsC;AAC3C,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,SAAOA,KAAK,CACTC,KADID,CACE,GADFA,EAEJM,MAFIN,CAEG,UAACO,IAAD;AAAA,WAAUA,IAAI,KAAKF,QAAnB;AAFH,KAGJH,IAHIF,GAIJG,IAJIH,CAIC,GAJDA,CAAP;AAKD","names":["sortScope","scope","split","sort","join","filterScope","toFilter","filter","item"],"sources":["scope.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * sorts a list of scopes\n * @param {string} scope\n * @returns {string}\n */\nexport function sortScope(scope) {\n  if (!scope) {\n    return '';\n  }\n\n  return scope\n    .split(' ')\n    .sort()\n    .join(' ');\n}\n\n/**\n * sorts a list of scopes and filters the specified scope\n * @param {string} toFilter\n * @param {string} scope\n * @returns {string}\n */\nexport function filterScope(toFilter, scope) {\n  if (!scope) {\n    return '';\n  }\n\n  return scope\n    .split(' ')\n    .filter((item) => item !== toFilter)\n    .sort()\n    .join(' ');\n}\n"]},"metadata":{},"sourceType":"script"}