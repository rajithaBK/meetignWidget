{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.escape = escape;\nexports.escapeSync = escapeSync;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar escapeMe = /(<|>|&)/g; // escape and escapeSync probably don't both need to exist, but it seemed like a\n// good idea in case we ever want to for the future.\n\n/**\n * Escapes HTML\n * @param {[type]} html\n * @returns {[type]}\n */\n\nfunction escape(html) {\n  return new _promise.default(function (resolve) {\n    return resolve(escapeSync(html));\n  });\n}\n/**\n * Synchronously escape HTML\n * @param {[type]} html\n * @returns {[type]}\n */\n\n\nfunction escapeSync(html) {\n  return html.replace(escapeMe, entityReplacer);\n}\n/**\n * @param {string} char\n * @private\n * @returns {string}\n */\n\n\nfunction entityReplacer(char) {\n  switch (char) {\n    case '<':\n      return '&lt;';\n\n    case '>':\n      return '&gt;';\n\n    case '&':\n      return '&amp;';\n\n    default:\n      return char;\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA,IAAMA,QAAQ,GAAG,UAAjB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAO,qBAAY,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACC,UAAU,CAACF,IAAD,CAAX,CAApB;AAAZ,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASE,UAAT,CAAoBF,IAApB,EAA0B;AAC/B,SAAOA,IAAI,CAACG,OAALH,CAAaF,QAAbE,EAAuBI,cAAvBJ,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,UAAQA,IAAR;AACE,SAAK,GAAL;AACE,aAAO,MAAP;;AACF,SAAK,GAAL;AACE,aAAO,MAAP;;AACF,SAAK,GAAL;AACE,aAAO,OAAP;;AACF;AACE,aAAOA,IAAP;AARJ;AAUD","names":["escapeMe","escape","html","resolve","escapeSync","replace","entityReplacer","char"],"sources":["html-base.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nconst escapeMe = /(<|>|&)/g;\n\n// escape and escapeSync probably don't both need to exist, but it seemed like a\n// good idea in case we ever want to for the future.\n\n/**\n * Escapes HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escape(html) {\n  return new Promise((resolve) => resolve(escapeSync(html)));\n}\n\n/**\n * Synchronously escape HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escapeSync(html) {\n  return html.replace(escapeMe, entityReplacer);\n}\n\n/**\n * @param {string} char\n * @private\n * @returns {string}\n */\nfunction entityReplacer(char) {\n  switch (char) {\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '&':\n      return '&amp;';\n    default:\n      return char;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}