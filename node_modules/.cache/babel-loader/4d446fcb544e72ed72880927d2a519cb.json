{"ast":null,"code":"import _classCallCheck from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\"; //**************************************************************************************\n\n/**\r\n * Class from RFC6318\r\n */\n\nvar ECCCMSSharedInfo = /*#__PURE__*/function () {\n  //**********************************************************************************\n\n  /**\r\n   * Constructor for ECCCMSSharedInfo class\r\n   * @param {Object} [parameters={}]\r\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n   */\n  function ECCCMSSharedInfo() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ECCCMSSharedInfo);\n\n    //region Internal properties of the object\n\n    /**\r\n     * @type {AlgorithmIdentifier}\r\n     * @desc keyInfo\r\n     */\n    this.keyInfo = getParametersValue(parameters, \"keyInfo\", ECCCMSSharedInfo.defaultValues(\"keyInfo\"));\n    if (\"entityUInfo\" in parameters)\n      /**\r\n       * @type {OctetString}\r\n       * @desc entityUInfo\r\n       */\n      this.entityUInfo = getParametersValue(parameters, \"entityUInfo\", ECCCMSSharedInfo.defaultValues(\"entityUInfo\"));\n    /**\r\n     * @type {OctetString}\r\n     * @desc suppPubInfo\r\n     */\n\n    this.suppPubInfo = getParametersValue(parameters, \"suppPubInfo\", ECCCMSSharedInfo.defaultValues(\"suppPubInfo\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\r\n   * Return default values for all class members\r\n   * @param {string} memberName String name for a class member\r\n   */\n\n\n  _createClass(ECCCMSSharedInfo, [{\n    key: \"fromSchema\",\n    value: //**********************************************************************************\n\n    /**\r\n     * Convert parsed asn1js object into current class\r\n     * @param {!Object} schema\r\n     */\n    function fromSchema(schema) {\n      //region Clear input data first\n      clearProps(schema, [\"keyInfo\", \"entityUInfo\", \"suppPubInfo\"]); //endregion\n      //region Check the schema is valid\n\n      var asn1 = asn1js.compareSchema(schema, schema, ECCCMSSharedInfo.schema({\n        names: {\n          keyInfo: {\n            names: {\n              blockName: \"keyInfo\"\n            }\n          },\n          entityUInfo: \"entityUInfo\",\n          suppPubInfo: \"suppPubInfo\"\n        }\n      }));\n      if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for ECCCMSSharedInfo\"); //endregion\n      //region Get internal properties from parsed schema\n\n      this.keyInfo = new AlgorithmIdentifier({\n        schema: asn1.result.keyInfo\n      });\n      if (\"entityUInfo\" in asn1.result) this.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\n      this.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0]; //endregion\n    } //**********************************************************************************\n\n    /**\r\n     * Convert current object to asn1js object and set correct values\r\n     * @returns {Object} asn1js object\r\n     */\n\n  }, {\n    key: \"toSchema\",\n    value: function toSchema() {\n      //region Create output array for sequence \n      var outputArray = [];\n      outputArray.push(this.keyInfo.toSchema());\n\n      if (\"entityUInfo\" in this) {\n        outputArray.push(new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          value: [this.entityUInfo]\n        }));\n      }\n\n      outputArray.push(new asn1js.Constructed({\n        idBlock: {\n          tagClass: 3,\n          // CONTEXT-SPECIFIC\n          tagNumber: 2 // [2]\n\n        },\n        value: [this.suppPubInfo]\n      })); //endregion \n      //region Construct and return new ASN.1 schema for this object \n\n      return new asn1js.Sequence({\n        value: outputArray\n      }); //endregion \n    } //**********************************************************************************\n\n    /**\r\n     * Convertion for the class to JSON object\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _object = {\n        keyInfo: this.keyInfo.toJSON()\n      };\n      if (\"entityUInfo\" in this) _object.entityUInfo = this.entityUInfo.toJSON();\n      _object.suppPubInfo = this.suppPubInfo.toJSON();\n      return _object;\n    } //**********************************************************************************\n\n  }], [{\n    key: \"defaultValues\",\n    value: function defaultValues(memberName) {\n      switch (memberName) {\n        case \"keyInfo\":\n          return new AlgorithmIdentifier();\n\n        case \"entityUInfo\":\n          return new asn1js.OctetString();\n\n        case \"suppPubInfo\":\n          return new asn1js.OctetString();\n\n        default:\n          throw new Error(\"Invalid member name for ECCCMSSharedInfo class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Compare values with default values for all class members\r\n     * @param {string} memberName String name for a class member\r\n     * @param {*} memberValue Value to compare with default value\r\n     */\n\n  }, {\n    key: \"compareWithDefault\",\n    value: function compareWithDefault(memberName, memberValue) {\n      switch (memberName) {\n        case \"keyInfo\":\n        case \"entityUInfo\":\n        case \"suppPubInfo\":\n          return memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName));\n\n        default:\n          throw new Error(\"Invalid member name for ECCCMSSharedInfo class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Return value of pre-defined ASN.1 schema for current class\r\n     *\r\n     * ASN.1 schema:\r\n     * ```asn1\r\n     * ECC-CMS-SharedInfo  ::=  SEQUENCE {\r\n     *    keyInfo      AlgorithmIdentifier,\r\n     *    entityUInfo  [0] EXPLICIT OCTET STRING OPTIONAL,\r\n     *    suppPubInfo  [2] EXPLICIT OCTET STRING }\r\n     * ```\r\n     *\r\n     * @param {Object} parameters Input parameters for the schema\r\n     * @returns {Object} asn1js schema object\r\n     */\n\n  }, {\n    key: \"schema\",\n    value: function schema() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\r\n       * @type {Object}\r\n       * @property {string} [blockName]\r\n       * @property {string} [keyInfo]\r\n       * @property {string} [entityUInfo]\r\n       * @property {string} [suppPubInfo]\r\n       */\n      var names = getParametersValue(parameters, \"names\", {});\n      return new asn1js.Sequence({\n        name: names.blockName || \"\",\n        value: [AlgorithmIdentifier.schema(names.keyInfo || {}), new asn1js.Constructed({\n          name: names.entityUInfo || \"\",\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          optional: true,\n          value: [new asn1js.OctetString()]\n        }), new asn1js.Constructed({\n          name: names.suppPubInfo || \"\",\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 2 // [2]\n\n          },\n          value: [new asn1js.OctetString()]\n        })]\n      });\n    }\n  }]);\n\n  return ECCCMSSharedInfo;\n}(); //**************************************************************************************\n\n\nexport { ECCCMSSharedInfo as default };","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/ECCCMSSharedInfo.js"],"names":["asn1js","getParametersValue","clearProps","AlgorithmIdentifier","ECCCMSSharedInfo","parameters","keyInfo","defaultValues","entityUInfo","suppPubInfo","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","valueBlock","value","outputArray","push","toSchema","Constructed","idBlock","tagClass","tagNumber","Sequence","_object","toJSON","memberName","OctetString","memberValue","isEqual","name","optional"],"mappings":";;AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,SAA/C;AACA,OAAOC,mBAAP,MAAgC,0BAAhC,C,CACA;;AACA;AACA;AACA;;IACqBC,gB;AAEpB;;AACA;AACD;AACA;AACA;AACA;AACC,8BACA;AAAA,QADYC,UACZ,uEADyB,EACzB;;AAAA;;AACC;;AACA;AACF;AACA;AACA;AACE,SAAKC,OAAL,GAAeL,kBAAkB,CAACI,UAAD,EAAa,SAAb,EAAwBD,gBAAgB,CAACG,aAAjB,CAA+B,SAA/B,CAAxB,CAAjC;AAEA,QAAG,iBAAiBF,UAApB;AACC;AACH;AACA;AACA;AACG,WAAKG,WAAL,GAAmBP,kBAAkB,CAACI,UAAD,EAAa,aAAb,EAA4BD,gBAAgB,CAACG,aAAjB,CAA+B,aAA/B,CAA5B,CAArC;AAED;AACF;AACA;AACA;;AACE,SAAKE,WAAL,GAAmBR,kBAAkB,CAACI,UAAD,EAAa,aAAb,EAA4BD,gBAAgB,CAACG,aAAjB,CAA+B,aAA/B,CAA5B,CAArC,CAnBD,CAoBC;AAEA;;AACA,QAAG,YAAYF,UAAf,EACC,KAAKK,UAAL,CAAgBL,UAAU,CAACM,MAA3B,EAxBF,CAyBC;AACA,G,CACD;;AACA;AACD;AACA;AACA;;;;;WAmFC;;AACA;AACD;AACA;AACA;AACC,wBAAWA,MAAX,EACA;AACC;AACAT,MAAAA,UAAU,CAACS,MAAD,EAAS,CAClB,SADkB,EAElB,aAFkB,EAGlB,aAHkB,CAAT,CAAV,CAFD,CAOC;AAEA;;AACA,UAAMC,IAAI,GAAGZ,MAAM,CAACa,aAAP,CAAqBF,MAArB,EACZA,MADY,EAEZP,gBAAgB,CAACO,MAAjB,CAAwB;AACvBG,QAAAA,KAAK,EAAE;AACNR,UAAAA,OAAO,EAAE;AACRQ,YAAAA,KAAK,EAAE;AACNC,cAAAA,SAAS,EAAE;AADL;AADC,WADH;AAMNP,UAAAA,WAAW,EAAE,aANP;AAONC,UAAAA,WAAW,EAAE;AAPP;AADgB,OAAxB,CAFY,CAAb;AAeA,UAAGG,IAAI,CAACI,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIC,KAAJ,CAAU,0EAAV,CAAN,CA1BF,CA2BC;AAEA;;AACA,WAAKX,OAAL,GAAe,IAAIH,mBAAJ,CAAwB;AAAEQ,QAAAA,MAAM,EAAEC,IAAI,CAACM,MAAL,CAAYZ;AAAtB,OAAxB,CAAf;AAEA,UAAG,iBAAiBM,IAAI,CAACM,MAAzB,EACC,KAAKV,WAAL,GAAmBI,IAAI,CAACM,MAAL,CAAYV,WAAZ,CAAwBW,UAAxB,CAAmCC,KAAnC,CAAyC,CAAzC,CAAnB;AAED,WAAKX,WAAL,GAAmBG,IAAI,CAACM,MAAL,CAAYT,WAAZ,CAAwBU,UAAxB,CAAmCC,KAAnC,CAAyC,CAAzC,CAAnB,CAnCD,CAoCC;AACA,K,CACD;;AACA;AACD;AACA;AACA;;;;WACC,oBACA;AACC;AACA,UAAMC,WAAW,GAAG,EAApB;AAEAA,MAAAA,WAAW,CAACC,IAAZ,CAAiB,KAAKhB,OAAL,CAAaiB,QAAb,EAAjB;;AAEA,UAAG,iBAAiB,IAApB,EACA;AACCF,QAAAA,WAAW,CAACC,IAAZ,CAAiB,IAAItB,MAAM,CAACwB,WAAX,CAAuB;AACvCC,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,WAD8B;AAKvCP,UAAAA,KAAK,EAAE,CAAC,KAAKZ,WAAN;AALgC,SAAvB,CAAjB;AAOA;;AAEDa,MAAAA,WAAW,CAACC,IAAZ,CAAiB,IAAItB,MAAM,CAACwB,WAAX,CAAuB;AACvCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SAD8B;AAKvCP,QAAAA,KAAK,EAAE,CAAC,KAAKX,WAAN;AALgC,OAAvB,CAAjB,EAjBD,CAwBC;AAEA;;AACA,aAAO,IAAIT,MAAM,CAAC4B,QAAX,CAAoB;AAC1BR,QAAAA,KAAK,EAAEC;AADmB,OAApB,CAAP,CA3BD,CA8BC;AACA,K,CACD;;AACA;AACD;AACA;AACA;;;;WACC,kBACA;AACC,UAAMQ,OAAO,GAAG;AACfvB,QAAAA,OAAO,EAAE,KAAKA,OAAL,CAAawB,MAAb;AADM,OAAhB;AAIA,UAAG,iBAAiB,IAApB,EACCD,OAAO,CAACrB,WAAR,GAAsB,KAAKA,WAAL,CAAiBsB,MAAjB,EAAtB;AAEDD,MAAAA,OAAO,CAACpB,WAAR,GAAsB,KAAKA,WAAL,CAAiBqB,MAAjB,EAAtB;AAEA,aAAOD,OAAP;AACA,K,CACD;;;;WAtLA,uBAAqBE,UAArB,EACA;AACC,cAAOA,UAAP;AAEC,aAAK,SAAL;AACC,iBAAO,IAAI5B,mBAAJ,EAAP;;AACD,aAAK,aAAL;AACC,iBAAO,IAAIH,MAAM,CAACgC,WAAX,EAAP;;AACD,aAAK,aAAL;AACC,iBAAO,IAAIhC,MAAM,CAACgC,WAAX,EAAP;;AACD;AACC,gBAAM,IAAIf,KAAJ,2DAA6Dc,UAA7D,EAAN;AATF;AAWA,K,CACD;;AACA;AACD;AACA;AACA;AACA;;;;WACC,4BAA0BA,UAA1B,EAAsCE,WAAtC,EACA;AACC,cAAOF,UAAP;AAEC,aAAK,SAAL;AACA,aAAK,aAAL;AACA,aAAK,aAAL;AACC,iBAAQE,WAAW,CAACC,OAAZ,CAAoB9B,gBAAgB,CAACG,aAAjB,CAA+BwB,UAA/B,CAApB,CAAR;;AACD;AACC,gBAAM,IAAId,KAAJ,2DAA6Dc,UAA7D,EAAN;AAPF;AASA,K,CACD;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,kBACA;AAAA,UADc1B,UACd,uEAD2B,EAC3B;;AACC;AACF;AACA;AACA;AACA;AACA;AACA;AACE,UAAMS,KAAK,GAAGb,kBAAkB,CAACI,UAAD,EAAa,OAAb,EAAsB,EAAtB,CAAhC;AAEA,aAAQ,IAAIL,MAAM,CAAC4B,QAAX,CAAoB;AAC3BO,QAAAA,IAAI,EAAGrB,KAAK,CAACC,SAAN,IAAmB,EADC;AAE3BK,QAAAA,KAAK,EAAE,CACNjB,mBAAmB,CAACQ,MAApB,CAA2BG,KAAK,CAACR,OAAN,IAAiB,EAA5C,CADM,EAEN,IAAIN,MAAM,CAACwB,WAAX,CAAuB;AACtBW,UAAAA,IAAI,EAAGrB,KAAK,CAACN,WAAN,IAAqB,EADN;AAEtBiB,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,WAFa;AAMtBS,UAAAA,QAAQ,EAAE,IANY;AAOtBhB,UAAAA,KAAK,EAAE,CAAC,IAAIpB,MAAM,CAACgC,WAAX,EAAD;AAPe,SAAvB,CAFM,EAWN,IAAIhC,MAAM,CAACwB,WAAX,CAAuB;AACtBW,UAAAA,IAAI,EAAGrB,KAAK,CAACL,WAAN,IAAqB,EADN;AAEtBgB,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,WAFa;AAMtBP,UAAAA,KAAK,EAAE,CAAC,IAAIpB,MAAM,CAACgC,WAAX,EAAD;AANe,SAAvB,CAXM;AAFoB,OAApB,CAAR;AAuBA;;;;KAuGF;;;SAjOqB5B,gB","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6318\r\n */\r\nexport default class ECCCMSSharedInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCCMSSharedInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc keyInfo\r\n\t\t */\r\n\t\tthis.keyInfo = getParametersValue(parameters, \"keyInfo\", ECCCMSSharedInfo.defaultValues(\"keyInfo\"));\r\n\r\n\t\tif(\"entityUInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc entityUInfo\r\n\t\t\t */\r\n\t\t\tthis.entityUInfo = getParametersValue(parameters, \"entityUInfo\", ECCCMSSharedInfo.defaultValues(\"entityUInfo\"));\r\n\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc suppPubInfo\r\n\t\t */\r\n\t\tthis.suppPubInfo = getParametersValue(parameters, \"suppPubInfo\", ECCCMSSharedInfo.defaultValues(\"suppPubInfo\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn (memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ECC-CMS-SharedInfo  ::=  SEQUENCE {\r\n\t *    keyInfo      AlgorithmIdentifier,\r\n\t *    entityUInfo  [0] EXPLICIT OCTET STRING OPTIONAL,\r\n\t *    suppPubInfo  [2] EXPLICIT OCTET STRING }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyInfo]\r\n\t\t * @property {string} [entityUInfo]\r\n\t\t * @property {string} [suppPubInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyInfo || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.entityUInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.suppPubInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyInfo\",\r\n\t\t\t\"entityUInfo\",\r\n\t\t\t\"suppPubInfo\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tECCCMSSharedInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tentityUInfo: \"entityUInfo\",\r\n\t\t\t\t\tsuppPubInfo: \"suppPubInfo\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECCCMSSharedInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyInfo = new AlgorithmIdentifier({ schema: asn1.result.keyInfo });\r\n\r\n\t\tif(\"entityUInfo\" in asn1.result)\r\n\t\t\tthis.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\r\n\r\n\t\tthis.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create output array for sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.keyInfo.toSchema());\r\n\t\t\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.entityUInfo]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t},\r\n\t\t\tvalue: [this.suppPubInfo]\r\n\t\t}));\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t});\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tkeyInfo: this.keyInfo.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t\t_object.entityUInfo = this.entityUInfo.toJSON();\r\n\r\n\t\t_object.suppPubInfo = this.suppPubInfo.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]},"metadata":{},"sourceType":"module"}