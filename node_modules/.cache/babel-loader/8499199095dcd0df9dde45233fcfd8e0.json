{"ast":null,"code":"\"use strict\";\n\nvar _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar _Symbol2 = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _Symbol$iterator = require(\"@babel/runtime-corejs2/core-js/symbol/iterator\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = exports.FILE_SYMBOL = exports.EMITTER_SYMBOL = void 0;\n\nvar _symbol = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/symbol\"));\n\nvar _map2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/map\"));\n\nvar _apply = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/apply\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _deleteProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/delete-property\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _some2 = _interopRequireDefault(require(\"lodash/some\"));\n\nvar _pick2 = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _map3 = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _filter2 = _interopRequireDefault(require(\"lodash/filter\"));\n\nvar _events = require(\"events\");\n\nvar _nodeScr = _interopRequireDefault(require(\"node-scr\"));\n\nvar _common = require(\"@webex/common\");\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _helperImage = require(\"@webex/helper-image\");\n\nvar _sha = _interopRequireDefault(require(\"crypto-js/sha256\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol2 !== \"undefined\" && o[_Symbol$iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar EMITTER_SYMBOL = (0, _symbol.default)('EMITTER_SYMBOL');\nexports.EMITTER_SYMBOL = EMITTER_SYMBOL;\nvar FILE_SYMBOL = (0, _symbol.default)('FILE_SYMBOL');\nexports.FILE_SYMBOL = FILE_SYMBOL;\nvar PROMISE_SYMBOL = (0, _symbol.default)('PROMISE_SYMBOL');\n/**\n * @class\n */\n\nvar ShareActivity = _webexCore.WebexPlugin.extend({\n  getSymbols: function getSymbols() {\n    return {\n      file: FILE_SYMBOL,\n      emitter: EMITTER_SYMBOL\n    };\n  },\n  namespace: 'Conversation',\n  derived: {\n    target: {\n      deps: ['conversation'],\n      fn: function fn() {\n        return this.conversation;\n      }\n    }\n  },\n  session: {\n    conversation: {\n      required: true,\n      type: 'object'\n    },\n    content: 'string',\n    clientTempId: 'string',\n    displayName: 'string',\n    enableThumbnails: {\n      default: true,\n      type: 'boolean'\n    },\n    hiddenSpaceUrl: 'object',\n    mentions: 'object',\n    spaceUrl: 'object',\n    uploads: {\n      type: 'object',\n      default: function _default() {\n        return new _map2.default();\n      }\n    }\n  },\n  initialize: function initialize(attrs, options) {\n    (0, _apply.default)(_webexCore.WebexPlugin.prototype.initialize, this, [attrs, options]);\n\n    if (attrs && attrs.conversation) {\n      this.spaceUrl = _promise.default.resolve(attrs.conversation._spaceUrl || this._retrieveSpaceUrl(\"\".concat(attrs.conversation.url, \"/space\")).then(function (url) {\n        attrs.conversation._spaceUrl = url;\n        return url;\n      }));\n      this.hiddenSpaceUrl = _promise.default.resolve(attrs.conversation._hiddenSpaceUrl || this._retrieveSpaceUrl(\"\".concat(attrs.conversation.url, \"/space/hidden\")).then(function (url) {\n        attrs.conversation._hiddenSpaceUrl = url;\n        return url;\n      }));\n    }\n  },\n\n  /**\n   * Adds an additional GIF to the share activity\n   * Different from regular add to skip uploading to webex files service\n   * @param {File} gif\n   * @param {File} gif.image // thumbnail\n   * @param {Object} options\n   * @param {Object} options.actions\n   * @returns {Promise}\n   */\n  addGif: function addGif(gif, options) {\n    var gifToAdd = this.uploads.get(gif); // If the gif already exists, then don't do anything\n\n    if (gifToAdd) {\n      return _promise.default.resolve();\n    }\n\n    gifToAdd = (0, _assign.default)((0, _defineProperty2.default)({\n      displayName: gif.name,\n      fileSize: gif.size || gif.byteLength || gif.length,\n      mimeType: gif.type,\n      url: 'https://giphy.com',\n      objectType: 'file',\n      height: gif.height,\n      width: gif.width,\n      image: {\n        height: gif.image.height,\n        width: gif.image.width,\n        url: 'https://giphy.com'\n      }\n    }, FILE_SYMBOL, gif), (0, _pick2.default)(options, 'actions'));\n    this.uploads.set(gif, gifToAdd);\n    /* Instead of encryptBinary, which produces a encrypted version of\n     * the file for upload and a SCR (contains info needed to encrypt the\n     * SCR itself and the displayName), we directly create an SCR.\n     * Because we are skipping uploading, the encrypted file is not needed.\n     */\n\n    return _nodeScr.default.create().then(function (scr) {\n      scr.loc = gif.url;\n      gifToAdd.scr = scr;\n      return _nodeScr.default.create();\n    }).then(function (thumbnailScr) {\n      thumbnailScr.loc = gif.image.url;\n      gifToAdd.image.scr = thumbnailScr;\n    });\n  },\n\n  /**\n   * Adds an additional file to the share and begins submitting it to webex\n   * files\n   * @param {File} file\n   * @param {Object} options\n   * @param {Object} options.actions\n   * @returns {EventEmittingPromise}\n   */\n  add: function add(file, options) {\n    var _Object$assign3,\n        _this = this;\n\n    options = options || {};\n    var upload = this.uploads.get(file);\n\n    if (upload) {\n      return upload[PROMISE_SYMBOL];\n    }\n\n    var emitter = new _events.EventEmitter();\n    upload = (0, _assign.default)((_Object$assign3 = {\n      displayName: file.name,\n      fileSize: file.size || file.byteLength || file.length,\n      mimeType: file.type,\n      objectType: 'file'\n    }, (0, _defineProperty2.default)(_Object$assign3, EMITTER_SYMBOL, emitter), (0, _defineProperty2.default)(_Object$assign3, FILE_SYMBOL, file), _Object$assign3), (0, _pick2.default)(options, 'actions'));\n    this.uploads.set(file, upload);\n    var promise = (0, _helperImage.detectFileType)(file, this.logger).then(function (type) {\n      upload.mimeType = type;\n      return (0, _helperImage.processImage)({\n        file: file,\n        type: type,\n        thumbnailMaxWidth: _this.config.thumbnailMaxWidth,\n        thumbnailMaxHeight: _this.config.thumbnailMaxHeight,\n        enableThumbnails: _this.enableThumbnails,\n        logger: _this.logger\n      });\n    }).then(function (imageData) {\n      var main = _this.webex.internal.encryption.encryptBinary(file).then(function (_ref) {\n        var scr = _ref.scr,\n            cdata = _ref.cdata;\n        upload.scr = scr;\n        return _promise.default.all([cdata, _this.spaceUrl]);\n      }).then(function (_ref2) {\n        var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n            cdata = _ref3[0],\n            spaceUrl = _ref3[1];\n\n        var uploadPromise = _this._upload(cdata, \"\".concat(spaceUrl, \"/upload_sessions\"), options);\n\n        (0, _common.transferEvents)('progress', uploadPromise, emitter);\n        return uploadPromise;\n      }).then(function (metadata) {\n        upload.url = upload.scr.loc = metadata.downloadUrl;\n      });\n\n      var thumb;\n\n      if (imageData) {\n        var _imageData = (0, _slicedToArray2.default)(imageData, 3),\n            thumbnail = _imageData[0],\n            fileDimensions = _imageData[1],\n            thumbnailDimensions = _imageData[2];\n\n        (0, _assign.default)(upload, fileDimensions);\n\n        if (thumbnail && thumbnailDimensions) {\n          upload.image = thumbnailDimensions;\n          thumb = _this.webex.internal.encryption.encryptBinary(thumbnail).then(function (_ref4) {\n            var scr = _ref4.scr,\n                cdata = _ref4.cdata;\n            upload.image.scr = scr;\n            return _promise.default.all([cdata, _this.hiddenSpaceUrl]);\n          }).then(function (_ref5) {\n            var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),\n                cdata = _ref6[0],\n                spaceUrl = _ref6[1];\n\n            return _this._upload(cdata, \"\".concat(spaceUrl, \"/upload_sessions\"));\n          }).then(function (metadata) {\n            upload.image.url = upload.image.scr.loc = metadata.downloadUrl;\n          });\n        }\n      }\n\n      return _promise.default.all([main, thumb]);\n    });\n    upload[PROMISE_SYMBOL] = promise;\n    (0, _common.proxyEvents)(emitter, promise);\n    return promise;\n  },\n\n  /**\n   * Fetches the files from the share\n   * @returns {Array}\n   */\n  getFiles: function getFiles() {\n    var files = [];\n\n    var _iterator = _createForOfIteratorHelper(this.uploads),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = (0, _slicedToArray2.default)(_step.value, 1),\n            key = _step$value[0];\n\n        files.push(this.uploads.get(key)[FILE_SYMBOL]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return files;\n  },\n\n  /**\n   * @param {File} file\n   * @param {string} uri\n   * @param {Object} uploadOptions - Optional object adding additional params to request body\n   * @private\n   * @returns {Promise}\n   */\n  _upload: function _upload(file, uri, uploadOptions) {\n    var fileSize = file.length || file.size || file.byteLength;\n    var fileHash = (0, _sha.default)(file).toString();\n\n    var _ref7 = uploadOptions !== null && uploadOptions !== void 0 ? uploadOptions : {},\n        role = _ref7.role;\n\n    var initializeBody = (0, _assign.default)({\n      fileSize: fileSize\n    }, role && {\n      role: role\n    });\n    return this.webex.upload({\n      uri: uri,\n      file: file,\n      qs: {\n        transcode: true\n      },\n      phases: {\n        initialize: {\n          body: initializeBody\n        },\n        upload: {\n          $url: function $url(session) {\n            return session.uploadUrl;\n          }\n        },\n        finalize: {\n          $uri: function $uri(session) {\n            return session.finishUploadUrl;\n          },\n          body: {\n            fileSize: fileSize,\n            fileHash: fileHash\n          }\n        }\n      }\n    });\n  },\n\n  /**\n   * Removes the specified file from the share (Does not currently delete the\n   * uploaded file)\n   * @param {File} file\n   * @returns {Promise}\n   */\n  remove: function remove(file) {\n    this.uploads.delete(file); // Returns a promise for future-proofiness.\n\n    return _promise.default.resolve();\n  },\n\n  /**\n   * @private\n   * @returns {Promise<Object>}\n   */\n  prepare: function prepare() {\n    if (!this.uploads.size) {\n      throw new Error('Cannot submit a share activity without atleast one file');\n    }\n\n    var activity = {\n      verb: 'share',\n      object: {\n        objectType: 'content',\n        displayName: this.object && this.object.displayName ? this.object.displayName : undefined,\n        content: this.object && this.object.content ? this.object.content : undefined,\n        mentions: this.object && this.object.mentions ? this.object.mentions : undefined,\n        files: {\n          items: []\n        }\n      },\n      clientTempId: this.clientTempId\n    };\n    var promises = [];\n    this.uploads.forEach(function (item) {\n      activity.object.files.items.push(item);\n      promises.push(item[PROMISE_SYMBOL]);\n    });\n    activity.object.contentCategory = this._determineContentCategory(activity.object.files.items);\n    return _promise.default.all(promises).then(function () {\n      return activity;\n    });\n  },\n\n  /**\n   * @param {Array} items\n   * @param {string} mimeType\n   * @private\n   * @returns {boolean}\n   */\n  _itemContainsActionWithMimeType: function _itemContainsActionWithMimeType(items, mimeType) {\n    return (0, _some2.default)(items.map(function (item) {\n      return (0, _some2.default)(item.actions, {\n        mimeType: mimeType\n      });\n    }));\n  },\n\n  /**\n   * @param {Array} items\n   * @private\n   * @returns {string}\n   */\n  _determineContentCategory: function _determineContentCategory(items) {\n    // determine if the items contain an image\n    if (this._itemContainsActionWithMimeType(items, 'application/x-cisco-webex-whiteboard')) {\n      return 'documents';\n    }\n\n    var mimeTypes = (0, _filter2.default)((0, _map3.default)(items, 'mimeType'));\n\n    if (mimeTypes.length !== items.length) {\n      return 'documents';\n    }\n\n    var contentCategory = mimeTypes[0].split('/').shift();\n\n    if (contentCategory !== 'video' && contentCategory !== 'image') {\n      return 'documents';\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(mimeTypes),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var mimeType = _step2.value;\n\n        if (mimeType.split('/').shift() !== contentCategory) {\n          return 'documents';\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return \"\".concat(contentCategory, \"s\");\n  },\n\n  /**\n   * @param {string} uri\n   * @returns {Promise}\n   */\n  _retrieveSpaceUrl: function _retrieveSpaceUrl(uri) {\n    return this.webex.request({\n      method: 'PUT',\n      uri: uri\n    }).then(function (res) {\n      return res.body.spaceUrl;\n    });\n  },\n  version: \"1.154.2\"\n});\n/**\n * Instantiates a ShareActivity\n * @param {Object} conversation\n * @param {ShareActivity|Object|array} object\n * @param {ProxyWebex} webex\n * @returns {ShareActivity}\n */\n\n\nShareActivity.create = function create(conversation, object, webex) {\n  var _object$object, _files$items, _files;\n\n  if (object instanceof ShareActivity) {\n    return object;\n  }\n\n  var files;\n\n  if (object !== null && object !== void 0 && (_object$object = object.object) !== null && _object$object !== void 0 && _object$object.files) {\n    files = object.object.files;\n    (0, _deleteProperty.default)(object.object, 'files');\n  }\n\n  var share = new ShareActivity((0, _assign.default)({\n    conversation: conversation\n  }, object), {\n    parent: webex\n  });\n  files = (_files$items = (_files = files) === null || _files === void 0 ? void 0 : _files.items) !== null && _files$items !== void 0 ? _files$items : files;\n\n  if (files) {\n    files.forEach(function (file) {\n      return share.add(file);\n    });\n  }\n\n  return share;\n};\n\nvar _default2 = ShareActivity;\nexports.default = _default2;","map":{"version":3,"mappings":"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","names":["EMITTER_SYMBOL","FILE_SYMBOL","PROMISE_SYMBOL","ShareActivity","WebexPlugin","extend","getSymbols","file","emitter","namespace","derived","target","deps","fn","conversation","session","required","type","content","clientTempId","displayName","enableThumbnails","default","hiddenSpaceUrl","mentions","spaceUrl","uploads","initialize","attrs","options","prototype","_promise","resolve","_spaceUrl","_retrieveSpaceUrl","url","then","_hiddenSpaceUrl","addGif","gif","gifToAdd","get","name","fileSize","size","byteLength","length","mimeType","objectType","height","width","image","set","SCR","create","scr","loc","thumbnailScr","add","upload","EventEmitter","promise","logger","thumbnailMaxWidth","_this","config","thumbnailMaxHeight","imageData","main","webex","internal","encryption","encryptBinary","cdata","all","uploadPromise","_upload","metadata","downloadUrl","thumb","thumbnail","fileDimensions","thumbnailDimensions","getFiles","files","key","push","_iterator","uri","uploadOptions","fileHash","toString","role","initializeBody","qs","transcode","phases","body","$url","uploadUrl","finalize","$uri","finishUploadUrl","remove","delete","prepare","Error","activity","verb","object","undefined","items","promises","forEach","item","contentCategory","_determineContentCategory","_itemContainsActionWithMimeType","map","actions","mimeTypes","split","shift","_iterator2","request","method","res","version","_object$object","share","parent","_files"],"sources":["share-activity.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {EventEmitter} from 'events';\n\nimport SCR from 'node-scr';\nimport {proxyEvents, transferEvents} from '@webex/common';\nimport {WebexPlugin} from '@webex/webex-core';\nimport {filter, map, pick, some} from 'lodash';\nimport {detectFileType, processImage} from '@webex/helper-image';\nimport sha256 from 'crypto-js/sha256';\n\nexport const EMITTER_SYMBOL = Symbol('EMITTER_SYMBOL');\nexport const FILE_SYMBOL = Symbol('FILE_SYMBOL');\nconst PROMISE_SYMBOL = Symbol('PROMISE_SYMBOL');\n\n/**\n * @class\n */\nconst ShareActivity = WebexPlugin.extend({\n  getSymbols() {\n    return {\n      file: FILE_SYMBOL,\n      emitter: EMITTER_SYMBOL\n    };\n  },\n\n  namespace: 'Conversation',\n\n  derived: {\n    target: {\n      deps: ['conversation'],\n      fn() {\n        return this.conversation;\n      }\n    }\n  },\n\n  session: {\n    conversation: {\n      required: true,\n      type: 'object'\n    },\n\n    content: 'string',\n\n    clientTempId: 'string',\n\n    displayName: 'string',\n\n    enableThumbnails: {\n      default: true,\n      type: 'boolean'\n    },\n\n    hiddenSpaceUrl: 'object',\n\n    mentions: 'object',\n\n    spaceUrl: 'object',\n\n    uploads: {\n      type: 'object',\n      default() {\n        return new Map();\n      }\n    }\n  },\n\n  initialize(attrs, options) {\n    Reflect.apply(WebexPlugin.prototype.initialize, this, [attrs, options]);\n\n    if (attrs && attrs.conversation) {\n      this.spaceUrl = Promise.resolve(attrs.conversation._spaceUrl || this._retrieveSpaceUrl(`${attrs.conversation.url}/space`)\n        .then((url) => {\n          attrs.conversation._spaceUrl = url;\n\n          return url;\n        }));\n      this.hiddenSpaceUrl = Promise.resolve(attrs.conversation._hiddenSpaceUrl || this._retrieveSpaceUrl(`${attrs.conversation.url}/space/hidden`)\n        .then((url) => {\n          attrs.conversation._hiddenSpaceUrl = url;\n\n          return url;\n        }));\n    }\n  },\n\n  /**\n   * Adds an additional GIF to the share activity\n   * Different from regular add to skip uploading to webex files service\n   * @param {File} gif\n   * @param {File} gif.image // thumbnail\n   * @param {Object} options\n   * @param {Object} options.actions\n   * @returns {Promise}\n   */\n  addGif(gif, options) {\n    let gifToAdd = this.uploads.get(gif);\n\n    // If the gif already exists, then don't do anything\n    if (gifToAdd) {\n      return Promise.resolve();\n    }\n\n    gifToAdd = Object.assign({\n      displayName: gif.name,\n      fileSize: gif.size || gif.byteLength || gif.length,\n      mimeType: gif.type,\n      url: 'https://giphy.com',\n      objectType: 'file',\n      height: gif.height,\n      width: gif.width,\n      image: {\n        height: gif.image.height,\n        width: gif.image.width,\n        url: 'https://giphy.com'\n      },\n      [FILE_SYMBOL]: gif\n    }, pick(options, 'actions'));\n\n    this.uploads.set(gif, gifToAdd);\n\n    /* Instead of encryptBinary, which produces a encrypted version of\n     * the file for upload and a SCR (contains info needed to encrypt the\n     * SCR itself and the displayName), we directly create an SCR.\n     * Because we are skipping uploading, the encrypted file is not needed.\n     */\n    return SCR.create()\n      .then((scr) => {\n        scr.loc = gif.url;\n        gifToAdd.scr = scr;\n\n        return SCR.create();\n      })\n      .then((thumbnailScr) => {\n        thumbnailScr.loc = gif.image.url;\n        gifToAdd.image.scr = thumbnailScr;\n      });\n  },\n\n  /**\n   * Adds an additional file to the share and begins submitting it to webex\n   * files\n   * @param {File} file\n   * @param {Object} options\n   * @param {Object} options.actions\n   * @returns {EventEmittingPromise}\n   */\n  add(file, options) {\n    options = options || {};\n    let upload = this.uploads.get(file);\n\n    if (upload) {\n      return upload[PROMISE_SYMBOL];\n    }\n    const emitter = new EventEmitter();\n\n    upload = Object.assign({\n      displayName: file.name,\n      fileSize: file.size || file.byteLength || file.length,\n      mimeType: file.type,\n      objectType: 'file',\n      [EMITTER_SYMBOL]: emitter,\n      [FILE_SYMBOL]: file\n    }, pick(options, 'actions'));\n\n    this.uploads.set(file, upload);\n    const promise = detectFileType(file, this.logger)\n      .then((type) => {\n        upload.mimeType = type;\n\n        return processImage({\n          file,\n          type,\n          thumbnailMaxWidth: this.config.thumbnailMaxWidth,\n          thumbnailMaxHeight: this.config.thumbnailMaxHeight,\n          enableThumbnails: this.enableThumbnails,\n          logger: this.logger\n        });\n      })\n      .then((imageData) => {\n        const main = this.webex.internal.encryption.encryptBinary(file)\n          .then(({scr, cdata}) => {\n            upload.scr = scr;\n\n            return Promise.all([cdata, this.spaceUrl]);\n          })\n          .then(([cdata, spaceUrl]) => {\n            const uploadPromise = this._upload(cdata, `${spaceUrl}/upload_sessions`, options);\n\n            transferEvents('progress', uploadPromise, emitter);\n\n            return uploadPromise;\n          })\n          .then((metadata) => {\n            upload.url = upload.scr.loc = metadata.downloadUrl;\n          });\n\n\n        let thumb;\n\n        if (imageData) {\n          const [thumbnail, fileDimensions, thumbnailDimensions] = imageData;\n\n          Object.assign(upload, fileDimensions);\n\n          if (thumbnail && thumbnailDimensions) {\n            upload.image = thumbnailDimensions;\n            thumb = this.webex.internal.encryption.encryptBinary(thumbnail)\n              .then(({scr, cdata}) => {\n                upload.image.scr = scr;\n\n                return Promise.all([cdata, this.hiddenSpaceUrl]);\n              })\n              .then(([cdata, spaceUrl]) => this._upload(cdata, `${spaceUrl}/upload_sessions`))\n              .then((metadata) => {\n                upload.image.url = upload.image.scr.loc = metadata.downloadUrl;\n              });\n          }\n        }\n\n        return Promise.all([main, thumb]);\n      });\n\n\n    upload[PROMISE_SYMBOL] = promise;\n\n    proxyEvents(emitter, promise);\n\n    return promise;\n  },\n\n  /**\n   * Fetches the files from the share\n   * @returns {Array}\n   */\n  getFiles() {\n    const files = [];\n\n    for (const [key] of this.uploads) {\n      files.push(this.uploads.get(key)[FILE_SYMBOL]);\n    }\n\n    return files;\n  },\n\n\n  /**\n   * @param {File} file\n   * @param {string} uri\n   * @param {Object} uploadOptions - Optional object adding additional params to request body\n   * @private\n   * @returns {Promise}\n   */\n  _upload(file, uri, uploadOptions) {\n    const fileSize = file.length || file.size || file.byteLength;\n    const fileHash = sha256(file).toString();\n    const {role} = uploadOptions ?? {};\n    const initializeBody = Object.assign({fileSize}, role && {role});\n\n    return this.webex.upload({\n      uri,\n      file,\n      qs: {\n        transcode: true\n      },\n      phases: {\n        initialize: {\n          body: initializeBody\n        },\n        upload: {\n          $url(session) {\n            return session.uploadUrl;\n          }\n        },\n        finalize: {\n          $uri(session) {\n            return session.finishUploadUrl;\n          },\n          body: {fileSize, fileHash}\n        }\n      }\n    });\n  },\n\n  /**\n   * Removes the specified file from the share (Does not currently delete the\n   * uploaded file)\n   * @param {File} file\n   * @returns {Promise}\n   */\n  remove(file) {\n    this.uploads.delete(file);\n\n    // Returns a promise for future-proofiness.\n    return Promise.resolve();\n  },\n\n  /**\n   * @private\n   * @returns {Promise<Object>}\n   */\n  prepare() {\n    if (!this.uploads.size) {\n      throw new Error('Cannot submit a share activity without atleast one file');\n    }\n\n    const activity = {\n      verb: 'share',\n      object: {\n        objectType: 'content',\n        displayName: this.object && this.object.displayName ? this.object.displayName : undefined,\n        content: this.object && this.object.content ? this.object.content : undefined,\n        mentions: this.object && this.object.mentions ? this.object.mentions : undefined,\n        files: {\n          items: []\n        }\n      },\n      clientTempId: this.clientTempId\n    };\n\n    const promises = [];\n\n    this.uploads.forEach((item) => {\n      activity.object.files.items.push(item);\n      promises.push(item[PROMISE_SYMBOL]);\n    });\n\n    activity.object.contentCategory = this._determineContentCategory(activity.object.files.items);\n\n    return Promise.all(promises)\n      .then(() => activity);\n  },\n\n  /**\n   * @param {Array} items\n   * @param {string} mimeType\n   * @private\n   * @returns {boolean}\n   */\n  _itemContainsActionWithMimeType(items, mimeType) {\n    return some(items.map((item) => some(item.actions, {mimeType})));\n  },\n\n  /**\n   * @param {Array} items\n   * @private\n   * @returns {string}\n   */\n  _determineContentCategory(items) {\n    // determine if the items contain an image\n    if (this._itemContainsActionWithMimeType(items, 'application/x-cisco-webex-whiteboard')) {\n      return 'documents';\n    }\n\n    const mimeTypes = filter(map(items, 'mimeType'));\n\n    if (mimeTypes.length !== items.length) {\n      return 'documents';\n    }\n\n    const contentCategory = mimeTypes[0].split('/').shift();\n\n    if (contentCategory !== 'video' && contentCategory !== 'image') {\n      return 'documents';\n    }\n\n    for (const mimeType of mimeTypes) {\n      if (mimeType.split('/').shift() !== contentCategory) {\n        return 'documents';\n      }\n    }\n\n    return `${contentCategory}s`;\n  },\n\n  /**\n   * @param {string} uri\n   * @returns {Promise}\n   */\n  _retrieveSpaceUrl(uri) {\n    return this.webex.request({\n      method: 'PUT',\n      uri\n    })\n      .then((res) => res.body.spaceUrl);\n  }\n});\n\n/**\n * Instantiates a ShareActivity\n * @param {Object} conversation\n * @param {ShareActivity|Object|array} object\n * @param {ProxyWebex} webex\n * @returns {ShareActivity}\n */\nShareActivity.create = function create(conversation, object, webex) {\n  if (object instanceof ShareActivity) {\n    return object;\n  }\n\n  let files;\n\n  if (object?.object?.files) {\n    files = object.object.files;\n    Reflect.deleteProperty(object.object, 'files');\n  }\n\n  const share = new ShareActivity(Object.assign({\n    conversation\n  }, object), {\n    parent: webex\n  });\n\n  files = files?.items ?? files;\n  if (files) {\n    files.forEach((file) => share.add(file));\n  }\n\n  return share;\n};\n\nexport default ShareActivity;\n"]},"metadata":{},"sourceType":"script"}