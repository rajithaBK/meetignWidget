{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _isNan = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/number/is-nan\"));\n\nvar _parseFloat2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/parse-float\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _webexCore = require(\"@webex/webex-core\");\n\nvar _constants = require(\"../constants\");\n\nvar _loggerProxy = _interopRequireDefault(require(\"../common/logs/logger-proxy\"));\n\nvar _util = _interopRequireDefault(require(\"../meeting/util\"));\n\nvar _handler = _interopRequireDefault(require(\"./handler\"));\n\nvar _request = _interopRequireDefault(require(\"./request\"));\n\nvar _collection = _interopRequireDefault(require(\"./collection\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Roap options\n * @typedef {Object} RoapOptions\n * @property {String} sdp\n * @property {Meeting} meeting\n * @property {Number} roapSeq\n * @property {Boolean} reconnect\n */\n\n/**\n  * @typedef {Object} SeqOptions\n  * @property {String} correlationId\n  * @property {String} mediaId\n  * @property {Number} seq\n  */\n\n/**\n * @class Roap\n * @export\n * @private\n */\n\n\nvar Roap = /*#__PURE__*/function (_StatelessWebexPlugin) {\n  (0, _inherits2.default)(Roap, _StatelessWebexPlugin);\n\n  var _super = _createSuper(Roap);\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n\n\n  function Roap(attrs, _options) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Roap);\n    _this = _super.call(this, {}, _options);\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sendRoapCallRequest\", function (options) {\n      var meeting = options.meeting;\n      var roapMessage = {\n        messageType: _constants.ROAP.ROAP_TYPES.OFFER,\n        sdps: [options.sdp],\n        version: _constants.ROAP.ROAP_VERSION,\n        seq: typeof options.roapSeq !== 'number' && (0, _isNan.default)((0, _parseFloat2.default)(options.roapSeq)) ? 0 : options.roapSeq + 1,\n        tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n\n      };\n\n      _this.roapHandler.submit({\n        type: _constants.ROAP.SEND_ROAP_MSG,\n        msg: roapMessage,\n        correlationId: meeting.correlationId\n      });\n\n      var roapBody = {\n        localMedias: [{\n          localSdp: (0, _stringify.default)(_this.roapRequest.attachRechabilityData({\n            roapMessage: roapMessage,\n            // eslint-disable-next-line no-warning-comments\n            // TODO: check whats the need for video and audiomute\n            audioMuted: !!meeting.isAudioMuted(),\n            videoMuted: !!meeting.isVideoMuted()\n          })) // mediaId: meeting.mediaId\n\n        }]\n      };\n      return _util.default.joinMeetingOptions(meeting, {\n        roapMessage: roapBody\n      }).then(function (locus) {\n        _this.roapHandler.submit({\n          type: _constants.ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n\n        meeting.setRoapSeq(roapMessage.seq); // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n\n        return locus; // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n    });\n    _this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.options = _options;\n    /**\n     * The Roap Process State Handler\n     * @instance\n     * @type {RoapHandler}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.roapHandler = new _handler.default(_this.attrs, _this.options, _this.sendRoapOK.bind((0, _assertThisInitialized2.default)(_this)), _this.sendRoapAnswer.bind((0, _assertThisInitialized2.default)(_this)), _this.roapFinished.bind((0, _assertThisInitialized2.default)(_this)));\n    /**\n     * The Roap Request Server Proxy Object\n     * @instance\n     * @type {RoapRequest}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.roapRequest = new _request.default({}, _options);\n    /**\n     * The last roap offer sent to server and acked\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.lastRoapOffer = {};\n    return _this;\n  }\n  /**\n   * Starts listening to mercury events for Roap messages\n   * @param {object} data event object\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n\n\n  (0, _createClass2.default)(Roap, [{\n    key: \"roapEvent\",\n    value: function roapEvent(data) {\n      var msg = data.message;\n      var correlationId = data.correlationId;\n\n      _loggerProxy.default.logger.log(\"Roap:index#roapEvent --> Received Roap Message [\".concat((0, _stringify.default)(msg, null, 2), \"]\"));\n\n      this.roapHandler.submit({\n        type: _constants.ROAP.RECEIVE_ROAP_MSG,\n        msg: msg,\n        correlationId: correlationId\n      });\n    }\n    /**\n     *\n     * @param {String} correlationId correlation id of a meeting\n     * @param {Number} seq ROAP sequence number\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop(correlationId, seq) {\n      this.roapHandler.submit({\n        type: _constants.ROAP.RECEIVE_CALL_LEAVE,\n        seq: seq,\n        correlationId: correlationId\n      });\n      return _promise.default.resolve();\n    }\n    /**\n     *\n     * @param {SeqOptions} options\n     * @returns {null}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: \"sendRoapOK\",\n    value: function sendRoapOK(options) {\n      var _this2 = this;\n\n      return _promise.default.resolve().then(function () {\n        var meeting = _this2.webex.meetings.meetingCollection.getByKey('correlationId', options.correlationId);\n\n        var roapMessage = {\n          messageType: _constants.ROAP.ROAP_TYPES.OK,\n          version: _constants.ROAP.ROAP_VERSION,\n          seq: options.seq\n        };\n\n        _loggerProxy.default.logger.log(\"Roap:index#sendRoapOK --> ROAP OK sending with seq \".concat(options.seq));\n\n        return _this2.roapRequest.sendRoap({\n          roapMessage: roapMessage,\n          locusSelfUrl: meeting.selfUrl,\n          mediaId: options.mediaId,\n          correlationId: options.correlationId,\n          audioMuted: meeting.isAudioMuted(),\n          videoMuted: meeting.isVideoMuted(),\n          meetingId: meeting.id\n        }).then(function () {\n          _this2.roapHandler.submit({\n            type: _constants.ROAP.SEND_ROAP_MSG,\n            msg: roapMessage,\n            correlationId: options.correlationId\n          });\n\n          _loggerProxy.default.logger.log(\"Roap:index#sendRoapOK --> ROAP OK sent with seq \".concat(options.seq));\n\n          meeting.setRoapSeq(options.seq);\n        });\n      });\n    } // eslint-disable-next-line no-warning-comments\n    // TODO: try to merge sendRoapOk and roapAnswer\n\n    /**\n     * Sends a ROAP answer...\n     * @param {SeqOptions} options\n     * @param {Boolean} options.audioMuted\n     * @param {Boolean} options.videoMuted\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: \"sendRoapAnswer\",\n    value: function sendRoapAnswer(options) {\n      var _this3 = this;\n\n      var meeting = this.webex.meetings.meetingCollection.getByKey('correlationId', options.correlationId);\n      var roapMessage = {\n        messageType: _constants.ROAP.ROAP_TYPES.ANSWER,\n        sdps: options.sdps,\n        version: _constants.ROAP.ROAP_VERSION,\n        seq: options.seq\n      };\n      this.roapHandler.submit({\n        type: _constants.ROAP.SEND_ROAP_MSG,\n        msg: roapMessage,\n        correlationId: options.correlationId\n      });\n      return this.roapRequest.sendRoap({\n        roapMessage: roapMessage,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: options.mediaId,\n        correlationId: options.correlationId,\n        audioMuted: options.audioMuted,\n        videoMuted: options.videoMuted,\n        meetingId: meeting.id\n      }).then(function () {\n        meeting.setRoapSeq(options.seq);\n\n        _this3.roapHandler.submit({\n          type: _constants.ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n      });\n    }\n    /**\n     * Sends a ROAP error...\n     * @param {Object} session\n     * @param {Object} locus\n     * @param {String} errorType\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: \"sendRoapError\",\n    value: function sendRoapError(session, locus, errorType) {\n      var msg = {\n        messageType: _constants.ROAP.ROAP_TYPES.ERROR,\n        version: _constants.ROAP.ROAP_VERSION,\n        errorType: errorType,\n        seq: session.OFFER.seq\n      };\n      return this.roapRequest.sendRoap(msg, locus);\n    }\n    /**\n     * sends a roap media request\n     * @param {RoapOptions} options\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: \"sendRoapMediaRequest\",\n    value: function sendRoapMediaRequest(options) {\n      var _this4 = this;\n\n      var meeting = options.meeting,\n          reconnect = options.reconnect;\n      var roapMessage = {\n        messageType: _constants.ROAP.ROAP_TYPES.OFFER,\n        sdps: [options.sdp],\n        // sdps: [options.sdp],\n        version: _constants.ROAP.ROAP_VERSION,\n        seq: typeof options.roapSeq !== 'number' && (0, _isNan.default)((0, _parseFloat2.default)(options.roapSeq)) ? 0 : options.roapSeq + 1,\n        tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n\n      };\n      this.roapHandler.submit({\n        type: _constants.ROAP.SEND_ROAP_MSG,\n        msg: roapMessage,\n        correlationId: meeting.correlationId\n      });\n      return this.roapRequest.sendRoap({\n        roapMessage: roapMessage,\n        correlationId: meeting.correlationId,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: reconnect ? '' : meeting.mediaId,\n        audioMuted: meeting.isAudioMuted(),\n        videoMuted: meeting.isVideoMuted(),\n        meetingId: meeting.id\n      }).then(function (_ref) {\n        var locus = _ref.locus,\n            mediaConnections = _ref.mediaConnections;\n\n        _this4.roapHandler.submit({\n          type: _constants.ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n\n        meeting.setRoapSeq(roapMessage.seq);\n\n        if (mediaConnections) {\n          meeting.updateMediaConnections(mediaConnections);\n        } // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n\n\n        return locus; // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n    }\n    /**\n     * sends a roap media request\n     * @param {RoapOptions} options\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: \"roapFinished\",\n    value:\n    /**\n     * Called when the roap sequence is finished (completed successfully or failed)\n     * @param {String} correlationId id of the meeting affected\n     * @param {String} sequenceId the id of the finished sequence\n     * @returns {undefined}\n     * @private\n     * @memberof Roap\n     */\n    function roapFinished(correlationId, sequenceId) {\n      _collection.default.onSessionSequenceFinish(correlationId, sequenceId);\n\n      var meeting = this.webex.meetings.meetingCollection.getByKey('correlationId', correlationId);\n      meeting.mediaNegotiatedEvent();\n\n      if (!_collection.default.isBusy(correlationId)) {\n        meeting.processNextQueuedMediaUpdate();\n      }\n    }\n  }]);\n  return Roap;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = Roap;","map":{"version":3,"mappings":"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","names":["Roap","attrs","options","_this","meeting","roapMessage","messageType","ROAP","ROAP_TYPES","OFFER","sdps","sdp","version","ROAP_VERSION","seq","roapSeq","tieBreaker","roapHandler","submit","type","SEND_ROAP_MSG","msg","correlationId","roapBody","localMedias","localSdp","roapRequest","attachRechabilityData","audioMuted","isAudioMuted","videoMuted","isVideoMuted","MeetingUtil","joinMeetingOptions","then","locus","SEND_ROAP_MSG_SUCCESS","setRoapSeq","RoapHandler","sendRoapOK","bind","sendRoapAnswer","roapFinished","RoapRequest","lastRoapOffer","data","message","LoggerProxy","logger","log","RECEIVE_ROAP_MSG","RECEIVE_CALL_LEAVE","_promise","resolve","_this2","webex","meetings","meetingCollection","getByKey","OK","sendRoap","locusSelfUrl","selfUrl","mediaId","meetingId","id","ANSWER","_this3","session","errorType","ERROR","reconnect","mediaConnections","_this4","updateMediaConnections","sequenceId","RoapCollection","onSessionSequenceFinish","mediaNegotiatedEvent","isBusy","processNextQueuedMediaUpdate","StatelessWebexPlugin"],"sources":["index.js"],"sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {ROAP} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport MeetingUtil from '../meeting/util';\n\nimport RoapHandler from './handler';\nimport RoapRequest from './request';\nimport RoapCollection from './collection';\n\n/**\n * Roap options\n * @typedef {Object} RoapOptions\n * @property {String} sdp\n * @property {Meeting} meeting\n * @property {Number} roapSeq\n * @property {Boolean} reconnect\n */\n\n/**\n  * @typedef {Object} SeqOptions\n  * @property {String} correlationId\n  * @property {String} mediaId\n  * @property {Number} seq\n  */\n\n/**\n * @class Roap\n * @export\n * @private\n */\nexport default class Roap extends StatelessWebexPlugin {\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.options = options;\n    /**\n     * The Roap Process State Handler\n     * @instance\n     * @type {RoapHandler}\n     * @private\n     * @memberof Roap\n     */\n    this.roapHandler = new RoapHandler(this.attrs, this.options, this.sendRoapOK.bind(this), this.sendRoapAnswer.bind(this), this.roapFinished.bind(this));\n    /**\n     * The Roap Request Server Proxy Object\n     * @instance\n     * @type {RoapRequest}\n     * @private\n     * @memberof Roap\n     */\n    this.roapRequest = new RoapRequest({}, options);\n    /**\n     * The last roap offer sent to server and acked\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.lastRoapOffer = {};\n  }\n\n  /**\n   * Starts listening to mercury events for Roap messages\n   * @param {object} data event object\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  roapEvent(data) {\n    const msg = data.message;\n    const {correlationId} = data;\n\n    LoggerProxy.logger.log(`Roap:index#roapEvent --> Received Roap Message [${JSON.stringify(msg, null, 2)}]`);\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_ROAP_MSG,\n      msg,\n      correlationId\n    });\n  }\n\n  /**\n   *\n   * @param {String} correlationId correlation id of a meeting\n   * @param {Number} seq ROAP sequence number\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  stop(correlationId, seq) {\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_CALL_LEAVE,\n      seq,\n      correlationId\n    });\n\n    return Promise.resolve();\n  }\n\n  /**\n   *\n   * @param {SeqOptions} options\n   * @returns {null}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapOK(options) {\n    return Promise.resolve().then(() => {\n      const meeting = this.webex.meetings.meetingCollection.getByKey('correlationId', options.correlationId);\n      const roapMessage = {\n        messageType: ROAP.ROAP_TYPES.OK,\n        version: ROAP.ROAP_VERSION,\n        seq: options.seq\n      };\n\n      LoggerProxy.logger.log(`Roap:index#sendRoapOK --> ROAP OK sending with seq ${options.seq}`);\n\n      return this.roapRequest\n        .sendRoap({\n          roapMessage,\n          locusSelfUrl: meeting.selfUrl,\n          mediaId: options.mediaId,\n          correlationId: options.correlationId,\n          audioMuted: meeting.isAudioMuted(),\n          videoMuted: meeting.isVideoMuted(),\n          meetingId: meeting.id\n        })\n        .then(() => {\n          this.roapHandler.submit({\n            type: ROAP.SEND_ROAP_MSG,\n            msg: roapMessage,\n            correlationId: options.correlationId\n          });\n          LoggerProxy.logger.log(`Roap:index#sendRoapOK --> ROAP OK sent with seq ${options.seq}`);\n          meeting.setRoapSeq(options.seq);\n        });\n    });\n  }\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: try to merge sendRoapOk and roapAnswer\n  /**\n   * Sends a ROAP answer...\n   * @param {SeqOptions} options\n   * @param {Boolean} options.audioMuted\n   * @param {Boolean} options.videoMuted\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapAnswer(options) {\n    const meeting = this.webex.meetings.meetingCollection.getByKey('correlationId', options.correlationId);\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.ANSWER,\n      sdps: options.sdps,\n      version: ROAP.ROAP_VERSION,\n      seq: options.seq\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: options.correlationId\n    });\n\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: options.mediaId,\n        correlationId: options.correlationId,\n        audioMuted: options.audioMuted,\n        videoMuted: options.videoMuted,\n        meetingId: meeting.id\n      })\n      .then(() => {\n        meeting.setRoapSeq(options.seq);\n\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n      });\n  }\n\n  /**\n   * Sends a ROAP error...\n   * @param {Object} session\n   * @param {Object} locus\n   * @param {String} errorType\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapError(session, locus, errorType) {\n    const msg = {\n      messageType: ROAP.ROAP_TYPES.ERROR,\n      version: ROAP.ROAP_VERSION,\n      errorType,\n      seq: session.OFFER.seq\n    };\n\n    return this.roapRequest.sendRoap(msg, locus);\n  }\n\n  /**\n   * sends a roap media request\n   * @param {RoapOptions} options\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapMediaRequest(options) {\n    const {meeting, reconnect} = options;\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.OFFER,\n      sdps: [options.sdp],\n      // sdps: [options.sdp],\n      version: ROAP.ROAP_VERSION,\n      seq: typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n      tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: meeting.correlationId\n    });\n\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        correlationId: meeting.correlationId,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: reconnect ? '' : meeting.mediaId,\n        audioMuted: meeting.isAudioMuted(),\n        videoMuted: meeting.isVideoMuted(),\n        meetingId: meeting.id\n      })\n      .then(({locus, mediaConnections}) => {\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n        meeting.setRoapSeq(roapMessage.seq);\n\n        if (mediaConnections) {\n          meeting.updateMediaConnections(mediaConnections);\n        }\n\n        // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n        return locus;\n        // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n  }\n\n  /**\n   * sends a roap media request\n   * @param {RoapOptions} options\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\nsendRoapCallRequest = (options) => {\n  const {meeting} = options;\n  const roapMessage = {\n    messageType: ROAP.ROAP_TYPES.OFFER,\n    sdps: [options.sdp],\n    version: ROAP.ROAP_VERSION,\n    seq: typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n    tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n  };\n\n  this.roapHandler.submit({\n    type: ROAP.SEND_ROAP_MSG,\n    msg: roapMessage,\n    correlationId: meeting.correlationId\n  });\n\n  const roapBody = {\n    localMedias: [\n      {\n        localSdp: JSON.stringify(this.roapRequest.attachRechabilityData({\n          roapMessage,\n          // eslint-disable-next-line no-warning-comments\n          // TODO: check whats the need for video and audiomute\n          audioMuted: !!meeting.isAudioMuted(),\n          videoMuted: !!meeting.isVideoMuted()\n        }))\n        // mediaId: meeting.mediaId\n      }\n    ]\n  };\n\n  return MeetingUtil.joinMeetingOptions(meeting, {roapMessage: roapBody})\n    .then((locus) => {\n      this.roapHandler.submit({\n        type: ROAP.SEND_ROAP_MSG_SUCCESS,\n        seq: roapMessage.seq,\n        correlationId: meeting.correlationId\n      });\n      meeting.setRoapSeq(roapMessage.seq);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n      return locus;\n      // eslint-disable-next-line no-warning-comments\n      // TODO: check where to update the sequence number\n    });\n};\n\n/**\n * Called when the roap sequence is finished (completed successfully or failed)\n * @param {String} correlationId id of the meeting affected\n * @param {String} sequenceId the id of the finished sequence\n * @returns {undefined}\n * @private\n * @memberof Roap\n */\nroapFinished(correlationId, sequenceId) {\n  RoapCollection.onSessionSequenceFinish(correlationId, sequenceId);\n  const meeting = this.webex.meetings.meetingCollection.getByKey('correlationId', correlationId);\n\n  meeting.mediaNegotiatedEvent();\n  if (!RoapCollection.isBusy(correlationId)) {\n    meeting.processNextQueuedMediaUpdate();\n  }\n}\n}\n"]},"metadata":{},"sourceType":"script"}