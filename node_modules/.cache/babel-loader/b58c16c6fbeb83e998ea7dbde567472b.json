{"ast":null,"code":"import _classCallCheck from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\"; //**************************************************************************************\n\n/**\r\n * Class from RFC5280\r\n */\n\nvar PrivateKeyUsagePeriod = /*#__PURE__*/function () {\n  //**********************************************************************************\n\n  /**\r\n   * Constructor for PrivateKeyUsagePeriod class\r\n   * @param {Object} [parameters={}]\r\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n   */\n  function PrivateKeyUsagePeriod() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PrivateKeyUsagePeriod);\n\n    //region Internal properties of the object\n    if (\"notBefore\" in parameters)\n      /**\r\n       * @type {Date}\r\n       * @desc notBefore\r\n       */\n      this.notBefore = getParametersValue(parameters, \"notBefore\", PrivateKeyUsagePeriod.defaultValues(\"notBefore\"));\n    if (\"notAfter\" in parameters)\n      /**\r\n       * @type {Date}\r\n       * @desc notAfter\r\n       */\n      this.notAfter = getParametersValue(parameters, \"notAfter\", PrivateKeyUsagePeriod.defaultValues(\"notAfter\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\r\n   * Return default values for all class members\r\n   * @param {string} memberName String name for a class member\r\n   */\n\n\n  _createClass(PrivateKeyUsagePeriod, [{\n    key: \"fromSchema\",\n    value: //**********************************************************************************\n\n    /**\r\n     * Convert parsed asn1js object into current class\r\n     * @param {!Object} schema\r\n     */\n    function fromSchema(schema) {\n      //region Clear input data first\n      clearProps(schema, [\"notBefore\", \"notAfter\"]); //endregion\n      //region Check the schema is valid\n\n      var asn1 = asn1js.compareSchema(schema, schema, PrivateKeyUsagePeriod.schema({\n        names: {\n          notBefore: \"notBefore\",\n          notAfter: \"notAfter\"\n        }\n      }));\n      if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for PrivateKeyUsagePeriod\"); //endregion\n      //region Get internal properties from parsed schema\n\n      if (\"notBefore\" in asn1.result) {\n        var localNotBefore = new asn1js.GeneralizedTime();\n        localNotBefore.fromBuffer(asn1.result.notBefore.valueBlock.valueHex);\n        this.notBefore = localNotBefore.toDate();\n      }\n\n      if (\"notAfter\" in asn1.result) {\n        var localNotAfter = new asn1js.GeneralizedTime({\n          valueHex: asn1.result.notAfter.valueBlock.valueHex\n        });\n        localNotAfter.fromBuffer(asn1.result.notAfter.valueBlock.valueHex);\n        this.notAfter = localNotAfter.toDate();\n      } //endregion\n\n    } //**********************************************************************************\n\n    /**\r\n     * Convert current object to asn1js object and set correct values\r\n     * @returns {Object} asn1js object\r\n     */\n\n  }, {\n    key: \"toSchema\",\n    value: function toSchema() {\n      //region Create array for output sequence\n      var outputArray = [];\n\n      if (\"notBefore\" in this) {\n        outputArray.push(new asn1js.Primitive({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          valueHex: new asn1js.GeneralizedTime({\n            valueDate: this.notBefore\n          }).valueBlock.valueHex\n        }));\n      }\n\n      if (\"notAfter\" in this) {\n        outputArray.push(new asn1js.Primitive({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          },\n          valueHex: new asn1js.GeneralizedTime({\n            valueDate: this.notAfter\n          }).valueBlock.valueHex\n        }));\n      } //endregion\n      //region Construct and return new ASN.1 schema for this object\n\n\n      return new asn1js.Sequence({\n        value: outputArray\n      }); //endregion\n    } //**********************************************************************************\n\n    /**\r\n     * Convertion for the class to JSON object\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var object = {};\n      if (\"notBefore\" in this) object.notBefore = this.notBefore;\n      if (\"notAfter\" in this) object.notAfter = this.notAfter;\n      return object;\n    } //**********************************************************************************\n\n  }], [{\n    key: \"defaultValues\",\n    value: function defaultValues(memberName) {\n      switch (memberName) {\n        case \"notBefore\":\n          return new Date();\n\n        case \"notAfter\":\n          return new Date();\n\n        default:\n          throw new Error(\"Invalid member name for PrivateKeyUsagePeriod class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Return value of pre-defined ASN.1 schema for current class\r\n     *\r\n     * ASN.1 schema:\r\n     * ```asn1\r\n     * PrivateKeyUsagePeriod OID ::= 2.5.29.16\r\n     *\r\n     * PrivateKeyUsagePeriod ::= SEQUENCE {\r\n     *    notBefore       [0]     GeneralizedTime OPTIONAL,\r\n     *    notAfter        [1]     GeneralizedTime OPTIONAL }\r\n     * -- either notBefore or notAfter MUST be present\r\n     * ```\r\n     *\r\n     * @param {Object} parameters Input parameters for the schema\r\n     * @returns {Object} asn1js schema object\r\n     */\n\n  }, {\n    key: \"schema\",\n    value: function schema() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\r\n       * @type {Object}\r\n       * @property {string} [blockName]\r\n       * @property {string} [notBefore]\r\n       * @property {string} [notAfter]\r\n       */\n      var names = getParametersValue(parameters, \"names\", {});\n      return new asn1js.Sequence({\n        name: names.blockName || \"\",\n        value: [new asn1js.Primitive({\n          name: names.notBefore || \"\",\n          optional: true,\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          }\n        }), new asn1js.Primitive({\n          name: names.notAfter || \"\",\n          optional: true,\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          }\n        })]\n      });\n    }\n  }]);\n\n  return PrivateKeyUsagePeriod;\n}(); //**************************************************************************************\n\n\nexport { PrivateKeyUsagePeriod as default };","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/PrivateKeyUsagePeriod.js"],"names":["asn1js","getParametersValue","clearProps","PrivateKeyUsagePeriod","parameters","notBefore","defaultValues","notAfter","fromSchema","schema","asn1","compareSchema","names","verified","Error","result","localNotBefore","GeneralizedTime","fromBuffer","valueBlock","valueHex","toDate","localNotAfter","outputArray","push","Primitive","idBlock","tagClass","tagNumber","valueDate","Sequence","value","object","memberName","Date","name","blockName","optional"],"mappings":";;AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,SAA/C,C,CACA;;AACA;AACA;AACA;;IACqBC,qB;AAEpB;;AACA;AACD;AACA;AACA;AACA;AACC,mCACA;AAAA,QADYC,UACZ,uEADyB,EACzB;;AAAA;;AACC;AACA,QAAG,eAAeA,UAAlB;AACC;AACH;AACA;AACA;AACG,WAAKC,SAAL,GAAiBJ,kBAAkB,CAACG,UAAD,EAAa,WAAb,EAA0BD,qBAAqB,CAACG,aAAtB,CAAoC,WAApC,CAA1B,CAAnC;AAED,QAAG,cAAcF,UAAjB;AACC;AACH;AACA;AACA;AACG,WAAKG,QAAL,GAAgBN,kBAAkB,CAACG,UAAD,EAAa,UAAb,EAAyBD,qBAAqB,CAACG,aAAtB,CAAoC,UAApC,CAAzB,CAAlC,CAdF,CAeC;AAEA;;AACA,QAAG,YAAYF,UAAf,EACC,KAAKI,UAAL,CAAgBJ,UAAU,CAACK,MAA3B,EAnBF,CAoBC;AACA,G,CACD;;AACA;AACD;AACA;AACA;;;;;WA8DC;;AACA;AACD;AACA;AACA;AACC,wBAAWA,MAAX,EACA;AACC;AACAP,MAAAA,UAAU,CAACO,MAAD,EAAS,CAClB,WADkB,EAElB,UAFkB,CAAT,CAAV,CAFD,CAMC;AAEA;;AACA,UAAMC,IAAI,GAAGV,MAAM,CAACW,aAAP,CAAqBF,MAArB,EACZA,MADY,EAEZN,qBAAqB,CAACM,MAAtB,CAA6B;AAC5BG,QAAAA,KAAK,EAAE;AACNP,UAAAA,SAAS,EAAE,WADL;AAENE,UAAAA,QAAQ,EAAE;AAFJ;AADqB,OAA7B,CAFY,CAAb;AAUA,UAAGG,IAAI,CAACG,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIC,KAAJ,CAAU,+EAAV,CAAN,CApBF,CAqBC;AAEA;;AACA,UAAG,eAAeJ,IAAI,CAACK,MAAvB,EACA;AACC,YAAMC,cAAc,GAAG,IAAIhB,MAAM,CAACiB,eAAX,EAAvB;AACAD,QAAAA,cAAc,CAACE,UAAf,CAA0BR,IAAI,CAACK,MAAL,CAAYV,SAAZ,CAAsBc,UAAtB,CAAiCC,QAA3D;AACA,aAAKf,SAAL,GAAiBW,cAAc,CAACK,MAAf,EAAjB;AACA;;AAED,UAAG,cAAcX,IAAI,CAACK,MAAtB,EACA;AACC,YAAMO,aAAa,GAAG,IAAItB,MAAM,CAACiB,eAAX,CAA2B;AAAEG,UAAAA,QAAQ,EAAEV,IAAI,CAACK,MAAL,CAAYR,QAAZ,CAAqBY,UAArB,CAAgCC;AAA5C,SAA3B,CAAtB;AACAE,QAAAA,aAAa,CAACJ,UAAd,CAAyBR,IAAI,CAACK,MAAL,CAAYR,QAAZ,CAAqBY,UAArB,CAAgCC,QAAzD;AACA,aAAKb,QAAL,GAAgBe,aAAa,CAACD,MAAd,EAAhB;AACA,OApCF,CAqCC;;AACA,K,CACD;;AACA;AACD;AACA;AACA;;;;WACC,oBACA;AACC;AACA,UAAME,WAAW,GAAG,EAApB;;AAEA,UAAG,eAAe,IAAlB,EACA;AACCA,QAAAA,WAAW,CAACC,IAAZ,CAAiB,IAAIxB,MAAM,CAACyB,SAAX,CAAqB;AACrCC,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,WAD4B;AAKrCR,UAAAA,QAAQ,EAAG,IAAIpB,MAAM,CAACiB,eAAX,CAA2B;AAAEY,YAAAA,SAAS,EAAE,KAAKxB;AAAlB,WAA3B,CAAD,CAA4Dc,UAA5D,CAAuEC;AAL5C,SAArB,CAAjB;AAOA;;AAED,UAAG,cAAc,IAAjB,EACA;AACCG,QAAAA,WAAW,CAACC,IAAZ,CAAiB,IAAIxB,MAAM,CAACyB,SAAX,CAAqB;AACrCC,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,WAD4B;AAKrCR,UAAAA,QAAQ,EAAG,IAAIpB,MAAM,CAACiB,eAAX,CAA2B;AAAEY,YAAAA,SAAS,EAAE,KAAKtB;AAAlB,WAA3B,CAAD,CAA2DY,UAA3D,CAAsEC;AAL3C,SAArB,CAAjB;AAOA,OAxBF,CAyBC;AAEA;;;AACA,aAAQ,IAAIpB,MAAM,CAAC8B,QAAX,CAAoB;AAC3BC,QAAAA,KAAK,EAAER;AADoB,OAApB,CAAR,CA5BD,CA+BC;AACA,K,CACD;;AACA;AACD;AACA;AACA;;;;WACC,kBACA;AACC,UAAMS,MAAM,GAAG,EAAf;AAEA,UAAG,eAAe,IAAlB,EACCA,MAAM,CAAC3B,SAAP,GAAmB,KAAKA,SAAxB;AAED,UAAG,cAAc,IAAjB,EACC2B,MAAM,CAACzB,QAAP,GAAkB,KAAKA,QAAvB;AAED,aAAOyB,MAAP;AACA,K,CACD;;;;WAlKA,uBAAqBC,UAArB,EACA;AACC,cAAOA,UAAP;AAEC,aAAK,WAAL;AACC,iBAAO,IAAIC,IAAJ,EAAP;;AACD,aAAK,UAAL;AACC,iBAAO,IAAIA,IAAJ,EAAP;;AACD;AACC,gBAAM,IAAIpB,KAAJ,gEAAkEmB,UAAlE,EAAN;AAPF;AASA,K,CACD;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,kBACA;AAAA,UADc7B,UACd,uEAD2B,EAC3B;;AACC;AACF;AACA;AACA;AACA;AACA;AACE,UAAMQ,KAAK,GAAGX,kBAAkB,CAACG,UAAD,EAAa,OAAb,EAAsB,EAAtB,CAAhC;AAEA,aAAQ,IAAIJ,MAAM,CAAC8B,QAAX,CAAoB;AAC3BK,QAAAA,IAAI,EAAGvB,KAAK,CAACwB,SAAN,IAAmB,EADC;AAE3BL,QAAAA,KAAK,EAAE,CACN,IAAI/B,MAAM,CAACyB,SAAX,CAAqB;AACpBU,UAAAA,IAAI,EAAGvB,KAAK,CAACP,SAAN,IAAmB,EADN;AAEpBgC,UAAAA,QAAQ,EAAE,IAFU;AAGpBX,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL;AAHW,SAArB,CADM,EASN,IAAI5B,MAAM,CAACyB,SAAX,CAAqB;AACpBU,UAAAA,IAAI,EAAGvB,KAAK,CAACL,QAAN,IAAkB,EADL;AAEpB8B,UAAAA,QAAQ,EAAE,IAFU;AAGpBX,UAAAA,OAAO,EAAE;AACRC,YAAAA,QAAQ,EAAE,CADF;AACK;AACbC,YAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL;AAHW,SAArB,CATM;AAFoB,OAApB,CAAR;AAqBA;;;;KAwGF;;;SAxMqBzB,qB","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PrivateKeyUsagePeriod\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PrivateKeyUsagePeriod class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"notBefore\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @desc notBefore\r\n\t\t\t */\r\n\t\t\tthis.notBefore = getParametersValue(parameters, \"notBefore\", PrivateKeyUsagePeriod.defaultValues(\"notBefore\"));\r\n\r\n\t\tif(\"notAfter\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @desc notAfter\r\n\t\t\t */\r\n\t\t\tthis.notAfter = getParametersValue(parameters, \"notAfter\", PrivateKeyUsagePeriod.defaultValues(\"notAfter\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"notBefore\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tcase \"notAfter\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PrivateKeyUsagePeriod OID ::= 2.5.29.16\r\n\t *\r\n\t * PrivateKeyUsagePeriod ::= SEQUENCE {\r\n\t *    notBefore       [0]     GeneralizedTime OPTIONAL,\r\n\t *    notAfter        [1]     GeneralizedTime OPTIONAL }\r\n\t * -- either notBefore or notAfter MUST be present\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [notBefore]\r\n\t\t * @property {string} [notAfter]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notBefore || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notAfter || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"notBefore\",\r\n\t\t\t\"notAfter\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPrivateKeyUsagePeriod.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tnotBefore: \"notBefore\",\r\n\t\t\t\t\tnotAfter: \"notAfter\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PrivateKeyUsagePeriod\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"notBefore\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotBefore = new asn1js.GeneralizedTime();\r\n\t\t\tlocalNotBefore.fromBuffer(asn1.result.notBefore.valueBlock.valueHex);\r\n\t\t\tthis.notBefore = localNotBefore.toDate();\r\n\t\t}\r\n\r\n\t\tif(\"notAfter\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotAfter = new asn1js.GeneralizedTime({ valueHex: asn1.result.notAfter.valueBlock.valueHex });\r\n\t\t\tlocalNotAfter.fromBuffer(asn1.result.notAfter.valueBlock.valueHex);\r\n\t\t\tthis.notAfter = localNotAfter.toDate();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"notBefore\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notBefore })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"notAfter\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notAfter })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"notBefore\" in this)\r\n\t\t\tobject.notBefore = this.notBefore;\r\n\r\n\t\tif(\"notAfter\" in this)\r\n\t\t\tobject.notAfter = this.notAfter;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]},"metadata":{},"sourceType":"module"}