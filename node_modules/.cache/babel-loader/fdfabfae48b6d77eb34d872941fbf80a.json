{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n/**\n * Simple queue\n */\n\n\nvar SimpleQueue = /*#__PURE__*/function () {\n  /**\n   * @constructs SimpleQueue\n   */\n  function SimpleQueue() {\n    (0, _classCallCheck2.default)(this, SimpleQueue);\n    this.queue = [];\n  }\n  /**\n   * Removes all of the elements from queue.\n   * @returns {undefined}\n   */\n\n\n  (0, _createClass2.default)(SimpleQueue, [{\n    key: \"clear\",\n    value: function clear() {\n      this.queue = [];\n    }\n    /**\n     * Inserts the specified element into the queue.\n     * @param {object} item\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(item) {\n      this.queue.push(item);\n    }\n    /**\n     * Returns and removes the head of the queue.\n     * Returns null if the queue is empty.\n     * @returns {(object|null)} Queue item or null.\n     */\n\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      if (this.queue.length === 0) {\n        return null;\n      }\n\n      return this.queue.shift();\n    }\n    /**\n     * Returns the number of items in queue.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.queue.length;\n    }\n  }]);\n  return SimpleQueue;\n}();\n\nexports.default = SimpleQueue;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;;;IACqBA,W;AACnB;AACF;AACA;AACE,yBAAc;AAAA;AACZ,SAAKC,KAAL,GAAa,EAAb;AACD;AAED;AACF;AACA;AACA;;;;;WACE,iBAAQ;AACN,WAAKA,KAAL,GAAa,EAAb;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,iBAAQC,IAAR,EAAc;AACZ,WAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,mBAAU;AACR,UAAI,KAAKD,KAAL,CAAWG,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,eAAO,IAAP;AACD;;AAED,aAAO,KAAKH,KAAL,CAAWI,KAAX,EAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,gBAAO;AACL,aAAO,KAAKJ,KAAL,CAAWG,MAAlB;AACD","names":["SimpleQueue","queue","item","push","length","shift"],"sources":["queue.js"],"sourcesContent":["/**\n * Simple queue\n */\nexport default class SimpleQueue {\n  /**\n   * @constructs SimpleQueue\n   */\n  constructor() {\n    this.queue = [];\n  }\n\n  /**\n   * Removes all of the elements from queue.\n   * @returns {undefined}\n   */\n  clear() {\n    this.queue = [];\n  }\n\n  /**\n   * Inserts the specified element into the queue.\n   * @param {object} item\n   * @returns {undefined}\n   */\n  enqueue(item) {\n    this.queue.push(item);\n  }\n\n  /**\n   * Returns and removes the head of the queue.\n   * Returns null if the queue is empty.\n   * @returns {(object|null)} Queue item or null.\n   */\n  dequeue() {\n    if (this.queue.length === 0) {\n      return null;\n    }\n\n    return this.queue.shift();\n  }\n\n  /**\n   * Returns the number of items in queue.\n   * @returns {number}\n   */\n  size() {\n    return this.queue.length;\n  }\n}\n\n"]},"metadata":{},"sourceType":"script"}