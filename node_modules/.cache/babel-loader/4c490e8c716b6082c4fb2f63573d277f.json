{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapNativeSuper\"));\n\nvar _constants = require(\"../../constants\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Extended Error object to signify the intent to join for unclaimed PMR scenarios\n */\n\n\nvar IntentToJoinError = /*#__PURE__*/function (_Error) {\n  (0, _inherits2.default)(IntentToJoinError, _Error);\n\n  var _super = _createSuper(IntentToJoinError);\n  /**\n  *\n  * @constructor\n  * @param {String} [message]\n  * @param {Object} [error]\n  */\n\n\n  function IntentToJoinError() {\n    var _this;\n\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constants.ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE;\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    (0, _classCallCheck2.default)(this, IntentToJoinError);\n    _this = _super.call(this, message);\n    _this.name = _constants.ERROR_DICTIONARY.INTENT_TO_JOIN.NAME;\n    _this.sdkMessage = _constants.ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE;\n    _this.error = error;\n    _this.stack = error ? error.stack : new Error().stack;\n    _this.joinIntentRequired = true;\n    _this.code = _constants.ERROR_DICTIONARY.INTENT_TO_JOIN.CODE;\n    return _this;\n  }\n\n  return IntentToJoinError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));\n\nexports.default = IntentToJoinError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;IACqBA,iB;;;;AACnB;AACF;AACA;AACA;AACA;AACA;;;AACE,+BAA6E;AAAA;;AAAA,QAAjEC,OAAiE,uEAAvDC,4BAAiBC,cAAjBD,CAAgCE,OAAuB;AAAA,QAAdC,KAAc,uEAAN,IAAM;AAAA;AAC3EC,8BAAML,OAAN;AACAK,UAAKC,IAAL,GAAYL,4BAAiBC,cAAjBD,CAAgCM,IAA5C;AACAF,UAAKG,UAAL,GAAkBP,4BAAiBC,cAAjBD,CAAgCE,OAAlD;AACAE,UAAKD,KAAL,GAAaA,KAAb;AACAC,UAAKI,KAAL,GAAaL,KAAK,GAAGA,KAAK,CAACK,KAAT,GAAkB,IAAIC,KAAJ,GAAaD,KAAjD;AACAJ,UAAKM,kBAAL,GAA0B,IAA1B;AACAN,UAAKO,IAAL,GAAYX,4BAAiBC,cAAjBD,CAAgCY,IAA5C;AAP2E;AAQ5E;;;+CAf4CH,M","names":["IntentToJoinError","message","ERROR_DICTIONARY","INTENT_TO_JOIN","MESSAGE","error","_this","name","NAME","sdkMessage","stack","Error","joinIntentRequired","code","CODE"],"sources":["intent-to-join.js"],"sourcesContent":["import {ERROR_DICTIONARY} from '../../constants';\n\n/**\n * Extended Error object to signify the intent to join for unclaimed PMR scenarios\n */\nexport default class IntentToJoinError extends Error {\n  /**\n  *\n  * @constructor\n  * @param {String} [message]\n  * @param {Object} [error]\n  */\n  constructor(message = ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE, error = null) {\n    super(message);\n    this.name = ERROR_DICTIONARY.INTENT_TO_JOIN.NAME;\n    this.sdkMessage = ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE;\n    this.error = error;\n    this.stack = error ? error.stack : (new Error()).stack;\n    this.joinIntentRequired = true;\n    this.code = ERROR_DICTIONARY.INTENT_TO_JOIN.CODE;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}