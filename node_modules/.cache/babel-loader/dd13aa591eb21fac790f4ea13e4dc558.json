{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _window = _interopRequireDefault(require(\"global/window\"));\n\nvar _browserDetection = _interopRequireDefault(require(\"../common/browser-detection\"));\n\nvar _constants = require(\"../constants\");\n\nvar _loggerProxy = _interopRequireDefault(require(\"../common/logs/logger-proxy\"));\n/* globals MediaStream */\n\n\nvar _BrowserDetection = (0, _browserDetection.default)(),\n    isBrowser = _BrowserDetection.isBrowser;\n\nvar MediaUtil = {};\n\nMediaUtil.createPeerConnection = function () {\n  return new _window.default.RTCPeerConnection(isBrowser('firefox') ? _constants.RTC_CONFIGURATION_FIREFOX : _constants.RTC_CONFIGURATION);\n};\n\nMediaUtil.createMediaStream = function (tracks) {\n  if (!tracks) {\n    _loggerProxy.default.logger.error('Media:util#createMediaStream --> Tracks don\\'t exist');\n  }\n\n  var filtredTracks = tracks.filter(function (element) {\n    return !!element;\n  });\n  return new MediaStream(filtredTracks);\n};\n\nvar _default = MediaUtil;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;AACA;;AAEA;;AACA;;AAIA;AARA;;;AAUA,wBAAoB,gCAApB;AAAA,IAAOA,SAAP,qBAAOA,SAAP;;AAEA,IAAMC,SAAS,GAAG,EAAlB;;AAEAA,SAAS,CAACC,oBAAVD,GAAiC;AAAA,SAAM,IAAIE,gBAAOC,iBAAX,CACrCJ,SAAS,CAAC,SAAD,CAATA,GAAuBK,oCAAvBL,GAAmDM,4BADd,CAAN;AAAjC;;AAIAL,SAAS,CAACM,iBAAVN,GAA8B,UAACO,MAAD,EAAY;AACxC,MAAI,CAACA,MAAL,EAAa;AACXC,yBAAYC,MAAZD,CAAmBE,KAAnBF,CAAyB,sDAAzBA;AACD;;AACD,MAAMG,aAAa,GAAGJ,MAAM,CAACK,MAAPL,CAAc,UAACM,OAAD;AAAA,WAAa,CAAC,CAACA,OAAf;AAAd,IAAtB;AAEA,SAAO,IAAIC,WAAJ,CAAgBH,aAAhB,CAAP;AANF;;eASeX","names":["isBrowser","MediaUtil","createPeerConnection","window","RTCPeerConnection","RTC_CONFIGURATION_FIREFOX","RTC_CONFIGURATION","createMediaStream","tracks","LoggerProxy","logger","error","filtredTracks","filter","element","MediaStream"],"sources":["util.js"],"sourcesContent":["/* globals MediaStream */\nimport window from 'global/window';\n\nimport BrowserDetection from '../common/browser-detection';\nimport {\n  RTC_CONFIGURATION,\n  RTC_CONFIGURATION_FIREFOX\n} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\n\nconst {isBrowser} = BrowserDetection();\n\nconst MediaUtil = {};\n\nMediaUtil.createPeerConnection = () => new window.RTCPeerConnection(\n  isBrowser('firefox') ? RTC_CONFIGURATION_FIREFOX : RTC_CONFIGURATION\n);\n\nMediaUtil.createMediaStream = (tracks) => {\n  if (!tracks) {\n    LoggerProxy.logger.error('Media:util#createMediaStream --> Tracks don\\'t exist');\n  }\n  const filtredTracks = tracks.filter((element) => !!element);\n\n  return new MediaStream(filtredTracks);\n};\n\nexport default MediaUtil;\n"]},"metadata":{},"sourceType":"script"}