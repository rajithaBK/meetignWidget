{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _weakMap = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/weak-map\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/map\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _common = require(\"@webex/common\");\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar usersByEmail = new _weakMap.default();\nvar usersById = new _weakMap.default();\n/**\n * @class\n */\n\nvar UserUUIDStore = /*#__PURE__*/function () {\n  /**\n   * @constructs {UserUUIDStore}\n   */\n  function UserUUIDStore() {\n    (0, _classCallCheck2.default)(this, UserUUIDStore);\n    usersByEmail.set(this, new _map.default());\n    usersById.set(this, new _map.default());\n  }\n  /**\n   * Adds a user object to the store\n   * @param {Object} user\n   * @param {string} user.id\n   * @param {string} user.emailAddress\n   * @returns {Promise}\n   */\n\n\n  (0, _createClass2.default)(UserUUIDStore, [{\n    key: \"add\",\n    value: function add(user) {\n      var _this = this;\n\n      if (!user.id) {\n        return _promise.default.reject(new Error('`user.id` is required'));\n      }\n\n      if (!user.emailAddress) {\n        return _promise.default.reject(new Error('`user.emailAddress` is required'));\n      }\n\n      if (!_common.patterns.uuid.test(user.id)) {\n        return _promise.default.reject(new Error('`user.id` does not appear to be a uuid'));\n      }\n\n      if (!_common.patterns.email.test(user.emailAddress)) {\n        return _promise.default.reject(new Error('`user.emailAddress` does not appear to be an email address'));\n      }\n\n      var p1 = this.getById(user.id).then(function (u) {\n        return usersById.get(_this).set(user.id, (0, _assign.default)({}, u, user));\n      }).catch(function () {\n        return usersById.get(_this).set(user.id, (0, _assign.default)({}, user));\n      });\n      var p2 = this.getByEmail(user.emailAddress).then(function (u) {\n        return usersByEmail.get(_this).set(user.emailAddress, (0, _assign.default)({}, u, user));\n      }).catch(function () {\n        return usersByEmail.get(_this).set(user.emailAddress, (0, _assign.default)({}, user));\n      });\n      return _promise.default.all([p1, p2]);\n    }\n    /**\n     * Retrievves the specified user object from the store\n     * @param {string} id\n     * @returns {Promise<Object>}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      if (_common.patterns.uuid.test(id)) {\n        return this.getById(id);\n      }\n\n      if (_common.patterns.email.test(id)) {\n        return this.getByEmail(id);\n      }\n\n      return _promise.default.reject(new Error('`id` does not appear to be a valid user identifier'));\n    }\n    /**\n     * Retrieves the specified user object by id from the store\n     * @param {Object} id\n     * @returns {Promise<Object>}\n     */\n\n  }, {\n    key: \"getById\",\n    value: function getById(id) {\n      var ret = usersById.get(this).get(id);\n\n      if (ret) {\n        return _promise.default.resolve(ret);\n      }\n\n      return _promise.default.reject(new Error('No user found by specified id'));\n    }\n    /**\n     * Retrieves the specified user object by id from the store\n     * @param {Object} email\n     * @returns {Promise<Object>}\n     */\n\n  }, {\n    key: \"getByEmail\",\n    value: function getByEmail(email) {\n      var ret = usersByEmail.get(this).get(email);\n\n      if (ret) {\n        return _promise.default.resolve(ret);\n      }\n\n      return _promise.default.reject(new Error('No user found by specified email address'));\n    }\n  }]);\n  return UserUUIDStore;\n}();\n\nexports.default = UserUUIDStore;","map":{"version":3,"mappings":"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","names":["usersByEmail","usersById","UserUUIDStore","set","user","id","_promise","reject","Error","emailAddress","patterns","uuid","test","email","p1","getById","then","u","get","_this","catch","p2","getByEmail","all","ret","resolve"],"sources":["user-uuid-store.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {patterns} from '@webex/common';\n\nconst usersByEmail = new WeakMap();\nconst usersById = new WeakMap();\n\n/**\n * @class\n */\nexport default class UserUUIDStore {\n  /**\n   * @constructs {UserUUIDStore}\n   */\n  constructor() {\n    usersByEmail.set(this, new Map());\n    usersById.set(this, new Map());\n  }\n\n  /**\n   * Adds a user object to the store\n   * @param {Object} user\n   * @param {string} user.id\n   * @param {string} user.emailAddress\n   * @returns {Promise}\n   */\n  add(user) {\n    if (!user.id) {\n      return Promise.reject(new Error('`user.id` is required'));\n    }\n\n    if (!user.emailAddress) {\n      return Promise.reject(new Error('`user.emailAddress` is required'));\n    }\n\n    if (!patterns.uuid.test(user.id)) {\n      return Promise.reject(new Error('`user.id` does not appear to be a uuid'));\n    }\n\n    if (!patterns.email.test(user.emailAddress)) {\n      return Promise.reject(new Error('`user.emailAddress` does not appear to be an email address'));\n    }\n\n    const p1 = this.getById(user.id)\n      .then((u) => usersById.get(this).set(user.id, Object.assign({}, u, user)))\n      .catch(() => usersById.get(this).set(user.id, Object.assign({}, user)));\n\n    const p2 = this.getByEmail(user.emailAddress)\n      .then((u) => usersByEmail.get(this).set(user.emailAddress, Object.assign({}, u, user)))\n      .catch(() => usersByEmail.get(this).set(user.emailAddress, Object.assign({}, user)));\n\n    return Promise.all([p1, p2]);\n  }\n\n  /**\n   * Retrievves the specified user object from the store\n   * @param {string} id\n   * @returns {Promise<Object>}\n   */\n  get(id) {\n    if (patterns.uuid.test(id)) {\n      return this.getById(id);\n    }\n\n    if (patterns.email.test(id)) {\n      return this.getByEmail(id);\n    }\n\n    return Promise.reject(new Error('`id` does not appear to be a valid user identifier'));\n  }\n\n  /**\n   * Retrieves the specified user object by id from the store\n   * @param {Object} id\n   * @returns {Promise<Object>}\n   */\n  getById(id) {\n    const ret = usersById.get(this).get(id);\n\n    if (ret) {\n      return Promise.resolve(ret);\n    }\n\n    return Promise.reject(new Error('No user found by specified id'));\n  }\n\n\n  /**\n   * Retrieves the specified user object by id from the store\n   * @param {Object} email\n   * @returns {Promise<Object>}\n   */\n  getByEmail(email) {\n    const ret = usersByEmail.get(this).get(email);\n\n    if (ret) {\n      return Promise.resolve(ret);\n    }\n\n    return Promise.reject(new Error('No user found by specified email address'));\n  }\n}\n"]},"metadata":{},"sourceType":"script"}