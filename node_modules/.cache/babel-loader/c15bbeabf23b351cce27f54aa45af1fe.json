{"ast":null,"code":"import _classCallCheck from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo.js\";\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo.js\";\nimport KEKRecipientInfo from \"./KEKRecipientInfo.js\";\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo.js\";\nimport OtherRecipientInfo from \"./OtherRecipientInfo.js\"; //**************************************************************************************\n\n/**\r\n * Class from RFC5652\r\n */\n\nvar RecipientInfo = /*#__PURE__*/function () {\n  //**********************************************************************************\n\n  /**\r\n   * Constructor for RecipientInfo class\r\n   * @param {Object} [parameters={}]\r\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n   */\n  function RecipientInfo() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, RecipientInfo);\n\n    //region Internal properties of the object\n\n    /**\r\n     * @type {string}\r\n     * @desc variant\r\n     */\n    this.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\n    if (\"value\" in parameters)\n      /**\r\n       * @type {*}\r\n       * @desc value\r\n       */\n      this.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\r\n   * Return default values for all class members\r\n   * @param {string} memberName String name for a class member\r\n   */\n\n\n  _createClass(RecipientInfo, [{\n    key: \"fromSchema\",\n    value: //**********************************************************************************\n\n    /**\r\n     * Convert parsed asn1js object into current class\r\n     * @param {!Object} schema\r\n     */\n    function fromSchema(schema) {\n      //region Clear input data first\n      clearProps(schema, [\"blockName\"]); //endregion\n      //region Check the schema is valid\n\n      var asn1 = asn1js.compareSchema(schema, schema, RecipientInfo.schema({\n        names: {\n          blockName: \"blockName\"\n        }\n      }));\n      if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for RecipientInfo\"); //endregion\n      //region Get internal properties from parsed schema\n\n      if (asn1.result.blockName.idBlock.tagClass === 1) {\n        this.variant = 1;\n        this.value = new KeyTransRecipientInfo({\n          schema: asn1.result.blockName\n        });\n      } else {\n        //region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\n        var blockSequence = new asn1js.Sequence({\n          value: asn1.result.blockName.valueBlock.value\n        }); //endregion\n\n        switch (asn1.result.blockName.idBlock.tagNumber) {\n          case 1:\n            this.variant = 2;\n            this.value = new KeyAgreeRecipientInfo({\n              schema: blockSequence\n            });\n            break;\n\n          case 2:\n            this.variant = 3;\n            this.value = new KEKRecipientInfo({\n              schema: blockSequence\n            });\n            break;\n\n          case 3:\n            this.variant = 4;\n            this.value = new PasswordRecipientinfo({\n              schema: blockSequence\n            });\n            break;\n\n          case 4:\n            this.variant = 5;\n            this.value = new OtherRecipientInfo({\n              schema: blockSequence\n            });\n            break;\n\n          default:\n            throw new Error(\"Incorrect structure of RecipientInfo block\");\n        }\n      } //endregion\n\n    } //**********************************************************************************\n\n    /**\r\n     * Convert current object to asn1js object and set correct values\r\n     * @returns {Object} asn1js object\r\n     */\n\n  }, {\n    key: \"toSchema\",\n    value: function toSchema() {\n      //region Construct and return new ASN.1 schema for this object\n      var _schema = this.value.toSchema();\n\n      switch (this.variant) {\n        case 1:\n          return _schema;\n\n        case 2:\n        case 3:\n        case 4:\n          //region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\n          _schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\n\n          _schema.idBlock.tagNumber = this.variant - 1; //endregion\n\n          return _schema;\n\n        default:\n          return new asn1js.Any();\n      } //endregion\n\n    } //**********************************************************************************\n\n    /**\r\n     * Convertion for the class to JSON object\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _object = {\n        variant: this.variant\n      };\n      if (this.variant >= 1 && this.variant <= 4) _object.value = this.value.toJSON();\n      return _object;\n    } //**********************************************************************************\n\n  }], [{\n    key: \"defaultValues\",\n    value: function defaultValues(memberName) {\n      switch (memberName) {\n        case \"variant\":\n          return -1;\n\n        case \"value\":\n          return {};\n\n        default:\n          throw new Error(\"Invalid member name for RecipientInfo class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Compare values with default values for all class members\r\n     * @param {string} memberName String name for a class member\r\n     * @param {*} memberValue Value to compare with default value\r\n     */\n\n  }, {\n    key: \"compareWithDefault\",\n    value: function compareWithDefault(memberName, memberValue) {\n      switch (memberName) {\n        case \"variant\":\n          return memberValue === RecipientInfo.defaultValues(memberName);\n\n        case \"value\":\n          return Object.keys(memberValue).length === 0;\n\n        default:\n          throw new Error(\"Invalid member name for RecipientInfo class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Return value of pre-defined ASN.1 schema for current class\r\n     *\r\n     * ASN.1 schema:\r\n     * ```asn1\r\n     * RecipientInfo ::= CHOICE {\r\n     *    ktri KeyTransRecipientInfo,\r\n     *    kari [1] KeyAgreeRecipientInfo,\r\n     *    kekri [2] KEKRecipientInfo,\r\n     *    pwri [3] PasswordRecipientinfo,\r\n     *    ori [4] OtherRecipientInfo }\r\n     * ```\r\n     *\r\n     * @param {Object} parameters Input parameters for the schema\r\n     * @returns {Object} asn1js schema object\r\n     */\n\n  }, {\n    key: \"schema\",\n    value: function schema() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\r\n       * @type {Object}\r\n       * @property {string} [blockName]\r\n       * @property {string} [type]\r\n       * @property {string} [setName]\r\n       * @property {string} [values]\r\n       */\n      var names = getParametersValue(parameters, \"names\", {});\n      return new asn1js.Choice({\n        value: [KeyTransRecipientInfo.schema({\n          names: {\n            blockName: names.blockName || \"\"\n          }\n        }), new asn1js.Constructed({\n          name: names.blockName || \"\",\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          },\n          value: KeyAgreeRecipientInfo.schema().valueBlock.value\n        }), new asn1js.Constructed({\n          name: names.blockName || \"\",\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 2 // [2]\n\n          },\n          value: KEKRecipientInfo.schema().valueBlock.value\n        }), new asn1js.Constructed({\n          name: names.blockName || \"\",\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 3 // [3]\n\n          },\n          value: PasswordRecipientinfo.schema().valueBlock.value\n        }), new asn1js.Constructed({\n          name: names.blockName || \"\",\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 4 // [4]\n\n          },\n          value: OtherRecipientInfo.schema().valueBlock.value\n        })]\n      });\n    }\n  }]);\n\n  return RecipientInfo;\n}(); //**************************************************************************************\n\n\nexport { RecipientInfo as default };","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/RecipientInfo.js"],"names":["asn1js","getParametersValue","clearProps","KeyTransRecipientInfo","KeyAgreeRecipientInfo","KEKRecipientInfo","PasswordRecipientinfo","OtherRecipientInfo","RecipientInfo","parameters","variant","defaultValues","value","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","idBlock","tagClass","blockSequence","Sequence","valueBlock","tagNumber","_schema","toSchema","Any","_object","toJSON","memberName","memberValue","Object","keys","length","Choice","Constructed","name"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo.js\";\r\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo.js\";\r\nimport KEKRecipientInfo from \"./KEKRecipientInfo.js\";\r\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo.js\";\r\nimport OtherRecipientInfo from \"./OtherRecipientInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === RecipientInfo.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RecipientInfo ::= CHOICE {\r\n\t *    ktri KeyTransRecipientInfo,\r\n\t *    kari [1] KeyAgreeRecipientInfo,\r\n\t *    kekri [2] KEKRecipientInfo,\r\n\t *    pwri [3] PasswordRecipientinfo,\r\n\t *    ori [4] OtherRecipientInfo }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tKeyTransRecipientInfo.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KeyAgreeRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KEKRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: PasswordRecipientinfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: OtherRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\r\n\t\t\tconst blockSequence = new asn1js.Sequence({\r\n\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\r\n\t\t\t});\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(asn1.result.blockName.idBlock.tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.variant = 2;\r\n\t\t\t\t\tthis.value = new KeyAgreeRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.variant = 3;\r\n\t\t\t\t\tthis.value = new KEKRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.variant = 4;\r\n\t\t\t\t\tthis.value = new PasswordRecipientinfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.variant = 5;\r\n\t\t\t\t\tthis.value = new OtherRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Incorrect structure of RecipientInfo block\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst _schema = this.value.toSchema();\r\n\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn _schema;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\t//region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\r\n\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\t\t_schema.idBlock.tagNumber = (this.variant - 1);\r\n\t\t\t\t//endregion\r\n\r\n\t\t\t\treturn _schema;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant >= 1) && (this.variant <= 4))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]},"metadata":{},"sourceType":"module"}