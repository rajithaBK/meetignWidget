{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _util = require(\"util\");\n\nvar _loggerProxy = _interopRequireDefault(require(\"../logs/logger-proxy\"));\n\nvar EventsUtil = {};\n\nEventsUtil.getEventLog = function (args) {\n  var argString = '';\n\n  try {\n    argString = (0, _util.inspect)(args);\n  } catch (e) {\n    _loggerProxy.default.logger.warn(\"Events:util#getEventLog --> \".concat(e));\n  }\n\n  return argString;\n};\n\nEventsUtil.getScopeLog = function (scope) {\n  var scopeString = '';\n\n  if (scope) {\n    if (scope.file && scope.function) {\n      scopeString += \"\".concat(scope.file, \":\").concat(scope.function, \"->\");\n      return scopeString;\n    }\n\n    if (scope.file) {\n      scopeString += \"\".concat(scope.file, \"->\");\n    }\n\n    if (scope.function) {\n      scopeString += \"\".concat(scope.function, \"->\");\n    }\n  }\n\n  return scopeString;\n};\n\nvar _default = EventsUtil;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,UAAU,GAAG,EAAnB;;AAEAA,UAAU,CAACC,WAAXD,GAAyB,UAACE,IAAD,EAAU;AACjC,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAI;AACFA,aAAS,GAAG,mBAAQD,IAAR,CAAZC;AADF,IAGA,OAAOC,CAAP,EAAU;AACRC,yBAAYC,MAAZD,CAAmBE,IAAnBF,uCAAuDD,CAAvD;AACD;;AAED,SAAOD,SAAP;AAVF;;AAaAH,UAAU,CAACQ,WAAXR,GAAyB,UAACS,KAAD,EAAW;AAClC,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAID,KAAJ,EAAW;AACT,QAAIA,KAAK,CAACE,IAANF,IAAcA,KAAK,CAACG,QAAxB,EAAkC;AAChCF,iBAAW,cAAOD,KAAK,CAACE,IAAb,cAAqBF,KAAK,CAACG,QAA3B,OAAXF;AAEA,aAAOA,WAAP;AACD;;AACD,QAAID,KAAK,CAACE,IAAV,EAAgB;AACdD,iBAAW,cAAOD,KAAK,CAACE,IAAb,OAAXD;AACD;;AACD,QAAID,KAAK,CAACG,QAAV,EAAoB;AAClBF,iBAAW,cAAOD,KAAK,CAACG,QAAb,OAAXF;AACD;AACF;;AAED,SAAOA,WAAP;AAjBF;;eAoBeV","names":["EventsUtil","getEventLog","args","argString","e","LoggerProxy","logger","warn","getScopeLog","scope","scopeString","file","function"],"sources":["util.js"],"sourcesContent":["import {inspect} from 'util';\n\nimport LoggerProxy from '../logs/logger-proxy';\n\nconst EventsUtil = {};\n\nEventsUtil.getEventLog = (args) => {\n  let argString = '';\n\n  try {\n    argString = inspect(args);\n  }\n  catch (e) {\n    LoggerProxy.logger.warn(`Events:util#getEventLog --> ${e}`);\n  }\n\n  return argString;\n};\n\nEventsUtil.getScopeLog = (scope) => {\n  let scopeString = '';\n\n  if (scope) {\n    if (scope.file && scope.function) {\n      scopeString += `${scope.file}:${scope.function}->`;\n\n      return scopeString;\n    }\n    if (scope.file) {\n      scopeString += `${scope.file}->`;\n    }\n    if (scope.function) {\n      scopeString += `${scope.function}->`;\n    }\n  }\n\n  return scopeString;\n};\n\nexport default EventsUtil;\n"]},"metadata":{},"sourceType":"script"}