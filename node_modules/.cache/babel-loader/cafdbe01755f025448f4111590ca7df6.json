{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs2/core-js/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _deleteProperty = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/reflect/delete-property\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _clone2 = _interopRequireDefault(require(\"lodash/clone\"));\n\nvar _httpCore = require(\"@webex/http-core\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar requestHeaderName = 'cisco-no-http-redirect';\nvar responseHeaderName = 'cisco-location';\nvar LOCUS_REDIRECT_ERROR = 2000002;\n/**\n * @class\n */\n\nvar RedirectInterceptor = /*#__PURE__*/function (_Interceptor) {\n  (0, _inherits2.default)(RedirectInterceptor, _Interceptor);\n\n  var _super = _createSuper(RedirectInterceptor);\n\n  function RedirectInterceptor() {\n    (0, _classCallCheck2.default)(this, RedirectInterceptor);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(RedirectInterceptor, [{\n    key: \"onRequest\",\n    value:\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @returns {Object}\n     */\n    function onRequest(options) {\n      if (options && options.uri && typeof options.uri === 'string') {\n        if (options.uri.includes('https://idbroker') || options.uri.includes(this.webex.config.credentials.samlUrl) || options.uri.includes(this.webex.config.credentials.tokenUrl) || options.uri.includes(this.webex.config.credentials.authorizeUrl)) {\n          return options;\n        }\n      } // If cisco-no-http-redirect is already set, don't overwrite it\n\n\n      if (requestHeaderName in options.headers) {\n        // If cisco-no-http-redirect is set to null, false, or undefined, delete\n        // it to prevent a CORS preflight.\n        if (!options.headers[requestHeaderName]) {\n          (0, _deleteProperty.default)(options.headers, requestHeaderName);\n        }\n\n        return options;\n      }\n\n      options.headers[requestHeaderName] = true;\n      options.$redirectCount = options.$redirectCount || 0;\n      return options;\n    }\n    /**\n     * @see Interceptor#onResponse\n     * @param {Object} options\n     * @param {HttpResponse} response\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"onResponse\",\n    value: function onResponse(options, response) {\n      /* eslint-disable no-else-return */\n      if (response.headers && response.headers[responseHeaderName]) {\n        options = (0, _clone2.default)(options);\n        options.uri = response.headers[responseHeaderName];\n        options.$redirectCount += 1;\n\n        if (options.$redirectCount > this.webex.config.maxAppLevelRedirects) {\n          return _promise.default.reject(new Error('Maximum redirects exceeded'));\n        }\n\n        return this.webex.request(options);\n      } else if (response.headers && response.body && response.body.errorCode === LOCUS_REDIRECT_ERROR && response.body.location) {\n        options = (0, _clone2.default)(options);\n        this.webex.logger.warn('redirect: url redirects needed from', options.uri);\n\n        if (response.options && response.options.qs) {\n          // for POST requests\n          var newUrl = response.body.location.split('?');\n          options.uri = newUrl[0]; // params are already present in the qs\n        } else {\n          // for GET requests\n          options.uri = response.body.location;\n        }\n\n        this.webex.logger.warn('redirect: url redirects needed to', options.uri);\n        options.$redirectCount += 1;\n\n        if (options.$redirectCount > this.webex.config.maxLocusRedirects) {\n          return _promise.default.reject(new Error('Maximum redirects exceeded'));\n        }\n\n        return this.webex.request(options);\n      }\n      /* eslint-enable no-else-return */\n\n\n      return response;\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\n     * @returns {RedirectInterceptor}\n     */\n    function create() {\n      return new RedirectInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return RedirectInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = RedirectInterceptor;","map":{"version":3,"mappings":"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","names":["requestHeaderName","responseHeaderName","LOCUS_REDIRECT_ERROR","RedirectInterceptor","options","uri","includes","webex","config","credentials","samlUrl","tokenUrl","authorizeUrl","headers","$redirectCount","response","maxAppLevelRedirects","_promise","reject","Error","request","body","errorCode","location","logger","warn","qs","newUrl","split","maxLocusRedirects","Interceptor"],"sources":["redirect.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {clone} from 'lodash';\nimport {Interceptor} from '@webex/http-core';\n\nconst requestHeaderName = 'cisco-no-http-redirect';\nconst responseHeaderName = 'cisco-location';\nconst LOCUS_REDIRECT_ERROR = 2000002;\n\n/**\n * @class\n */\nexport default class RedirectInterceptor extends Interceptor {\n  /**\n   * @returns {RedirectInterceptor}\n   */\n  static create() {\n    return new RedirectInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    if (options && options.uri && typeof options.uri === 'string') {\n      if (options.uri.includes('https://idbroker') ||\n        options.uri.includes(this.webex.config.credentials.samlUrl) ||\n        options.uri.includes(this.webex.config.credentials.tokenUrl) ||\n        options.uri.includes(this.webex.config.credentials.authorizeUrl)) {\n        return options;\n      }\n    }\n\n    // If cisco-no-http-redirect is already set, don't overwrite it\n    if (requestHeaderName in options.headers) {\n      // If cisco-no-http-redirect is set to null, false, or undefined, delete\n      // it to prevent a CORS preflight.\n      if (!options.headers[requestHeaderName]) {\n        Reflect.deleteProperty(options.headers, requestHeaderName);\n      }\n\n      return options;\n    }\n    options.headers[requestHeaderName] = true;\n    options.$redirectCount = options.$redirectCount || 0;\n\n    return options;\n  }\n\n  /**\n   * @see Interceptor#onResponse\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Object}\n   */\n  onResponse(options, response) {\n    /* eslint-disable no-else-return */\n    if (response.headers && response.headers[responseHeaderName]) {\n      options = clone(options);\n      options.uri = response.headers[responseHeaderName];\n      options.$redirectCount += 1;\n      if (options.$redirectCount > this.webex.config.maxAppLevelRedirects) {\n        return Promise.reject(new Error('Maximum redirects exceeded'));\n      }\n\n      return this.webex.request(options);\n    }\n    else if (response.headers &&\n      response.body &&\n      response.body.errorCode === LOCUS_REDIRECT_ERROR &&\n      response.body.location) {\n      options = clone(options);\n\n      this.webex.logger.warn('redirect: url redirects needed from', options.uri);\n      if (response.options && response.options.qs) { // for POST requests\n        const newUrl = response.body.location.split('?');\n\n        options.uri = newUrl[0]; // params are already present in the qs\n      }\n      else { // for GET requests\n        options.uri = response.body.location;\n      }\n\n      this.webex.logger.warn('redirect: url redirects needed to', options.uri);\n      options.$redirectCount += 1;\n      if (options.$redirectCount > this.webex.config.maxLocusRedirects) {\n        return Promise.reject(new Error('Maximum redirects exceeded'));\n      }\n\n      return this.webex.request(options);\n    }\n    /* eslint-enable no-else-return */\n\n    return response;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}