{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = makeWebexStore;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _applyDecoratedDescriptor2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/applyDecoratedDescriptor\"));\n\nvar _weakMap = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/weak-map\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/map\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _getOwnPropertyDescriptor = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _ampersandEvents = _interopRequireDefault(require(\"ampersand-events\"));\n\nvar _common = require(\"@webex/common\");\n/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar bindings = new _weakMap.default();\n/**\n * Makes a WebexStore for the specified type bound to the specified webex instance\n * @param {string} type\n * @param {ProxyWebex} webex\n * @private\n * @returns {WebexStore}\n */\n\nfunction makeWebexStore(type, webex) {\n  var _dec, _class;\n  /**\n   * Lazy Key-Value Store Interface\n   */\n\n\n  var WebexStore = (_dec = (0, _common.oneFlight)({\n    keyFactory: function keyFactory(namespace) {\n      return namespace;\n    }\n  }), (_class = /*#__PURE__*/function () {\n    /**\n     * @param {Object} attrs\n     * @param {Object} options\n     * @returns {Store}\n     */\n    function WebexStore() {\n      (0, _classCallCheck2.default)(this, WebexStore);\n      webex.logger.debug(\"webex-store: constructing \".concat(type, \"Storage\"));\n      bindings.set(this, new _map.default());\n    }\n    /**\n     * Provides easy access to the storage adapter identified in config.\n     * @returns {Object}\n     */\n\n\n    (0, _createClass2.default)(WebexStore, [{\n      key: \"adapter\",\n      get: function get() {\n        return webex.config.storage[\"\".concat(type, \"Adapter\")];\n      }\n      /**\n       * @returns {WeakMap}\n       */\n\n    }, {\n      key: \"bindings\",\n      get: function get() {\n        return bindings.get(this);\n      }\n      /**\n       * Clears the store\n       * @returns {Promise}\n       */\n\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        var promises = [];\n        this.bindings.forEach(function (binding) {\n          promises.push(binding.clear());\n        });\n        return _promise.default.all(promises);\n      }\n      /**\n       * Deletes the specified key from the store\n       * @param {string} namespace\n       * @param {string} key\n       * @returns {[type]}\n       */\n\n    }, {\n      key: \"del\",\n      value: function del(namespace, key) {\n        webex.logger.debug(\"webex-store: removing \".concat(namespace, \":\").concat(key));\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.del(key);\n        });\n      }\n      /**\n       * Retrieves the value specified by key from the store. Rejects with\n       * NotFoundError if no value can be found\n       * @param {string} namespace\n       * @param {string} key\n       * @returns {Promise}\n       */\n\n    }, {\n      key: \"get\",\n      value: function get(namespace, key) {\n        webex.logger.debug(\"webex-store: retrieving \".concat(namespace, \":\").concat(key));\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.get(key);\n        });\n      }\n      /**\n       * Writes a value to the store. Deletes the specified key from the store\n       * if passed `undefined`\n       * @param {string} namespace\n       * @param {string} key\n       * @param {any} value\n       * @returns {Promise} Resolves with value (to simplify write-through caching)\n       */\n\n    }, {\n      key: \"put\",\n      value: function put(namespace, key, value) {\n        if (typeof value === 'undefined') {\n          return this.del(namespace, key);\n        }\n\n        webex.logger.debug(\"webex-store: setting \".concat(namespace, \":\").concat(key));\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.put(key, value.serialize ? value.serialize() : value);\n        }).then(function () {\n          return value;\n        });\n      }\n    }, {\n      key: \"_getBinding\",\n      value: function _getBinding(namespace) {\n        var _this = this;\n\n        return new _promise.default(function (resolve) {\n          webex.logger.debug(\"storage: getting binding for `\".concat(namespace, \"`\"));\n\n          var binding = _this.bindings.get(namespace);\n\n          if (binding) {\n            webex.logger.debug(\"storage: found binding for `\".concat(namespace, \"`\"));\n            return resolve(binding);\n          }\n\n          return resolve(_this.adapter.bind(namespace, {\n            logger: webex.logger\n          }).then(function (_binding) {\n            webex.logger.debug(\"storage: made binding for `\".concat(namespace, \"`\"));\n\n            _this.bindings.set(namespace, _binding);\n\n            return _binding;\n          }));\n        });\n      }\n    }]);\n    return WebexStore;\n  }(), (0, _applyDecoratedDescriptor2.default)(_class.prototype, \"_getBinding\", [_dec], (0, _getOwnPropertyDescriptor.default)(_class.prototype, \"_getBinding\"), _class.prototype), _class));\n  (0, _assign.default)(WebexStore.prototype, _ampersandEvents.default);\n  return new WebexStore();\n}","map":{"version":3,"mappings":"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","names":["bindings","makeWebexStore","type","webex","WebexStore","keyFactory","namespace","logger","debug","set","key","get","config","storage","value","promises","forEach","binding","push","clear","_promise","all","_getBinding","then","del","put","serialize","resolve","_this","adapter","bind","_binding","prototype","Events"],"sources":["make-webex-store.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport Events from 'ampersand-events';\nimport {oneFlight} from '@webex/common';\n\nconst bindings = new WeakMap();\n\n/**\n * Makes a WebexStore for the specified type bound to the specified webex instance\n * @param {string} type\n * @param {ProxyWebex} webex\n * @private\n * @returns {WebexStore}\n */\nexport default function makeWebexStore(type, webex) {\n  /**\n   * Lazy Key-Value Store Interface\n   */\n  class WebexStore {\n    /**\n     * @param {Object} attrs\n     * @param {Object} options\n     * @returns {Store}\n     */\n    constructor() {\n      webex.logger.debug(`webex-store: constructing ${type}Storage`);\n      bindings.set(this, new Map());\n    }\n\n    /**\n     * Provides easy access to the storage adapter identified in config.\n     * @returns {Object}\n     */\n    get adapter() {\n      return webex.config.storage[`${type}Adapter`];\n    }\n\n    /**\n     * @returns {WeakMap}\n     */\n    get bindings() {\n      return bindings.get(this);\n    }\n\n    /**\n     * Clears the store\n     * @returns {Promise}\n     */\n    clear() {\n      const promises = [];\n\n      this.bindings.forEach((binding) => {\n        promises.push(binding.clear());\n      });\n\n      return Promise.all(promises);\n    }\n\n    /**\n     * Deletes the specified key from the store\n     * @param {string} namespace\n     * @param {string} key\n     * @returns {[type]}\n     */\n    del(namespace, key) {\n      webex.logger.debug(`webex-store: removing ${namespace}:${key}`);\n\n      return this._getBinding(namespace)\n        .then((binding) => binding.del(key));\n    }\n\n    /**\n     * Retrieves the value specified by key from the store. Rejects with\n     * NotFoundError if no value can be found\n     * @param {string} namespace\n     * @param {string} key\n     * @returns {Promise}\n     */\n    get(namespace, key) {\n      webex.logger.debug(`webex-store: retrieving ${namespace}:${key}`);\n\n      return this._getBinding(namespace)\n        .then((binding) => binding.get(key));\n    }\n\n    /**\n     * Writes a value to the store. Deletes the specified key from the store\n     * if passed `undefined`\n     * @param {string} namespace\n     * @param {string} key\n     * @param {any} value\n     * @returns {Promise} Resolves with value (to simplify write-through caching)\n     */\n    put(namespace, key, value) {\n      if (typeof value === 'undefined') {\n        return this.del(namespace, key);\n      }\n      webex.logger.debug(`webex-store: setting ${namespace}:${key}`);\n\n      return this._getBinding(namespace)\n        .then((binding) => binding.put(key, value.serialize ? value.serialize() : value))\n        .then(() => value);\n    }\n\n    @oneFlight({keyFactory: (namespace) => namespace})\n    /**\n     * Creates an interface bound to the specified namespace\n     * @param {string} namespace\n     * @private\n     * @returns {Promise}\n     */\n    // suppress doc warning because decorators confuse eslint\n    // eslint-disable-next-line require-jsdoc\n    _getBinding(namespace) {\n      return new Promise((resolve) => {\n        webex.logger.debug(`storage: getting binding for \\`${namespace}\\``);\n        const binding = this.bindings.get(namespace);\n\n        if (binding) {\n          webex.logger.debug(`storage: found binding for \\`${namespace}\\``);\n\n          return resolve(binding);\n        }\n\n        return resolve(this.adapter.bind(namespace, {logger: webex.logger})\n          .then((_binding) => {\n            webex.logger.debug(`storage: made binding for \\`${namespace}\\``);\n            this.bindings.set(namespace, _binding);\n\n            return _binding;\n          }));\n      });\n    }\n  }\n\n  Object.assign(WebexStore.prototype, Events);\n\n  return new WebexStore();\n}\n"]},"metadata":{},"sourceType":"script"}