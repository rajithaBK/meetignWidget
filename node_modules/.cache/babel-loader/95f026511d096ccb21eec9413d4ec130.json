{"ast":null,"code":"import _classCallCheck from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rkanthet/Documents/test_window_object/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as asn1js from \"asn1js\";\nimport { getParametersValue, clearProps } from \"pvutils\";\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\"; //**************************************************************************************\n\n/**\r\n * Class from RFC4055\r\n */\n\nvar RSASSAPSSParams = /*#__PURE__*/function () {\n  //**********************************************************************************\n\n  /**\r\n   * Constructor for RSASSAPSSParams class\r\n   * @param {Object} [parameters={}]\r\n   * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n   */\n  function RSASSAPSSParams() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, RSASSAPSSParams);\n\n    //region Internal properties of the object\n\n    /**\r\n     * @type {AlgorithmIdentifier}\r\n     * @desc Algorithms of hashing (DEFAULT sha1)\r\n     */\n    this.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\n    /**\r\n     * @type {AlgorithmIdentifier}\r\n     * @desc Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n     */\n\n    this.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\n    /**\r\n     * @type {number}\r\n     * @desc Salt length (DEFAULT 20)\r\n     */\n\n    this.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\n    /**\r\n     * @type {number}\r\n     * @desc (DEFAULT 1)\r\n     */\n\n    this.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\")); //endregion\n    //region If input argument array contains \"schema\" for this object\n\n    if (\"schema\" in parameters) this.fromSchema(parameters.schema); //endregion\n  } //**********************************************************************************\n\n  /**\r\n   * Return default values for all class members\r\n   * @param {string} memberName String name for a class member\r\n   */\n\n\n  _createClass(RSASSAPSSParams, [{\n    key: \"fromSchema\",\n    value: //**********************************************************************************\n\n    /**\r\n     * Convert parsed asn1js object into current class\r\n     * @param {!Object} schema\r\n     */\n    function fromSchema(schema) {\n      //region Clear input data first\n      clearProps(schema, [\"hashAlgorithm\", \"maskGenAlgorithm\", \"saltLength\", \"trailerField\"]); //endregion\n      //region Check the schema is valid\n\n      var asn1 = asn1js.compareSchema(schema, schema, RSASSAPSSParams.schema({\n        names: {\n          hashAlgorithm: {\n            names: {\n              blockName: \"hashAlgorithm\"\n            }\n          },\n          maskGenAlgorithm: {\n            names: {\n              blockName: \"maskGenAlgorithm\"\n            }\n          },\n          saltLength: \"saltLength\",\n          trailerField: \"trailerField\"\n        }\n      }));\n      if (asn1.verified === false) throw new Error(\"Object's schema was not verified against input data for RSASSAPSSParams\"); //endregion\n      //region Get internal properties from parsed schema\n\n      if (\"hashAlgorithm\" in asn1.result) this.hashAlgorithm = new AlgorithmIdentifier({\n        schema: asn1.result.hashAlgorithm\n      });\n      if (\"maskGenAlgorithm\" in asn1.result) this.maskGenAlgorithm = new AlgorithmIdentifier({\n        schema: asn1.result.maskGenAlgorithm\n      });\n      if (\"saltLength\" in asn1.result) this.saltLength = asn1.result.saltLength.valueBlock.valueDec;\n      if (\"trailerField\" in asn1.result) this.trailerField = asn1.result.trailerField.valueBlock.valueDec; //endregion\n    } //**********************************************************************************\n\n    /**\r\n     * Convert current object to asn1js object and set correct values\r\n     * @returns {Object} asn1js object\r\n     */\n\n  }, {\n    key: \"toSchema\",\n    value: function toSchema() {\n      //region Create array for output sequence\n      var outputArray = [];\n\n      if (!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\"))) {\n        outputArray.push(new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          value: [this.hashAlgorithm.toSchema()]\n        }));\n      }\n\n      if (!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"))) {\n        outputArray.push(new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          },\n          value: [this.maskGenAlgorithm.toSchema()]\n        }));\n      }\n\n      if (this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\")) {\n        outputArray.push(new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 2 // [2]\n\n          },\n          value: [new asn1js.Integer({\n            value: this.saltLength\n          })]\n        }));\n      }\n\n      if (this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\")) {\n        outputArray.push(new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 3 // [3]\n\n          },\n          value: [new asn1js.Integer({\n            value: this.trailerField\n          })]\n        }));\n      } //endregion\n      //region Construct and return new ASN.1 schema for this object\n\n\n      return new asn1js.Sequence({\n        value: outputArray\n      }); //endregion\n    } //**********************************************************************************\n\n    /**\r\n     * Convertion for the class to JSON object\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var object = {};\n      if (!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\"))) object.hashAlgorithm = this.hashAlgorithm.toJSON();\n      if (!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"))) object.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\n      if (this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\")) object.saltLength = this.saltLength;\n      if (this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\")) object.trailerField = this.trailerField;\n      return object;\n    } //**********************************************************************************\n\n  }], [{\n    key: \"defaultValues\",\n    value: function defaultValues(memberName) {\n      switch (memberName) {\n        case \"hashAlgorithm\":\n          return new AlgorithmIdentifier({\n            algorithmId: \"1.3.14.3.2.26\",\n            // SHA-1\n            algorithmParams: new asn1js.Null()\n          });\n\n        case \"maskGenAlgorithm\":\n          return new AlgorithmIdentifier({\n            algorithmId: \"1.2.840.113549.1.1.8\",\n            // MGF1\n            algorithmParams: new AlgorithmIdentifier({\n              algorithmId: \"1.3.14.3.2.26\",\n              // SHA-1\n              algorithmParams: new asn1js.Null()\n            }).toSchema()\n          });\n\n        case \"saltLength\":\n          return 20;\n\n        case \"trailerField\":\n          return 1;\n\n        default:\n          throw new Error(\"Invalid member name for RSASSAPSSParams class: \".concat(memberName));\n      }\n    } //**********************************************************************************\n\n    /**\r\n     * Return value of pre-defined ASN.1 schema for current class\r\n     *\r\n     * ASN.1 schema:\r\n     * ```asn1\r\n     * RSASSA-PSS-params  ::=  Sequence  {\r\n     *    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n     *    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n     *    saltLength         [2] Integer DEFAULT 20,\r\n     *    trailerField       [3] Integer DEFAULT 1  }\r\n     * ```\r\n     *\r\n     * @param {Object} parameters Input parameters for the schema\r\n     * @returns {Object} asn1js schema object\r\n     */\n\n  }, {\n    key: \"schema\",\n    value: function schema() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\r\n       * @type {Object}\r\n       * @property {string} [blockName]\r\n       * @property {string} [hashAlgorithm]\r\n       * @property {string} [maskGenAlgorithm]\r\n       * @property {string} [saltLength]\r\n       * @property {string} [trailerField]\r\n       */\n      var names = getParametersValue(parameters, \"names\", {});\n      return new asn1js.Sequence({\n        name: names.blockName || \"\",\n        value: [new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 0 // [0]\n\n          },\n          optional: true,\n          value: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\n        }), new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 1 // [1]\n\n          },\n          optional: true,\n          value: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\n        }), new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 2 // [2]\n\n          },\n          optional: true,\n          value: [new asn1js.Integer({\n            name: names.saltLength || \"\"\n          })]\n        }), new asn1js.Constructed({\n          idBlock: {\n            tagClass: 3,\n            // CONTEXT-SPECIFIC\n            tagNumber: 3 // [3]\n\n          },\n          optional: true,\n          value: [new asn1js.Integer({\n            name: names.trailerField || \"\"\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return RSASSAPSSParams;\n}(); //**************************************************************************************\n\n\nexport { RSASSAPSSParams as default };","map":{"version":3,"sources":["C:/Users/rkanthet/Documents/test_window_object/node_modules/pkijs/src/RSASSAPSSParams.js"],"names":["asn1js","getParametersValue","clearProps","AlgorithmIdentifier","RSASSAPSSParams","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","saltLength","trailerField","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","valueBlock","valueDec","outputArray","isEqual","push","Constructed","idBlock","tagClass","tagNumber","value","toSchema","Integer","Sequence","object","toJSON","memberName","algorithmId","algorithmParams","Null","name","optional"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC4055\r\n */\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSASSA-PSS-params  ::=  Sequence  {\r\n\t *    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t *    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t *    saltLength         [2] Integer DEFAULT 20,\r\n\t *    trailerField       [3] Integer DEFAULT 1  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"saltLength\",\r\n\t\t\t\"trailerField\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSAPSSParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]},"metadata":{},"sourceType":"module"}