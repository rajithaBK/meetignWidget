{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _memoize2 = _interopRequireDefault(require(\"lodash/memoize\"));\n\nvar _bowser = _interopRequireDefault(require(\"bowser\"));\n\nvar _window = _interopRequireDefault(require(\"global/window\"));\n\nvar mockDetectionObject = {\n  /* eslint-disable global-require */\n  getOSName: function getOSName() {\n    return require('os').platform();\n  },\n  getOSVersion: function getOSVersion() {\n    return require('os').release();\n  },\n\n  /* eslint-enable global-require */\n  getBrowserName: function getBrowserName() {\n    return '';\n  },\n  getBrowserVersion: function getBrowserVersion() {\n    return '';\n  },\n  isBrowser: function isBrowser() {\n    return false;\n  }\n};\n\nvar createDetectionObject = function createDetectionObject(results) {\n  var getOSName = function getOSName() {\n    var _results$getOSName;\n\n    return (_results$getOSName = results === null || results === void 0 ? void 0 : results.getOSName()) !== null && _results$getOSName !== void 0 ? _results$getOSName : '';\n  };\n\n  var getOSVersion = function getOSVersion() {\n    var _results$getOSVersion;\n\n    return (_results$getOSVersion = results === null || results === void 0 ? void 0 : results.getOSVersion()) !== null && _results$getOSVersion !== void 0 ? _results$getOSVersion : '';\n  };\n\n  var getBrowserName = function getBrowserName() {\n    var _results$getBrowserNa;\n\n    return (_results$getBrowserNa = results === null || results === void 0 ? void 0 : results.getBrowserName()) !== null && _results$getBrowserNa !== void 0 ? _results$getBrowserNa : '';\n  };\n\n  var getBrowserVersion = function getBrowserVersion() {\n    var _results$getBrowserVe;\n\n    return (_results$getBrowserVe = results === null || results === void 0 ? void 0 : results.getBrowserVersion()) !== null && _results$getBrowserVe !== void 0 ? _results$getBrowserVe : '';\n  };\n\n  var isBrowser = function isBrowser(name) {\n    return !!(results !== null && results !== void 0 && results.isBrowser(name, true));\n  };\n\n  return {\n    getOSName: getOSName,\n    getOSVersion: getOSVersion,\n    getBrowserName: getBrowserName,\n    getBrowserVersion: getBrowserVersion,\n    isBrowser: isBrowser\n  };\n};\n\nvar _default = (0, _memoize2.default)(function (agent) {\n  var _window$navigator;\n\n  return agent || (_window$navigator = _window.default.navigator) !== null && _window$navigator !== void 0 && _window$navigator.userAgent ? createDetectionObject(_bowser.default.getParser(agent || _window.default.navigator.userAgent)) : mockDetectionObject;\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,mBAAmB,GAAG;AAC1B;AACAC,WAAS,EAAE;AAAA,WAAMC,OAAO,CAAC,IAAD,CAAPA,CAAcC,QAAdD,EAAN;AAFe;AAG1BE,cAAY,EAAE;AAAA,WAAMF,OAAO,CAAC,IAAD,CAAPA,CAAcG,OAAdH,EAAN;AAHY;;AAI1B;AACAI,gBAAc,EAAE;AAAA,WAAM,EAAN;AALU;AAM1BC,mBAAiB,EAAE;AAAA,WAAM,EAAN;AANO;AAO1BC,WAAS,EAAE;AAAA,WAAM,KAAN;AAAA;AAPe,CAA5B;;AAUA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD,EAAa;AACzC,MAAMT,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA,iCAAMS,OAAN,SAAMA,WAAN,WAAMA,GAAN,MAAMA,UAAO,CAAET,SAATS,EAAN,mEAA8B,EAA9B;AAAlB;;AACA,MAAMN,YAAY,GAAG,SAAfA,YAAe;AAAA;;AAAA,oCAAMM,OAAN,SAAMA,WAAN,WAAMA,GAAN,MAAMA,UAAO,CAAEN,YAATM,EAAN,yEAAiC,EAAjC;AAArB;;AAEA,MAAMJ,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA,oCAAMI,OAAN,SAAMA,WAAN,WAAMA,GAAN,MAAMA,UAAO,CAAEJ,cAATI,EAAN,yEAAmC,EAAnC;AAAvB;;AACA,MAAMH,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA,oCAAMG,OAAN,SAAMA,WAAN,WAAMA,GAAN,MAAMA,UAAO,CAAEH,iBAATG,EAAN,yEAAsC,EAAtC;AAA1B;;AAEA,MAAMF,SAAS,GAAG,SAAZA,SAAY,CAACG,IAAD;AAAA,WAAU,CAAC,EAACD,OAAD,SAACA,WAAD,WAACA,WAAO,CAAEF,SAATE,CAAmBC,IAAnBD,EAAyB,IAAzBA,CAAD,CAAX;AAAlB;;AAEA,SAAO;AACLT,aAAS,EAATA,SADK;AAELG,gBAAY,EAAZA,YAFK;AAGLE,kBAAc,EAAdA,cAHK;AAILC,qBAAiB,EAAjBA,iBAJK;AAKLC,aAAS,EAATA;AALK,GAAP;AATF;;eAkBe,uBAAQ,UAACI,KAAD;AAAA;;AAAA,SAAYA,KAAK,yBAAIC,gBAAOC,SAAX,8CAAIC,kBAAkBC,SAA3BJ,GACjCH,qBAAqB,CAACQ,gBAAOC,SAAPD,CAAiBL,KAAK,IAAIC,gBAAOC,SAAPD,CAAiBG,SAA3CC,CAAD,CADYL,GAEjCZ,mBAFqB;AAAR","names":["mockDetectionObject","getOSName","require","platform","getOSVersion","release","getBrowserName","getBrowserVersion","isBrowser","createDetectionObject","results","name","agent","window","navigator","_window$navigator","userAgent","bowser","getParser"],"sources":["browser-detection.js"],"sourcesContent":["import bowser from 'bowser';\nimport {memoize} from 'lodash';\nimport window from 'global/window';\n\nconst mockDetectionObject = {\n  /* eslint-disable global-require */\n  getOSName: () => require('os').platform(),\n  getOSVersion: () => require('os').release(),\n  /* eslint-enable global-require */\n  getBrowserName: () => '',\n  getBrowserVersion: () => '',\n  isBrowser: () => false\n};\n\nconst createDetectionObject = (results) => {\n  const getOSName = () => results?.getOSName() ?? '';\n  const getOSVersion = () => results?.getOSVersion() ?? '';\n\n  const getBrowserName = () => results?.getBrowserName() ?? '';\n  const getBrowserVersion = () => results?.getBrowserVersion() ?? '';\n\n  const isBrowser = (name) => !!results?.isBrowser(name, true);\n\n  return {\n    getOSName,\n    getOSVersion,\n    getBrowserName,\n    getBrowserVersion,\n    isBrowser\n  };\n};\n\nexport default memoize((agent) => (agent || window.navigator?.userAgent ?\n  createDetectionObject(bowser.getParser(agent || window.navigator.userAgent)) :\n  mockDetectionObject\n));\n"]},"metadata":{},"sourceType":"script"}