{"version":3,"file":"webex-component-adapter-interfaces.es.js","sources":["../src/WebexAdapter.js","../src/ActivitiesAdapter.js","../src/MeetingsAdapter.js","../src/MembershipsAdapter.js","../src/OrganizationsAdapter.js","../src/PeopleAdapter.js","../src/RoomsAdapter.js"],"sourcesContent":["/**\n * An observable represents a continuous stream of data.\n * The observables in the Webex Component System are based on RxJS.\n *\n * @external Observable\n * @see {@link https://rxjs-dev.firebaseapp.com/guide/observable}\n */\n\n/**\n * This is a base class that defines the interface that other adapter interfaces extend.\n */\nexport default class WebexAdapter {\n  /**\n   * Creates a new instance of the WebexAdapter.\n   *\n   * @param {object} datasource The primary datasource the adapter will be using\n   */\n  constructor(datasource) {\n    this.datasource = datasource;\n  }\n\n  /**\n   * Connects the adapter to its datasource.\n   *\n   * @returns {Promise} A promise that resolves when the adapter finishes connecting\n   */\n  connect() {\n    return Promise.reject(\n      new Error('connect() must be defined in WebexAdapter'),\n    );\n  }\n\n  /**\n   * Disconnects the adapter from its datasource.\n   *\n   * @returns {Promise} A promise that resolves when the adapter finishes disconnecting\n   */\n  disconnect() {\n    return Promise.reject(\n      new Error('disconnect() must be defined in WebexAdapter'),\n    );\n  }\n}\n","import {throwError} from 'rxjs';\n\nimport WebexAdapter from './WebexAdapter';\n\n/**\n * An activity a person performs in Webex.\n *\n * @typedef  {object} Activity\n * @property {string}  ID             The activity identifier\n * @property {string}  roomID         ID of the room where the activity happens\n * @property {string}  text           Any text the activity may contain\n * @property {string}  personID       ID of the person performing the activity\n * @property {Date}    created        Timestamp of the time when the activity happened\n * @property {boolean} displayAuthor  Whether to display author information or not\n */\n\n/**\n * This is a base class that defines the interface that maps activity data.\n * Developers that want to extend `ActivitiesAdapter` must implement all of its methods,\n * adhering to the exact parameters and structure of the returned objects.\n *\n * @interface\n */\nexport default class ActivitiesAdapter extends WebexAdapter {\n  /**\n   * Returns an observable that emits activity data of the given ID.\n   *\n   * @param {string} ID  ID of the activity to get\n   * @returns {external:Observable.<Activity>} Observable stream that emits activity data\n   * @memberof ActivityAdapter\n   */\n  getActivity(ID) {\n    return throwError(new Error('getActivity(ID) must be defined in ActivitiesAdapter'));\n  }\n}\n","import {throwError} from 'rxjs';\n\nimport WebexAdapter from './WebexAdapter';\n\n/**\n * MediaStream is a Web API standard that represents a stream of media content, e,g, video, audio.\n *\n * @external  MediaStream\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaStream}\n */\n\n/**\n * An object that represents a media stream and its permission with respect to a meeting.\n *\n * @typedef {object}  MeetingStream\n * @property {MediaStream}      stream      The local media stream\n * @property {MediaPermissions} permission  The state of the user permission on local media @see {@link MediaPermissions} enum\n */\n\n/**\n * A meeting object that allows users to have a WebRTC meeting.\n *\n * @typedef {object}  Meeting\n * @property {string}        ID               The meeting identifier\n * @property {string}        title            The title of the meeting\n * @property {MeetingStream} localVideo       The local video information\n * @property {MeetingStream} localAudio       The local audio information\n * @property {MeetingStream} localShare       The local share information\n * @property {MediaStream}   remoteVideo      The remote video stream\n * @property {MediaStream}   remoteAudio      The remote audio stream\n * @property {MediaStream}   remoteShare      The remote media share stream\n * @property {MeetingState}  state            The state of the meeting\n * @property {string}        cameraID         The ID of the camera in use\n * @property {string}        microphoneID     The ID of the microphone in use\n * @property {string}        speakerID        The ID of the speaker in use\n * @property {boolean}       passwordRequired If the meeting requires a password\n * @property {boolean}       invalidPassword  If the password received from the user is invalid\n */\n\n/**\n * A control/action that may modify a meeting or meeting state.\n *\n * @typedef {object}  MeetingControl\n * @property {string}                         ID       The meeting control ID or name\n * @property {MeetingControlAction}           action   A function that performs the control action. Must not return a value, as it must perform side-effects only\n * @property {MeetingControlDisplayFunction}  display  A function that returns an observable that emits MeetingControlDisplay objects\n */\n\n/**\n * Action a meeting control performs. It must perform a side-effect only.\n *\n * @typedef {Function}  MeetingControlAction\n * @param {string}  meetingID  ID of the meeting object for which to perform side-effect\n * @returns {void}\n */\n\n/**\n * Function that returns an observable that emits a meeting control display values.\n *\n * @typedef {Function}  MeetingControlDisplayFunction\n * @returns {external:Observable.<MeetingControlDisplay>}\n */\n\n/**\n * Enum for meeting control types\n *\n * @readonly\n * @enum {string}\n */\nexport const MeetingControlType = {\n  JOIN: 'JOIN',\n  CANCEL: 'CANCEL',\n  CLOSE: 'CLOSE',\n  TOGGLE: 'TOGGLE',\n  MULTISELECT: 'MULTISELECT',\n};\n\n/**\n * Display options of a meeting control.\n *\n * @typedef {object}  MeetingControlDisplay\n * @property {MeetingControlState}  state    Current state of the meeting control\n * @property {string}               tooltip  The text to display when user hovers over control\n * @property {string}               icon     Momentum-ui icon name to display for the meeting control\n * @property {string}               text     Text to display on the meeting control. If there is an icon and text, text takes precedence\n * @property {MeetingControlType}   type     Type of the meeting control\n */\n\n/**\n * Enum for meeting control states.\n *\n * @readonly\n * @enum {string}\n */\nexport const MeetingControlState = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive',\n  DISABLED: 'disabled',\n};\n\n/**\n * Enum for meeting states.\n * A falsy value for the state (missing/undefined/null) means that the meeting has not been created yet.\n *\n * @readonly\n * @enum {string}\n */\nexport const MeetingState = {\n  NOT_JOINED: 'NOT_JOINED', // the meeting has been created (has an id), but the user has not yet started / joined\n  LOBBY: 'LOBBY', // the user is waiting to be admitted into the meeting\n  JOINED: 'JOINED', // the user has started / joined the meeting\n  LEFT: 'LEFT', // the user has left the meeting\n};\n\n/**\n * Enum for media permissions states.\n * A falsy value for the media permission means that it is unknown (eg: the meeting was just created).\n *\n * @readonly\n * @enum {string}\n */\nexport const MediaPermissions = {\n  ASKING: 'ASKING', // set while requesting the user for permission to access media device\n  ALLOWED: 'ALLOWED', // set when the user has allowed permission to access media device\n  DENIED: 'DENIED', // set when the user has denied access to media device\n  DISMISSED: 'DISMISSED', // set when the user has dismissed the media device access prompt without allowing or denying access\n  ERROR: 'ERROR', // set when there is an error while requesting access to media device\n  IGNORED: 'IGNORED', // set when the user has chosen to not interact with the device access\n};\n\n/**\n * This is a base class that defines the interface that maps meetings data.\n * Developers that want to extend `MeetingsAdapter` must implement all of its methods,\n * adhering to the exact parameters and structure of the returned objects.\n *\n * @interface\n */\nexport default class MeetingsAdapter extends WebexAdapter {\n  /**\n   * Creates a new instance of the MeetingsAdapter.\n   *\n   * @param {object} datasource The primary datasource the adapter will be using\n   */\n  constructor(datasource) {\n    super(datasource);\n\n    this.meetingControls = {};\n  }\n\n  /**\n   * Creates a meeting for the given destination. Returns an observable\n   * that emits a Meeting object with the data from the newly created meeting.\n   * Observable should complete after emitting data.\n   * If there is an issue creating the meeting, the observable will error.\n   *\n   * @param {string} destination  Virtual location where the meeting will take place\n   * @returns {external:Observable.<Meeting>} Observable stream that emits meeting data\n   * @memberof MeetingsAdapter\n   */\n  createMeeting(destination) {\n    return throwError(new Error('createMeeting(destination) must be defined in MeetingsAdapter'));\n  }\n\n  /**\n   * Listens for incoming meetings at the given destination.\n   * Returns an observable that emits a Meeting object with the data from the incoming meeting.\n   * `incomingMeeting` is mostly used for 1:1 meetings where a user tries to reach another user directly.\n   * This method only notifies that someone is trying to start a meeting, but it has to be used in\n   * conjunction with `joinMeeting` to actually join the meeting.\n   *\n   * @param {string} destination  Virtual location where meeting will take place\n   * @returns {external:Observable.<Meeting>} Observable stream that emits meeting data\n   * @memberof MeetingsAdapter\n   */\n  incomingMeeting(destination) {\n    return throwError(new Error('incomingMeeting(destination) must be defined in MeetingsAdapter'));\n  }\n\n  /**\n   * Returns an observable that emits a Meeting object.\n   * Whenever there is an update to the meeting, the observable\n   * will emit a new updated Meeting object, if datasource permits.\n   * Observable must complete when the meeting is left\n   * (e.g. @see {@link leaveMeeting} triggers an event).\n   *\n   * @param {string} ID  ID of the meeting to get\n   * @returns {external:Observable.<Meeting>} Observable stream that emits meeting data\n   * @memberof MeetingsAdapter\n   */\n  getMeeting(ID) {\n    return throwError(new Error('getMeeting(ID) must be defined in MeetingsAdapter'));\n  }\n\n  /**\n   * Joins the meeting of the given ID.\n   * Joining a meeting is performed as a side-effect and this method does not\n   * return a value. Instead, joining a meeting should trigger getMeeting to\n   * emit a new updated Meeting object.\n   *\n   * @param {string} ID  ID of the meeting to join\n   * @memberof MeetingsAdapter\n   */\n  joinMeeting(ID) {\n    throw new Error('joinMeeting(ID) must be defined in MeetingsAdapter');\n  }\n\n  /**\n   * Leaves from the meeting of the given ID.\n   * Leaving from a meeting is performed as a side-effect and this method does not\n   * return a value. Instead, leaving from a meeting should trigger getMeeting to\n   * emit a new updated Meeting object.\n   * Leaving a meeting should trigger @see {@link getMeeting} to be complete.\n   *\n   * @param {string} ID  ID of the meeting to leave from\n   * @memberof MeetingsAdapter\n   */\n  leaveMeeting(ID) {\n    throw new Error('leaveMeeting(ID) must be defined in MeetingsAdapter');\n  }\n\n  /**\n   * Displays the names of the available controls.\n   *\n   * @returns {string[]} Array containing the control names supported.\n   */\n  supportedControls() {\n    return throwError(new Error('supportedControls() must be defined in MeetingsAdapter'));\n  }\n\n  /**\n   * Sets the passwordRequired flag to false.\n   *\n   * @param {string} ID  Id of the meeting\n   * @returns {Promise|undefined}\n   */\n  clearPasswordRequiredFlag(ID) {\n    throw new Error('clearPasswordRequiredFlag(ID) must be defined in MeetingsAdapter');\n  }\n\n  /**\n   * Sets the invalidPassword flag to false.\n   *\n   * @param {string} ID  Id of the meeting\n   * @returns {Promise|undefined}\n   */\n  clearInvalidPasswordFlag(ID) {\n    throw new Error('clearInvalidPasswordFlag(ID) must be defined in MeetingsAdapter');\n  }\n}\n","import {throwError} from 'rxjs';\n\nimport WebexAdapter from './WebexAdapter';\n\n/**\n * A person that is part of a membership.\n *\n * @typedef {object} Member\n * @property {string}   ID          The member identifier\n * @property {string}   orgID       The organization identifier\n * @property {boolean}  muted       If the member's audio is currently muted\n * @property {boolean}  sharing     If the member is currently sharing their screen\n * @property {boolean}  inMeeting   If the member is currently in meeting\n * @property {boolean}  host        If the member is the host of a meeting\n * @property {boolean}  guest       If the member is guest in meeting\n */\n\n/**\n * A relationship between a destination and people that belong to such destination.\n *\n * @typedef {object} Membership\n * @property {string}          ID               The membership identifier\n * @property {string}          destinationID    ID of the destination for which to get members\n * @property {string}          destinationType  type of the membership destination\n * @property {Array.<Member>}  members          An array of members information\n */\n\n/**\n * Enum for types of destinations.\n *\n * @readonly\n * @enum {string}\n */\nexport const DestinationType = {\n  ROOM: 'room',\n  MEETING: 'meeting',\n};\n\n/**\n * This is a base class that defines the interface that maps membership data.\n * Developers that want to extend `MembershipsAdapter` must implement all of its methods,\n * adhering to the exact parameters and structure of the returned objects.\n *\n * @interface\n */\nexport default class MembershipsAdapter extends WebexAdapter {\n  /**\n   * Returns an observable that emits an array of members.\n   * Whenever there is an update to this array, the observable\n   * will emit a new updated array of members, if datasource permits.\n   *\n   * @param {string} destinationID  ID of the destination for which to get members\n   * @param {DestinationType} destinationType  type of the membership destination\n   * @returns {external:Observable.<Array.<Member>>} Observable stream that emits an array of members\n   * @memberof MembershipAdapter\n   */\n  getMembersFromDestination(destinationID, destinationType) {\n    return throwError(\n      new Error('getMembersFromDestination(destinationID, destinationType) must be defined in MembershipsAdapter'),\n    );\n  }\n}\n","import {throwError} from 'rxjs';\n\nimport WebexAdapter from './WebexAdapter';\n\n/**\n * A set of people in Webex.\n *\n * @typedef {object} Organization\n * @property {string} ID    The organization identifier\n * @property {string} name  The display name of the organization\n */\n\n/**\n * This is a base class that defines the interface that maps organization data.\n * Developers that want to extend `OrganizationsAdapter` must implement all of its methods,\n * adhering to the exact parameters and structure of the returned objects.\n *\n * @interface\n */\nexport default class OrganizationsAdapter extends WebexAdapter {\n  /**\n   * Returns an observable that emits organization data of the given ID.\n   *\n   * @param {string} ID ID of organization to get\n   * @returns {external:Observable.<Organization>} Observable stream that emits organization data\n   * @memberof OrganizationsAdapter\n   */\n  getOrg(ID) {\n    return throwError(new Error('getOrg(ID) must be defined in OrganizationsAdapter'));\n  }\n}\n","import {throwError} from 'rxjs';\n\nimport WebexAdapter from './WebexAdapter';\n\n/**\n * A user in Webex.\n *\n * @typedef {object} Person\n * @property {string}             ID          The person identifier\n * @property {Array.<string>}     emails      An array of emails for the person\n * @property {string}             displayName The name to be displayed for the person\n * @property {string}             firstName   The first name of the person\n * @property {string}             lastName    The last name of the person\n * @property {string}             nickName    The short name for the person\n * @property {string}             avatar      The full url to the person's avatar\n * @property {string}             orgID       The ID of the organization the person belongs to\n * @property {null|PersonStatus}  status      The presence status of the user. @see {@link PersonStatus} enum\n */\n\n/**\n * All potential statuses of a person.\n *\n * @readonly\n * @enum {string}\n */\nexport const PersonStatus = {\n  ACTIVE: 'active',\n  BOT: 'bot',\n  CALL: 'call',\n  DO_NOT_DISTURB: 'dnd',\n  INACTIVE: 'inactive',\n  MEETING: 'meeting',\n  OUT_OF_OFFICE: 'ooo',\n  PRESENTING: 'presenting',\n  SELF: 'self',\n  TYPING: 'typing',\n};\n\n/**\n * This is a base class that defines the interface that maps people data.\n * Developers that want to extend `PeopleAdapter` must implement all of its methods,\n * adhering to the exact parameters and structure of the returned objects.\n *\n * @interface\n */\nexport default class PeopleAdapter extends WebexAdapter {\n  /**\n   * Returns an observable that emits person data of the current user.\n   *\n   * Current user is be defined by the implementation. For instance,\n   * to instantiate the SDK, an access token must be given, \"me\" in that case\n   * is the owner of the access token for that SDK instance.\n   *\n   * @returns {external:Observable.<Person>} Observable stream that emits person data\n   * @memberof PeopleAdapter\n   */\n  getMe() {\n    return throwError(new Error('getMe() must be defined in PeopleAdapter'));\n  }\n\n  /**\n   * Returns an observable that emits person data of the given ID.\n   *\n   * @param {string} ID ID of person to get\n   * @returns {external:Observable.<Person>} Observable stream that emits person data\n   * @memberof PeopleAdapter\n   */\n  getPerson(ID) {\n    return throwError(new Error('getPerson(ID) must be defined in PeopleAdapter'));\n  }\n}\n","/* eslint-disable valid-jsdoc */\nimport {throwError} from 'rxjs';\n\nimport WebexAdapter from './WebexAdapter';\n\n/**\n * A virtual room where people can collaborate.\n *\n * @typedef {object}  Room\n * @property {string}    ID     The room identifier\n * @property {string}    title  The room title\n * @property {RoomType}  type   The type of the room. @see {@link RoomType} enum\n */\n\n/**\n * @typedef {object}  ActivityDate\n * @property {string}  date  Date that will render on a time ruler. Must be a valid date-time string\n * @see [Date-time string format]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#Date_Time_String_Format}\n */\n\n/**\n * All potential types of rooms.\n *\n * @readonly\n * @enum {string}\n */\nexport const RoomType = {\n  GROUP: 'group',\n  DIRECT: 'direct',\n};\n\n/**\n * This is a base class that defines the interface that maps room data.\n * Developers that want to extend `RoomsAdapter` must implement all of its methods,\n * adhering to the exact parameters and structure of the returned objects.\n *\n * `RoomsAdapter` handles data of a room such as details about that room but also\n * activities that happened/will happen within that room. Activities are expected\n * to be lazy loaded, and therefore, chunked.\n *\n * @interface\n */\nexport default class RoomsAdapter extends WebexAdapter {\n  /**\n   * Returns an observable that emits room data of the given ID.\n   *\n   * @param {string} ID  ID of the room to get.\n   * @returns {external:Observable.<Room>} Observable stream that emits room data\n   * @memberof RoomsAdapter\n   */\n  getRoom(ID) {\n    return throwError(new Error('getRoom(ID) must be defined in RoomsAdapter'));\n  }\n\n  /**\n   * Returns an observable that emits an array of current and future activities of the given roomID.\n   *\n   * @param {string} ID  ID of the room for which to get activities.\n   * @returns {external:Observable.<Array.<string|ActivityDate>>} Observable stream that emits arrays of activity IDs\n   * @memberof RoomsAdapter\n   */\n  getRoomActivities(ID) {\n    return throwError(new Error('getRoomActivities(ID) must be defined in RoomsAdapter'));\n  }\n\n  /**\n   * Returns an observable that emits an array of the next chunk of previous\n   * activity data of the given roomID. If `hasMoreActivities` returns false,\n   * the observable will complete.\n   * **Previous activity data must be sorted newest-to-oldest.**\n   *\n   * @param {string} ID  ID of the room for which to get activities.\n   * @returns {external:Observable.<Array.<string|ActivityDate>>} Observable stream that emits arrays of activity IDs\n   * @memberof RoomsAdapter\n   */\n  getPreviousRoomActivities(ID) {\n    return throwError(new Error('getPreviousRoomActivities(ID) must be defined in RoomsAdapter'));\n  }\n\n  /**\n   * Returns `true` if there are more activities to load from the room of the given ID.\n   * Otherwise, it returns `false`.\n   *\n   * @param {string} ID ID of the room for which to verify activities.\n   * @returns {boolean} `true` if room has more activities to load, `false` otherwise\n   * @memberof RoomsAdapter\n   */\n  hasMoreActivities(ID) {\n    throw new Error('hasMoreActivities(ID) must be defined in RoomsAdapter');\n  }\n}\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,YAAY,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,UAAU,EAAE;AAC1B,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,GAAG;AACZ,IAAI,OAAO,OAAO,CAAC,MAAM;AACzB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AAC5D,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,UAAU,GAAG;AACf,IAAI,OAAO,OAAO,CAAC,MAAM;AACzB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC;AAC/D,KAAK,CAAC;AACN,GAAG;AACH;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,iBAAiB,SAAS,YAAY,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,EAAE,EAAE;AAClB,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC,CAAC;AACzF,GAAG;AACH;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,kBAAkB,GAAG;AAClC,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,KAAK,EAAE,OAAO;AAChB,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,WAAW,EAAE,aAAa;AAC5B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,mBAAmB,GAAG;AACnC,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,QAAQ,EAAE,UAAU;AACtB,EAAE,QAAQ,EAAE,UAAU;AACtB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,YAAY,GAAG;AAC5B,EAAE,UAAU,EAAE,YAAY;AAC1B,EAAE,KAAK,EAAE,OAAO;AAChB,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,IAAI,EAAE,MAAM;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG;AAChC,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,OAAO,EAAE,SAAS;AACpB,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,KAAK,EAAE,OAAO;AAChB,EAAE,OAAO,EAAE,SAAS;AACpB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,eAAe,SAAS,YAAY,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,UAAU,EAAE;AAC1B,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;AACtB;AACA,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC9B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,aAAa,CAAC,WAAW,EAAE;AAC7B,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC,CAAC;AAClG,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,eAAe,CAAC,WAAW,EAAE;AAC/B,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC,CAAC;AACpG,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,UAAU,CAAC,EAAE,EAAE;AACjB,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC,CAAC;AACtF,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,EAAE,EAAE;AAClB,IAAI,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;AAC1E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,YAAY,CAAC,EAAE,EAAE;AACnB,IAAI,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;AAC3E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iBAAiB,GAAG;AACtB,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC,CAAC;AAC3F,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yBAAyB,CAAC,EAAE,EAAE;AAChC,IAAI,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;AACxF,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,wBAAwB,CAAC,EAAE,EAAE;AAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;AACvF,GAAG;AACH;;ACpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG;AAC/B,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,OAAO,EAAE,SAAS;AACpB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,kBAAkB,SAAS,YAAY,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yBAAyB,CAAC,aAAa,EAAE,eAAe,EAAE;AAC5D,IAAI,OAAO,UAAU;AACrB,MAAM,IAAI,KAAK,CAAC,iGAAiG,CAAC;AAClH,KAAK,CAAC;AACN,GAAG;AACH;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,oBAAoB,SAAS,YAAY,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,EAAE,EAAE;AACb,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC,CAAC;AACvF,GAAG;AACH;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,YAAY,GAAG;AAC5B,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE,GAAG,EAAE,KAAK;AACZ,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,cAAc,EAAE,KAAK;AACvB,EAAE,QAAQ,EAAE,UAAU;AACtB,EAAE,OAAO,EAAE,SAAS;AACpB,EAAE,aAAa,EAAE,KAAK;AACtB,EAAE,UAAU,EAAE,YAAY;AAC1B,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,aAAa,SAAS,YAAY,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK,GAAG;AACV,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;AAC7E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,EAAE,EAAE;AAChB,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC;AACnF,GAAG;AACH;;ACtEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG;AACxB,EAAE,KAAK,EAAE,OAAO;AAChB,EAAE,MAAM,EAAE,QAAQ;AAClB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM,YAAY,SAAS,YAAY,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,EAAE,EAAE;AACd,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC,CAAC;AAChF,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iBAAiB,CAAC,EAAE,EAAE;AACxB,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC,CAAC;AAC1F,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yBAAyB,CAAC,EAAE,EAAE;AAChC,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC,CAAC;AAClG,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iBAAiB,CAAC,EAAE,EAAE;AACxB,IAAI,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;AAC7E,GAAG;AACH;;;;"}