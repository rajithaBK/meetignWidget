{"version":3,"sources":["util.js"],"names":["MembersUtil","generateAddMemberOptions","invitee","locusUrl","alertIfActive","generateAdmitMemberOptions","memberIds","getAddMemberBody","options","invitees","address","emailAddress","email","phoneNumber","getAdmitMemberRequestBody","admit","participantIds","getAdmitMemberRequestParams","format","body","uri","CONTROLS","method","HTTP_VERBS","PUT","getAddMemberRequestParams","requestParams","isInvalidInvitee","DIALER_REGEX","E164_FORMAT","test","VALID_EMAIL_ADDRESS","getRemoveMemberRequestParams","reason","PARTICIPANT","memberId","LEAVE","generateTransferHostMemberOptions","transfer","moderator","generateRemoveMemberOptions","removal","_FORCED_","generateMuteMemberOptions","mute","status","muted","getMuteMemberRequestParams","audio","PATCH","getTransferHostToMemberRequestParams","role","genderateSendDTMFOptions","url","tones","generateSendDTMFRequestParams","device","dtmf","correlationId","uuid","v4","direction","SEND_DTMF_ENDPOINT","POST","cancelPhoneInviteOptions","generateCancelInviteRequestParams","actionType","_REMOVE_"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\n\nimport {\n  HTTP_VERBS,\n  CONTROLS,\n  _FORCED_,\n  LEAVE,\n  PARTICIPANT,\n  VALID_EMAIL_ADDRESS,\n  DIALER_REGEX,\n  SEND_DTMF_ENDPOINT,\n  _REMOVE_\n} from '../constants';\n\nconst MembersUtil = {};\n\n/**\n * @param {Object} invitee with emailAddress, email or phoneNumber\n * @param {String} locusUrl\n * @param {Boolean} alertIfActive\n * @returns {Object} the format object\n */\nMembersUtil.generateAddMemberOptions = (invitee, locusUrl, alertIfActive) => ({\n  invitee,\n  locusUrl,\n  alertIfActive\n});\n\n/**\n * @param {Array} memberIds\n * @param {String} locusUrl\n * @returns {Object} the format object\n */\nMembersUtil.generateAdmitMemberOptions = (memberIds, locusUrl) => ({\n  locusUrl,\n  memberIds\n});\n\n/**\n * @param {Object} options with {invitee: {emailAddress, email, phoneNumber}, alertIfActive}\n * @returns {Object} with {invitees: [{address}], alertIfActive}\n */\nMembersUtil.getAddMemberBody = (options) => ({\n  invitees: [\n    {\n      address: options.invitee.emailAddress || options.invitee.email || options.invitee.phoneNumber\n    }\n  ],\n  alertIfActive: options.alertIfActive\n});\n\n/**\n * @param {Object} options with {memberIds}\n * @returns {Object} admit with {memberIds}\n */\nMembersUtil.getAdmitMemberRequestBody = (options) => ({\n  admit: {participantIds: options.memberIds}\n});\n\n/**\n * @param {Object} format with {memberIds, locusUrl}\n * @returns {Object} the request parameters (method, uri, body) needed to make a admitMember request\n */\nMembersUtil.getAdmitMemberRequestParams = (format) => {\n  const body = MembersUtil.getAdmitMemberRequestBody(format);\n  const uri = `${format.locusUrl}/${CONTROLS}`;\n\n  return {\n    method: HTTP_VERBS.PUT,\n    uri,\n    body\n  };\n};\n\n/**\n * @param {Object} format with {invitee {emailAddress, email, phoneNumber}, locusUrl, alertIfActive}\n * @returns {Object} the request parameters (method, uri, body) needed to make a addMember request\n */\nMembersUtil.getAddMemberRequestParams = (format) => {\n  const body = MembersUtil.getAddMemberBody(format);\n  const requestParams = {\n    method: HTTP_VERBS.PUT,\n    uri: format.locusUrl,\n    body\n  };\n\n  return requestParams;\n};\n\nMembersUtil.isInvalidInvitee = (invitee) => {\n  if (!(invitee && (invitee.email || invitee.emailAddress || invitee.phoneNumber))) {\n    return true;\n  }\n\n  if (invitee.phoneNumber) {\n    return !DIALER_REGEX.E164_FORMAT.test(invitee.phoneNumber);\n  }\n\n  return !VALID_EMAIL_ADDRESS.test(invitee.email || invitee.emailAddress);\n};\n\nMembersUtil.getRemoveMemberRequestParams = (options) => {\n  const body = {\n    reason: options.reason\n  };\n  const uri = `${options.locusUrl}/${PARTICIPANT}/${options.memberId}/${LEAVE}`;\n\n  return {\n    method: HTTP_VERBS.PUT,\n    uri,\n    body\n  };\n};\n\nMembersUtil.generateTransferHostMemberOptions = (transfer, moderator, locusUrl) => ({\n  moderator,\n  locusUrl,\n  memberId: transfer\n});\n\nMembersUtil.generateRemoveMemberOptions = (removal, locusUrl) => ({\n  reason: _FORCED_,\n  memberId: removal,\n  locusUrl\n});\n\nMembersUtil.generateMuteMemberOptions = (mute, status, locusUrl) => ({\n  memberId: mute,\n  muted: status,\n  locusUrl\n});\n\nMembersUtil.getMuteMemberRequestParams = (options) => {\n  const body = {\n    audio: {\n      muted: options.muted\n    }\n  };\n  const uri = `${options.locusUrl}/${PARTICIPANT}/${options.memberId}/${CONTROLS}`;\n\n  return {\n    method: HTTP_VERBS.PATCH,\n    uri,\n    body\n  };\n};\n\nMembersUtil.getTransferHostToMemberRequestParams = (options) => {\n  const body = {\n    role: {\n      moderator: options.moderator\n    }\n  };\n  const uri = `${options.locusUrl}/${PARTICIPANT}/${options.memberId}/${CONTROLS}`;\n\n  return {\n    method: HTTP_VERBS.PATCH,\n    uri,\n    body\n  };\n};\n\nMembersUtil.genderateSendDTMFOptions = (url, tones, memberId, locusUrl) => ({\n  url,\n  tones,\n  memberId,\n  locusUrl\n});\n\nMembersUtil.generateSendDTMFRequestParams = ({\n  url, tones, memberId, locusUrl\n}) => {\n  const body = {\n    device: {\n      url\n    },\n    memberId,\n    dtmf: {\n      correlationId: uuid.v4(),\n      tones,\n      direction: 'transmit'\n    }\n  };\n  const uri = `${locusUrl}/${PARTICIPANT}/${memberId}/${SEND_DTMF_ENDPOINT}`;\n\n  return {\n    method: HTTP_VERBS.POST,\n    uri,\n    body\n  };\n};\n\nMembersUtil.cancelPhoneInviteOptions = (invitee, locusUrl) => ({\n  invitee,\n  locusUrl\n});\n\nMembersUtil.generateCancelInviteRequestParams = (options) => {\n  const body = {\n    actionType: _REMOVE_,\n    invitees: [\n      {\n        address: options.invitee.phoneNumber\n      }\n    ]\n  };\n  const requestParams = {\n    method: HTTP_VERBS.PUT,\n    uri: options.locusUrl,\n    body\n  };\n\n  return requestParams;\n};\n\nexport default MembersUtil;\n"]}