{"version":3,"sources":["request.js"],"names":["MeetingRequest","attrs","options","changeVideoLayoutDebounced","changeVideoLayout","leading","trailing","asResourceOccupant","inviteeAddress","meetingNumber","permissionToken","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","pin","moveToResource","roapMessage","preferTranscoding","LoggerProxy","logger","info","url","body","device","deviceType","config","meetings","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","clientMediaPreferences","webex","clientRegion","countryCode","regionCode","undefined","PARTICIPANT","internal","services","waitForCatalog","get","LOCI","CALL","invitee","address","error","concat","ALTERNATE_REDIRECT_TRUE","callPreferences","requestedMedia","_SLIDES_","localMedias","request","method","HTTP_VERBS","POST","uri","captchaRefreshUrl","captchaId","catch","err","dialInUrl","clientUrl","PROVISIONAL","provisionalType","PROVISIONAL_TYPE_DIAL_IN","dialOutUrl","phoneNumber","PROVISIONAL_TYPE_DIAL_OUT","dialoutAddress","desync","syncUrl","split","LOCUS","SYNCDEBUG","GET","reject","phoneUrl","selfId","LEAVE","PUT","ALERT","CONTROLS","record","recording","paused","PATCH","lock","locked","DECLINE","reason","MEDIA","floorReq","disposition","FLOOR_ACTION","GRANTED","beneficiary","personUrl","devices","requester","floor","resourceUrl","resourceToken","tones","SEND_DTMF_ENDPOINT","dtmf","uuid","v4","layoutType","main","content","width","height","Error","renderInfoMain","renderInfoContent","layoutParams","renderInfo","layout","type","StatelessWebexPlugin"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport {debounce} from 'lodash';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\nimport {deviceType} from '@webex/common';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  ALERT,\n  ALTERNATE_REDIRECT_TRUE,\n  CALL,\n  CONTROLS,\n  DECLINE,\n  FLOOR_ACTION,\n  HTTP_VERBS,\n  LEAVE,\n  LOCI,\n  LOCUS,\n  MEDIA,\n  PARTICIPANT,\n  PROVISIONAL_TYPE_DIAL_IN,\n  PROVISIONAL_TYPE_DIAL_OUT,\n  SEND_DTMF_ENDPOINT,\n  _SLIDES_\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  constructor(attrs, options) {\n    super(attrs, options);\n    this.changeVideoLayoutDebounced = debounce(this.changeVideoLayout, 2000, {leading: true, trailing: true});\n  }\n\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @param {boolean} options.ensureConversation\n   * @param {boolean} options.moderator\n   * @param {boolean} options.pin\n   * @param {boolean} options.moveToResource\n   * @param {Object} options.roapMessage\n   * @returns {Promise}\n   */\n  async joinMeeting(options) {\n    const {\n      asResourceOccupant,\n      inviteeAddress,\n      meetingNumber,\n      permissionToken,\n      deviceUrl,\n      locusUrl,\n      resourceId,\n      correlationId,\n      ensureConversation,\n      moderator,\n      pin,\n      moveToResource,\n      roapMessage,\n      preferTranscoding\n    } = options;\n\n    LoggerProxy.logger.info(\n      'Meeting:request#joinMeeting --> Joining a meeting',\n      correlationId\n    );\n\n    let url = '';\n\n    const body = {\n      asResourceOccupant,\n      device: {\n        url: deviceUrl,\n        deviceType: this.config.meetings.deviceType\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: resourceId && moveToResource || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1,\n      clientMediaPreferences: {\n        preferTranscoding: preferTranscoding ?? true\n      }\n    };\n\n    if (this.webex.meetings.clientRegion) {\n      body.device.countryCode = this.webex.meetings.clientRegion.countryCode;\n      body.device.regionCode = this.webex.meetings.clientRegion.regionCode;\n    }\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (permissionToken) {\n      body.permissionToken = permissionToken;\n    }\n\n    if (pin !== undefined) {\n      body.pin = pin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    }\n    else if (inviteeAddress || meetingNumber) {\n      try {\n        await this.webex.internal.services.waitForCatalog('postauth');\n        url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n        body.invitee = {\n          address: inviteeAddress || `wbxmn:${meetingNumber}`\n        };\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`Meeting:request#joinMeeting Error Joining ${inviteeAddress || meetingNumber} --> ${e}`);\n        throw (e);\n      }\n    }\n\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === inviteeAddress) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_]\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body\n    });\n  }\n\n  /**\n   * Send a request to refresh the captcha\n   * @param {Object} options\n   * @param {String} options.captchaRefreshUrl\n   * @param {String} options.captchaId\n   * @returns {Promise}\n   * @private\n   */\n  refreshCaptcha({\n    captchaRefreshUrl,\n    captchaId\n  }) {\n    const body = {\n      captchaId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: captchaRefreshUrl,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#refreshCaptcha --> Error: ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to add a dial in device\n   * @param {Object} options\n   * @param {String} options.correlationId\n   * @param {String} options.localUrl url for the meeting\n   * @param {String} options.dialInUrl identifier for the to-be provisioned device\n   * @param {String} options.clientUrl identifier for the web device\n   * @returns {Promise}\n   * @private\n   */\n  dialIn({\n    locusUrl,\n    dialInUrl,\n    clientUrl,\n    correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#dialIn --> Provisioning a dial in device',\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        provisionalType: PROVISIONAL_TYPE_DIAL_IN,\n        url: dialInUrl,\n        clientUrl\n      },\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#dialIn --> Error provisioning a dial in device, error ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to add a dial out device\n   * @param {Object} options\n   * @param {String} options.correlationId\n   * @param {String} options.localUrl url for the meeting\n   * @param {String} options.dialOutUrl identifier for the to-be provisioned device\n   * @param {String} options.phoneNumber phone number to dial out to\n   * @param {String} options.clientUrl identifier for the web device\n   * @returns {Promise}\n   * @private\n   */\n  dialOut({\n    locusUrl,\n    dialOutUrl,\n    phoneNumber,\n    clientUrl,\n    correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#dialOut --> Provisioning a dial out device',\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        provisionalType: PROVISIONAL_TYPE_DIAL_OUT,\n        url: dialOutUrl,\n        dialoutAddress: phoneNumber,\n        clientUrl\n      },\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#dialOut --> Error provisioning a dial out device, error ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#syncMeeting --> Error syncing meeting, error ${err}`);\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  getFullLocus(options) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl\n      }).catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#getFullLocus --> Error getting full locus, error ${err}`);\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to make a provisioned phone leave the meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.phoneUrl\n   * @param {String} options.correlationId\n   * @param {String} options.selfId\n   * @returns {Promise}\n   * @private\n   */\n  disconnectPhoneAudio({\n    locusUrl,\n    phoneUrl,\n    correlationId,\n    selfId\n  }) {\n    LoggerProxy.logger.info(\n      `Meeting:request#disconnectPhoneAudio --> request phone ${phoneUrl} to leave`,\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        url: phoneUrl\n      },\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    }).catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:request#disconnectPhoneAudio --> Error when requesting phone ${phoneUrl} to leave, error ${err}`\n      );\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {Url} options.locusUrl\n   * @param {String} options.selfId\n   * @param {Url} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting({\n    locusUrl,\n    selfId,\n    deviceUrl: url,\n    resourceId,\n    correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#leaveMeeting --> Leaving a meeting',\n      correlationId\n    );\n\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url\n      },\n      usingResource: resourceId || null,\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      correlationId: options.correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  recordMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      record: {\n        recording: options.recording,\n        paused: options.paused\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      ...(options.reason && {reason: options.reason})\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias,\n      clientMediaPreferences: {\n        preferTranscoding: options.preferTranscoding ?? true\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(options) {\n    let floorReq = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }\n          ]\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl\n        }\n      };\n    }\n\n    const body = {\n      floor: floorReq,\n      resourceUrl: options.resourceUrl\n    };\n\n    if (options?.resourceToken) {\n      body.resourceToken = options?.resourceToken;\n    }\n\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body\n    });\n  }\n\n  /**\n   * Sends a request to the DTMF endpoint to send tones\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   */\n  sendDTMF({locusUrl, deviceUrl, tones}) {\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: `${locusUrl}/${SEND_DTMF_ENDPOINT}`,\n      body: {\n        deviceUrl,\n        dtmf: {\n          correlationId: uuid.v4(),\n          tones\n        }\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the controls endpoint to set the video layout\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @param {Object} options.main preferred dimensions for the remote main video stream\n   * @param {Number} options.main.width preferred width of main video stream\n   * @param {Number} options.main.height preferred height of main video stream\n   * @param {Object} options.content preferred dimensions for the remote content share stream\n   * @param {Number} options.content.width preferred width of content share stream\n   * @param {Number} options.content.height preferred height of content share stream\n   * @returns {Promise}\n   */\n  changeVideoLayout({\n    locusUrl,\n    deviceUrl,\n    layoutType,\n    main,\n    content\n  }) {\n    // send main/content renderInfo only if both width and height are specified\n    if (main && (!main.width || !main.height)) {\n      return Promise.reject(new Error(`Both width and height must be specified. One of them is missing for main: ${JSON.stringify(main)}`));\n    }\n\n    if (content && (!content.width || !content.height)) {\n      return Promise.reject(new Error(`Both width and height must be specified. One of them is missing for content: ${JSON.stringify(content)}`));\n    }\n\n    const renderInfoMain = (main) ? {width: main.width, height: main.height} : undefined;\n    const renderInfoContent = (content) ? {width: content.width, height: content.height} : undefined;\n\n    const layoutParams = (renderInfoMain || renderInfoContent) ?\n      {\n        renderInfo:\n        {\n          main: renderInfoMain,\n          content: renderInfoContent\n        }\n      } : undefined;\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri: `${locusUrl}/${CONTROLS}`,\n      body: {\n        layout: {\n          deviceUrl,\n          type: layoutType,\n          layoutParams\n        }\n      }\n    });\n  }\n}\n"]}